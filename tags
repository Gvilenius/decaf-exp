!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/3fdf28bc/
A0	src/main/java/decaf/lowlevel/Mips.java	/^    public static final Reg A0 = new Reg(4, "$a0"); \/\/ arg 0$/;"	f	class:Mips
A1	src/main/java/decaf/lowlevel/Mips.java	/^    public static final Reg A1 = new Reg(5, "$a1"); \/\/ arg 1$/;"	f	class:Mips
A2	src/main/java/decaf/lowlevel/Mips.java	/^    public static final Reg A2 = new Reg(6, "$a2"); \/\/ arg 2$/;"	f	class:Mips
A3	src/main/java/decaf/lowlevel/Mips.java	/^    public static final Reg A3 = new Reg(7, "$a3"); \/\/ arg 3$/;"	f	class:Mips
ABSTRACT	build/generated-src/jacc/JaccTokens.java	/^    int ABSTRACT = 1;$/;"	f	interface:JaccTokens
ABSTRACT	build/generated-src/ll1pg/LLTable.java	/^    public static final int ABSTRACT = 287; \/\/# line 21$/;"	f	class:LLTable
ABSTRACT	src/main/java/decaf/frontend/parsing/Tokens.java	/^    int ABSTRACT = 200;$/;"	f	interface:Tokens
ABSTRACT	src/main/java/decaf/frontend/tree/Tree.java	/^        public static final int ABSTRACT = 2;$/;"	f	class:Tree.Modifiers
ADD	src/main/java/decaf/frontend/tree/Tree.java	/^        ADD, SUB, MUL, DIV, MOD,$/;"	e	enum:Tree.BinaryOp	file:
ADD	src/main/java/decaf/lowlevel/Mips.java	/^        ADD, SUB, MUL, DIV, REM,$/;"	e	enum:Mips.BinaryOp	file:
ADD	src/main/java/decaf/lowlevel/tac/Opcodes.java	/^    int ADD = 17;$/;"	f	interface:Opcodes
ADD	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^            ADD, SUB, MUL, DIV, MOD, EQU, NEQ, LES, LEQ, GTR, GEQ, LAND, LOR$/;"	e	enum:TacInstr.Binary.Op	file:
ALL	src/main/java/decaf/lowlevel/tac/Intrinsic.java	/^    public static final Intrinsic[] ALL = {$/;"	f	class:Intrinsic
ALLOCATE	src/main/java/decaf/lowlevel/tac/Intrinsic.java	/^        ALLOCATE, READ_LINE, READ_INT, STRING_EQUAL, PRINT_INT, PRINT_STRING, PRINT_BOOL, HALT$/;"	e	enum:Intrinsic.Opcode	file:
ALLOCATE	src/main/java/decaf/lowlevel/tac/Intrinsic.java	/^    public static final Intrinsic ALLOCATE = new Intrinsic(Opcode.ALLOCATE, "_Alloc", 1);$/;"	f	class:Intrinsic
AND	build/generated-src/jacc/JaccTokens.java	/^    int AND = 2;$/;"	f	interface:JaccTokens
AND	build/generated-src/ll1pg/LLTable.java	/^    public static final int AND = 279; \/\/# line 19$/;"	f	class:LLTable
AND	src/main/java/decaf/frontend/parsing/Tokens.java	/^    int AND = 23;$/;"	f	interface:Tokens
AND	src/main/java/decaf/frontend/tree/Tree.java	/^        AND, OR$/;"	e	enum:Tree.BinaryOp	file:
AND	src/main/java/decaf/lowlevel/Mips.java	/^        AND, OR$/;"	e	enum:Mips.BinaryOp	file:
ANSI_BLACK	src/main/java/decaf/lowlevel/log/ColorConsoleHandler.java	/^    public static final String ANSI_BLACK = "\\u001B[30m";$/;"	f	class:ColorConsoleHandler
ANSI_BLUE	src/main/java/decaf/lowlevel/log/ColorConsoleHandler.java	/^    public static final String ANSI_BLUE = "\\u001B[34m";$/;"	f	class:ColorConsoleHandler
ANSI_CYAN	src/main/java/decaf/lowlevel/log/ColorConsoleHandler.java	/^    public static final String ANSI_CYAN = "\\u001B[36m";$/;"	f	class:ColorConsoleHandler
ANSI_GREEN	src/main/java/decaf/lowlevel/log/ColorConsoleHandler.java	/^    public static final String ANSI_GREEN = "\\u001B[32m";$/;"	f	class:ColorConsoleHandler
ANSI_PURPLE	src/main/java/decaf/lowlevel/log/ColorConsoleHandler.java	/^    public static final String ANSI_PURPLE = "\\u001B[35m";$/;"	f	class:ColorConsoleHandler
ANSI_RED	src/main/java/decaf/lowlevel/log/ColorConsoleHandler.java	/^    public static final String ANSI_RED = "\\u001B[31m";$/;"	f	class:ColorConsoleHandler
ANSI_RESET	src/main/java/decaf/lowlevel/log/ColorConsoleHandler.java	/^    public static final String ANSI_RESET = "\\u001B[0m";$/;"	f	class:ColorConsoleHandler
ANSI_WHITE	src/main/java/decaf/lowlevel/log/ColorConsoleHandler.java	/^    public static final String ANSI_WHITE = "\\u001B[37m";$/;"	f	class:ColorConsoleHandler
ANSI_YELLOW	src/main/java/decaf/lowlevel/log/ColorConsoleHandler.java	/^    public static final String ANSI_YELLOW = "\\u001B[33m";$/;"	f	class:ColorConsoleHandler
APP_BASE_NAME	gradlew.bat	/^set APP_BASE_NAME=%~n0$/;"	v
APP_HOME	gradlew.bat	/^set APP_HOME=%DIRNAME%$/;"	v
ARRAY_INDEX_OUT_OF_BOUND	src/main/java/decaf/lowlevel/tac/RuntimeError.java	/^    public static final String ARRAY_INDEX_OUT_OF_BOUND = "Decaf runtime error: Array subscript /;"	f	class:RuntimeError
ASSIGN	src/main/java/decaf/frontend/tree/Tree.java	/^        LOCAL_VAR_DEF, BLOCK, ASSIGN, EXPR_EVAL, SKIP, IF, WHILE, FOR, BREAK, RETURN, PRINT,$/;"	e	enum:Tree.Kind	file:
ASSIGN	src/main/java/decaf/lowlevel/tac/Opcodes.java	/^    int ASSIGN = 9;$/;"	f	interface:Opcodes
AT	src/main/java/decaf/lowlevel/Mips.java	/^    public static final Reg AT = new Reg(1, "$at"); \/\/ assembler reserved (not used by decaf)$/;"	f	class:Mips
AbstractLexer	src/main/java/decaf/frontend/parsing/AbstractLexer.java	/^abstract class AbstractLexer<P extends AbstractParser> {$/;"	c
AbstractParser	src/main/java/decaf/frontend/parsing/AbstractParser.java	/^abstract class AbstractParser {$/;"	c
Add to Your Decaf Project	TestCases/README.md	/^## Add to Your Decaf Project$/;"	s
AfterIdField	build/generated-src/ll1pg/LLTable.java	/^    public static final int AfterIdField = 326;$/;"	f	class:LLTable
AfterIdField	src/main/ll1pg/Decaf.spec	/^AfterIdField    :   ';'$/;"	t
AfterLBrack	build/generated-src/ll1pg/LLTable.java	/^    public static final int AfterLBrack = 336;$/;"	f	class:LLTable
AfterLBrack	src/main/ll1pg/Decaf.spec	/^AfterLBrack     :   ']' '[' AfterLBrack$/;"	t
AfterNewExpr	build/generated-src/ll1pg/LLTable.java	/^    public static final int AfterNewExpr = 320;$/;"	f	class:LLTable
AfterNewExpr	src/main/ll1pg/Decaf.spec	/^AfterNewExpr    :   Id '(' ')'$/;"	t
AfterParenExpr	build/generated-src/ll1pg/LLTable.java	/^    public static final int AfterParenExpr = 310;$/;"	f	class:LLTable
AfterParenExpr	src/main/ll1pg/Decaf.spec	/^AfterParenExpr  :   Expr ')'$/;"	t
ArrayType	build/generated-src/ll1pg/LLTable.java	/^    public static final int ArrayType = 323;$/;"	f	class:LLTable
ArrayType	src/main/java/decaf/frontend/type/ArrayType.java	/^    public ArrayType(Type elementType) {$/;"	m	class:ArrayType
ArrayType	src/main/java/decaf/frontend/type/ArrayType.java	/^public final class ArrayType extends Type {$/;"	c
ArrayType	src/main/ll1pg/Decaf.spec	/^ArrayType       :   '[' ']' ArrayType$/;"	t
Asm	src/main/java/decaf/backend/asm/Asm.java	/^    public Asm(AsmEmitter emitter, RegAlloc regAlloc, Config config) {$/;"	m	class:Asm
Asm	src/main/java/decaf/backend/asm/Asm.java	/^public class Asm extends Phase<TacProg, String> {$/;"	c
AsmCodePrinter	src/main/java/decaf/lowlevel/AsmCodePrinter.java	/^public class AsmCodePrinter {$/;"	c
AsmEmitter	src/main/java/decaf/backend/asm/AsmEmitter.java	/^    public AsmEmitter(String platformName, Reg[] allocatableRegs, Reg[] callerSaveRegs) {$/;"	m	class:AsmEmitter
AsmEmitter	src/main/java/decaf/backend/asm/AsmEmitter.java	/^public abstract class AsmEmitter {$/;"	c
Assign	src/main/java/decaf/frontend/tree/Tree.java	/^        public Assign(LValue lhs, Expr rhs, Pos pos) {$/;"	m	class:Tree.Assign
Assign	src/main/java/decaf/frontend/tree/Tree.java	/^    public static class Assign extends Stmt {$/;"	c	class:Tree
Assign	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public Assign(Temp dst, Temp src) {$/;"	m	class:TacInstr.Assign
Assign	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^    public static class Assign extends TacInstr {$/;"	c	class:TacInstr
AssignMethodMemberError	src/main/java/decaf/driver/error/AssignMethodMemberError.java	/^    public AssignMethodMemberError(Pos pos,String method){$/;"	m	class:AssignMethodMemberError
AssignMethodMemberError	src/main/java/decaf/driver/error/AssignMethodMemberError.java	/^public class AssignMethodMemberError extends DecafError {$/;"	c
AtomType	build/generated-src/ll1pg/LLTable.java	/^    public static final int AtomType = 321;$/;"	f	class:LLTable
AtomType	src/main/ll1pg/Decaf.spec	/^AtomType        :   INT$/;"	t
BEQZ	src/main/java/decaf/lowlevel/Mips.java	/^        BEQZ, BNEZ$/;"	e	enum:Mips.BranchOp	file:
BEQZ	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^            BEQZ, BNEZ$/;"	e	enum:TacInstr.CondBranch.Op	file:
BINARY_EXPR	src/main/java/decaf/frontend/tree/Tree.java	/^        THIS, UNARY_EXPR, BINARY_EXPR, READ_INT, READ_LINE, NEW_CLASS, NEW_ARRAY, CLASS_TEST, CL/;"	e	enum:Tree.Kind	file:
BLOCK	src/main/java/decaf/frontend/parsing/SemValue.java	/^        TOKEN, CLASS, CLASS_LIST, FIELD, FIELD_LIST, VAR, VAR_LIST, TYPE, STMT, STMT_LIST, BLOCK/;"	e	enum:SemValue.Kind	file:
BLOCK	src/main/java/decaf/frontend/tree/Tree.java	/^        LOCAL_VAR_DEF, BLOCK, ASSIGN, EXPR_EVAL, SKIP, IF, WHILE, FOR, BREAK, RETURN, PRINT,$/;"	e	enum:Tree.Kind	file:
BNEZ	src/main/java/decaf/lowlevel/Mips.java	/^        BEQZ, BNEZ$/;"	e	enum:Mips.BranchOp	file:
BNEZ	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^            BEQZ, BNEZ$/;"	e	enum:TacInstr.CondBranch.Op	file:
BOOL	build/generated-src/jacc/JaccTokens.java	/^    int BOOL = 3;$/;"	f	interface:JaccTokens
BOOL	build/generated-src/ll1pg/LLTable.java	/^    public static final int BOOL = 258; \/\/# line 14$/;"	f	class:LLTable
BOOL	src/main/java/decaf/frontend/parsing/Tokens.java	/^    int BOOL = 2;$/;"	f	interface:Tokens
BOOL	src/main/java/decaf/frontend/type/BuiltInType.java	/^    public static final BuiltInType BOOL = new BuiltInType("bool");$/;"	f	class:BuiltInType
BOOL_LIT	build/generated-src/jacc/JaccTokens.java	/^    int BOOL_LIT = 4;$/;"	f	interface:JaccTokens
BOOL_LIT	build/generated-src/ll1pg/LLTable.java	/^    public static final int BOOL_LIT = 275; \/\/# line 18$/;"	f	class:LLTable
BOOL_LIT	src/main/java/decaf/frontend/parsing/Tokens.java	/^    int BOOL_LIT = 19;$/;"	f	interface:Tokens
BOOL_LIT	src/main/java/decaf/frontend/tree/Tree.java	/^        INT_LIT, BOOL_LIT, STRING_LIT, NULL_LIT, VAR_SEL, INDEX_SEL, CALL,$/;"	e	enum:Tree.Kind	file:
BRANCH	src/main/java/decaf/lowlevel/tac/Opcodes.java	/^    int BRANCH = 2;$/;"	f	interface:Opcodes
BREAK	build/generated-src/jacc/JaccTokens.java	/^    int BREAK = 5;$/;"	f	interface:JaccTokens
BREAK	build/generated-src/ll1pg/LLTable.java	/^    public static final int BREAK = 270; \/\/# line 16$/;"	f	class:LLTable
BREAK	src/main/java/decaf/frontend/parsing/Tokens.java	/^    int BREAK = 14;$/;"	f	interface:Tokens
BREAK	src/main/java/decaf/frontend/tree/Tree.java	/^        LOCAL_VAR_DEF, BLOCK, ASSIGN, EXPR_EVAL, SKIP, IF, WHILE, FOR, BREAK, RETURN, PRINT,$/;"	e	enum:Tree.Kind	file:
BadArgCountError	src/main/java/decaf/driver/error/BadArgCountError.java	/^    public BadArgCountError(Pos pos, String method, int expect,$/;"	m	class:BadArgCountError
BadArgCountError	src/main/java/decaf/driver/error/BadArgCountError.java	/^public class BadArgCountError extends DecafError {$/;"	c
BadArgTypeError	src/main/java/decaf/driver/error/BadArgTypeError.java	/^    public BadArgTypeError(Pos pos, int count, String given,$/;"	m	class:BadArgTypeError
BadArgTypeError	src/main/java/decaf/driver/error/BadArgTypeError.java	/^public class BadArgTypeError extends DecafError {$/;"	c
BadArrElementError	src/main/java/decaf/driver/error/BadArrElementError.java	/^    public BadArrElementError(Pos pos) {$/;"	m	class:BadArrElementError
BadArrElementError	src/main/java/decaf/driver/error/BadArrElementError.java	/^public class BadArrElementError extends DecafError {$/;"	c
BadEscCharError	src/main/java/decaf/driver/error/BadEscCharError.java	/^    public BadEscCharError(Pos pos) {$/;"	m	class:BadEscCharError
BadEscCharError	src/main/java/decaf/driver/error/BadEscCharError.java	/^public class BadEscCharError extends DecafError {$/;"	c
BadInheritanceError	src/main/java/decaf/driver/error/BadInheritanceError.java	/^    public BadInheritanceError(Pos pos) {$/;"	m	class:BadInheritanceError
BadInheritanceError	src/main/java/decaf/driver/error/BadInheritanceError.java	/^public class BadInheritanceError extends DecafError {$/;"	c
BadLambdaArgCountError	src/main/java/decaf/driver/error/BadLambdaArgCountError.java	/^    public BadLambdaArgCountError(Pos pos, int expect, int count) {$/;"	m	class:BadLambdaArgCountError
BadLambdaArgCountError	src/main/java/decaf/driver/error/BadLambdaArgCountError.java	/^public class BadLambdaArgCountError extends DecafError {$/;"	c
BadLengthArgError	src/main/java/decaf/driver/error/BadLengthArgError.java	/^    public BadLengthArgError(Pos pos, int count) {$/;"	m	class:BadLengthArgError
BadLengthArgError	src/main/java/decaf/driver/error/BadLengthArgError.java	/^public class BadLengthArgError extends DecafError {$/;"	c
BadLengthError	src/main/java/decaf/driver/error/BadLengthError.java	/^    public BadLengthError(Pos pos) {$/;"	m	class:BadLengthError
BadLengthError	src/main/java/decaf/driver/error/BadLengthError.java	/^public class BadLengthError extends DecafError {$/;"	c
BadNewArrayLength	src/main/java/decaf/driver/error/BadNewArrayLength.java	/^    public BadNewArrayLength(Pos pos) {$/;"	m	class:BadNewArrayLength
BadNewArrayLength	src/main/java/decaf/driver/error/BadNewArrayLength.java	/^public class BadNewArrayLength extends DecafError {$/;"	c
BadOverrideError	src/main/java/decaf/driver/error/BadOverrideError.java	/^    public BadOverrideError(Pos pos, String funcName,$/;"	m	class:BadOverrideError
BadOverrideError	src/main/java/decaf/driver/error/BadOverrideError.java	/^public class BadOverrideError extends DecafError {$/;"	c
BadPrintArgError	src/main/java/decaf/driver/error/BadPrintArgError.java	/^    public BadPrintArgError(Pos pos, String count, String type) {$/;"	m	class:BadPrintArgError
BadPrintArgError	src/main/java/decaf/driver/error/BadPrintArgError.java	/^public class BadPrintArgError extends DecafError {$/;"	c
BadReturnTypeError	src/main/java/decaf/driver/error/BadReturnTypeError.java	/^    public BadReturnTypeError(Pos pos, String expect, String given) {$/;"	m	class:BadReturnTypeError
BadReturnTypeError	src/main/java/decaf/driver/error/BadReturnTypeError.java	/^public class BadReturnTypeError extends DecafError {$/;"	c
BadTestExpr	src/main/java/decaf/driver/error/BadTestExpr.java	/^    public BadTestExpr(Pos pos) {$/;"	m	class:BadTestExpr
BadTestExpr	src/main/java/decaf/driver/error/BadTestExpr.java	/^public class BadTestExpr extends DecafError {$/;"	c
BadVarTypeError	src/main/java/decaf/driver/error/BadVarTypeError.java	/^    public BadVarTypeError(Pos pos, String name) {$/;"	m	class:BadVarTypeError
BadVarTypeError	src/main/java/decaf/driver/error/BadVarTypeError.java	/^public class BadVarTypeError extends DecafError {$/;"	c
BaseParser	src/main/java/decaf/frontend/parsing/JaccParser.java	/^    static abstract class BaseParser extends AbstractParser {$/;"	c	class:JaccParser
BasicBlock	src/main/java/decaf/backend/dataflow/BasicBlock.java	/^    public BasicBlock(Kind kind, int id, Optional<Label> label, List<Loc<I>> locs) {$/;"	m	class:BasicBlock
BasicBlock	src/main/java/decaf/backend/dataflow/BasicBlock.java	/^public class BasicBlock<I extends PseudoInstr> implements Iterable<Loc<I>> {$/;"	c
Binary	src/main/java/decaf/frontend/tree/Tree.java	/^        public Binary(BinaryOp op, Expr lhs, Expr rhs, Pos pos) {$/;"	m	class:Tree.Binary
Binary	src/main/java/decaf/frontend/tree/Tree.java	/^    public static class Binary extends Expr {$/;"	c	class:Tree
Binary	src/main/java/decaf/lowlevel/Mips.java	/^        public Binary(BinaryOp op, Temp dst, Temp src0, Temp src1) {$/;"	m	class:Mips.Binary
Binary	src/main/java/decaf/lowlevel/Mips.java	/^    public static class Binary extends PseudoInstr {$/;"	c	class:Mips
Binary	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public Binary(Op op, Temp dst, Temp lhs, Temp rhs) {$/;"	m	class:TacInstr.Binary
Binary	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^    public static class Binary extends TacInstr {$/;"	c	class:TacInstr
BinaryOp	src/main/java/decaf/frontend/tree/Tree.java	/^    public enum BinaryOp {$/;"	g	class:Tree
BinaryOp	src/main/java/decaf/lowlevel/Mips.java	/^    public enum BinaryOp {$/;"	g	class:Mips
Block	build/generated-src/ll1pg/LLTable.java	/^    public static final int Block = 331;$/;"	f	class:LLTable
Block	src/main/java/decaf/frontend/tree/Tree.java	/^        public Block(List<Stmt> stmts, Pos pos) {$/;"	m	class:Tree.Block
Block	src/main/java/decaf/frontend/tree/Tree.java	/^    public static class Block extends Stmt {$/;"	c	class:Tree
Block	src/main/java/decaf/lowlevel/tac/Simulator.java	/^        private class Block implements Comparable<Block> {$/;"	c	class:Simulator.Memory
Block	src/main/ll1pg/Decaf.spec	/^Block           :   '{' StmtList '}'$/;"	t
BoolLit	src/main/java/decaf/frontend/tree/Tree.java	/^        public BoolLit(boolean value, Pos pos) {$/;"	m	class:Tree.BoolLit
BoolLit	src/main/java/decaf/frontend/tree/Tree.java	/^    public static class BoolLit extends Expr {$/;"	c	class:Tree
Branch	src/main/java/decaf/lowlevel/Mips.java	/^        public Branch(BranchOp op, Temp src, Label to) {$/;"	m	class:Mips.Branch
Branch	src/main/java/decaf/lowlevel/Mips.java	/^    public static class Branch extends PseudoInstr {$/;"	c	class:Mips
Branch	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public Branch(Label target) {$/;"	m	class:TacInstr.Branch
Branch	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^    public static class Branch extends TacInstr {$/;"	c	class:TacInstr
BranchOp	src/main/java/decaf/lowlevel/Mips.java	/^    public enum BranchOp {$/;"	g	class:Mips
Break	src/main/java/decaf/frontend/tree/Tree.java	/^        public Break(Pos pos) {$/;"	m	class:Tree.Break
Break	src/main/java/decaf/frontend/tree/Tree.java	/^    public static class Break extends Stmt {$/;"	c	class:Tree
BreakOutOfLoopError	src/main/java/decaf/driver/error/BreakOutOfLoopError.java	/^    public BreakOutOfLoopError(Pos pos) {$/;"	m	class:BreakOutOfLoopError
BreakOutOfLoopError	src/main/java/decaf/driver/error/BreakOutOfLoopError.java	/^public class BreakOutOfLoopError extends DecafError {$/;"	c
BruteRegAlloc	src/main/java/decaf/backend/reg/BruteRegAlloc.java	/^    public BruteRegAlloc(AsmEmitter emitter) {$/;"	m	class:BruteRegAlloc
BruteRegAlloc	src/main/java/decaf/backend/reg/BruteRegAlloc.java	/^public final class BruteRegAlloc extends RegAlloc {$/;"	c
Build	README.md	/^## Build$/;"	s
BuiltInType	src/main/java/decaf/frontend/type/BuiltInType.java	/^    private BuiltInType(String name) {$/;"	m	class:BuiltInType	file:
BuiltInType	src/main/java/decaf/frontend/type/BuiltInType.java	/^public final class BuiltInType extends Type {$/;"	c
CALL	src/main/java/decaf/frontend/tree/Tree.java	/^        INT_LIT, BOOL_LIT, STRING_LIT, NULL_LIT, VAR_SEL, INDEX_SEL, CALL,$/;"	e	enum:Tree.Kind	file:
CALLER_RESTORE	src/main/java/decaf/backend/asm/HoleInstr.java	/^    private static final String CALLER_RESTORE = "# TODO: caller restore";$/;"	f	class:HoleInstr	file:
CALLER_SAVE	src/main/java/decaf/backend/asm/HoleInstr.java	/^    private static final String CALLER_SAVE = "# TODO: caller save";$/;"	f	class:HoleInstr	file:
CAST	build/generated-src/jacc/JaccTokens.java	/^    int CAST = 6;$/;"	f	interface:JaccTokens
CFG	src/main/java/decaf/backend/dataflow/CFG.java	/^    CFG(List<BasicBlock<I>> nodes, List<Pair<Integer, Integer>> edges) {$/;"	m	class:CFG
CFG	src/main/java/decaf/backend/dataflow/CFG.java	/^public class CFG<I extends PseudoInstr> implements Iterable<BasicBlock<I>> {$/;"	c
CFGBuilder	src/main/java/decaf/backend/dataflow/CFGBuilder.java	/^public class CFGBuilder<I extends PseudoInstr> {$/;"	c
CLASS	build/generated-src/jacc/JaccTokens.java	/^    int CLASS = 7;$/;"	f	interface:JaccTokens
CLASS	build/generated-src/ll1pg/LLTable.java	/^    public static final int CLASS = 261; \/\/# line 14$/;"	f	class:LLTable
CLASS	src/main/java/decaf/frontend/parsing/SemValue.java	/^        TOKEN, CLASS, CLASS_LIST, FIELD, FIELD_LIST, VAR, VAR_LIST, TYPE, STMT, STMT_LIST, BLOCK/;"	e	enum:SemValue.Kind	file:
CLASS	src/main/java/decaf/frontend/parsing/Tokens.java	/^    int CLASS = 5;$/;"	f	interface:Tokens
CLASS	src/main/java/decaf/frontend/scope/Scope.java	/^        GLOBAL, CLASS, FORMAL, LOCAL, LAMBDA$/;"	e	enum:Scope.Kind	file:
CLASSPATH	gradlew.bat	/^set CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar$/;"	v
CLASS_CAST	src/main/java/decaf/frontend/tree/Tree.java	/^        THIS, UNARY_EXPR, BINARY_EXPR, READ_INT, READ_LINE, NEW_CLASS, NEW_ARRAY, CLASS_TEST, CL/;"	e	enum:Tree.Kind	file:
CLASS_CAST_ERROR1	src/main/java/decaf/lowlevel/tac/RuntimeError.java	/^    public static final String CLASS_CAST_ERROR1 = "Decaf runtime error: ";$/;"	f	class:RuntimeError
CLASS_CAST_ERROR2	src/main/java/decaf/lowlevel/tac/RuntimeError.java	/^    public static final String CLASS_CAST_ERROR2 = " cannot be cast to ";$/;"	f	class:RuntimeError
CLASS_CAST_ERROR3	src/main/java/decaf/lowlevel/tac/RuntimeError.java	/^    public static final String CLASS_CAST_ERROR3 = "\\n";$/;"	f	class:RuntimeError
CLASS_DEF	src/main/java/decaf/frontend/tree/Tree.java	/^        TOP_LEVEL, CLASS_DEF, VAR_DEF, METHOD_DEF,$/;"	e	enum:Tree.Kind	file:
CLASS_LIST	src/main/java/decaf/frontend/parsing/SemValue.java	/^        TOKEN, CLASS, CLASS_LIST, FIELD, FIELD_LIST, VAR, VAR_LIST, TYPE, STMT, STMT_LIST, BLOCK/;"	e	enum:SemValue.Kind	file:
CLASS_TEST	src/main/java/decaf/frontend/tree/Tree.java	/^        THIS, UNARY_EXPR, BINARY_EXPR, READ_INT, READ_LINE, NEW_CLASS, NEW_ARRAY, CLASS_TEST, CL/;"	e	enum:Tree.Kind	file:
CMD_LINE_ARGS	gradlew.bat	/^set CMD_LINE_ARGS=$/;"	v
CMD_LINE_ARGS	gradlew.bat	/^set CMD_LINE_ARGS=%*$/;"	v
COMMENT_PROMPT	src/main/java/decaf/lowlevel/AsmCodePrinter.java	/^    protected final String COMMENT_PROMPT = "#";$/;"	f	class:AsmCodePrinter
COND_JMP	src/main/java/decaf/lowlevel/instr/PseudoInstr.java	/^        LABEL, SEQ, JMP, COND_JMP, RET$/;"	e	enum:PseudoInstr.Kind	file:
CONTINUOUS	src/main/java/decaf/backend/dataflow/BasicBlock.java	/^        CONTINUOUS, END_BY_JUMP, END_BY_COND_JUMP, END_BY_RETURN$/;"	e	enum:BasicBlock.Kind	file:
Call	src/main/java/decaf/frontend/tree/Tree.java	/^        public Call(Expr expr, List<Expr> args, Pos pos){$/;"	m	class:Tree.Call
Call	src/main/java/decaf/frontend/tree/Tree.java	/^    public static class Call extends Expr {$/;"	c	class:Tree
CallerRestore	src/main/java/decaf/backend/asm/HoleInstr.java	/^    public final static HoleInstr CallerRestore = new HoleInstr(CALLER_RESTORE);$/;"	f	class:HoleInstr
CallerSave	src/main/java/decaf/backend/asm/HoleInstr.java	/^    public final static HoleInstr CallerSave = new HoleInstr(CALLER_SAVE);$/;"	f	class:HoleInstr
ClassCast	src/main/java/decaf/frontend/tree/Tree.java	/^        public ClassCast(Expr obj, Id to, Pos pos) {$/;"	m	class:Tree.ClassCast
ClassCast	src/main/java/decaf/frontend/tree/Tree.java	/^    public static class ClassCast extends Expr {$/;"	c	class:Tree
ClassDef	build/generated-src/ll1pg/LLTable.java	/^    public static final int ClassDef = 311;$/;"	f	class:LLTable
ClassDef	src/main/java/decaf/frontend/tree/Tree.java	/^        public ClassDef(Id id, Optional<Id> parent, List<Field> fields, Pos pos) {$/;"	m	class:Tree.ClassDef
ClassDef	src/main/java/decaf/frontend/tree/Tree.java	/^        public ClassDef(boolean isAbstract, Id id, Optional<Id> parent, List<Field> fields, Pos /;"	m	class:Tree.ClassDef
ClassDef	src/main/java/decaf/frontend/tree/Tree.java	/^    public static class ClassDef extends TreeNode {$/;"	c	class:Tree
ClassDef	src/main/ll1pg/Decaf.spec	/^ClassDef        :   CLASS Id ExtendsClause '{' FieldList '}'$/;"	t
ClassInfo	src/main/java/decaf/lowlevel/tac/ClassInfo.java	/^    public ClassInfo(String name, Optional<String> parent, Set<String> memberVariables,$/;"	m	class:ClassInfo
ClassInfo	src/main/java/decaf/lowlevel/tac/ClassInfo.java	/^public class ClassInfo {$/;"	c
ClassList	build/generated-src/ll1pg/LLTable.java	/^    public static final int ClassList = 343;$/;"	f	class:LLTable
ClassList	src/main/ll1pg/Decaf.spec	/^ClassList       :   ClassDef ClassList$/;"	t
ClassNotFoundError	src/main/java/decaf/driver/error/ClassNotFoundError.java	/^    public ClassNotFoundError(Pos pos, String name) {$/;"	m	class:ClassNotFoundError
ClassNotFoundError	src/main/java/decaf/driver/error/ClassNotFoundError.java	/^public class ClassNotFoundError extends DecafError {$/;"	c
ClassScope	src/main/java/decaf/frontend/scope/ClassScope.java	/^    public ClassScope() {$/;"	m	class:ClassScope
ClassScope	src/main/java/decaf/frontend/scope/ClassScope.java	/^    public ClassScope(ClassScope superScope) {$/;"	m	class:ClassScope
ClassScope	src/main/java/decaf/frontend/scope/ClassScope.java	/^public class ClassScope extends Scope {$/;"	c
ClassSymbol	src/main/java/decaf/frontend/symbol/ClassSymbol.java	/^    public ClassSymbol(String name, ClassSymbol parentSymbol, ClassType type, ClassScope scope, /;"	m	class:ClassSymbol
ClassSymbol	src/main/java/decaf/frontend/symbol/ClassSymbol.java	/^    public ClassSymbol(String name, ClassType type, ClassScope scope, Pos pos,  Tree.Modifiers m/;"	m	class:ClassSymbol
ClassSymbol	src/main/java/decaf/frontend/symbol/ClassSymbol.java	/^public final class ClassSymbol extends Symbol {$/;"	c
ClassTest	src/main/java/decaf/frontend/tree/Tree.java	/^        public ClassTest(Expr obj, Id is, Pos pos) {$/;"	m	class:Tree.ClassTest
ClassTest	src/main/java/decaf/frontend/tree/Tree.java	/^    public static class ClassTest extends Expr {$/;"	c	class:Tree
ClassType	src/main/java/decaf/frontend/type/ClassType.java	/^    public ClassType(String name) {$/;"	m	class:ClassType
ClassType	src/main/java/decaf/frontend/type/ClassType.java	/^    public ClassType(String name, ClassType superType) {$/;"	m	class:ClassType
ClassType	src/main/java/decaf/frontend/type/ClassType.java	/^public final class ClassType extends Type {$/;"	c
ColorConsoleHandler	src/main/java/decaf/lowlevel/log/ColorConsoleHandler.java	/^public class ColorConsoleHandler extends ConsoleHandler {$/;"	c
CondBranch	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public CondBranch(Op op, Temp cond, Label target) {$/;"	m	class:TacInstr.CondBranch
CondBranch	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^    public static class CondBranch extends TacInstr {$/;"	c	class:TacInstr
Config	src/main/java/decaf/driver/Config.java	/^    private Config(FileInputStream source, Path sourcePath, OutputStream output, Path dstPath, T/;"	m	class:Config	file:
Config	src/main/java/decaf/driver/Config.java	/^public class Config {$/;"	c
Context	src/main/java/decaf/lowlevel/tac/ProgramWriter.java	/^    class Context {$/;"	c	class:ProgramWriter
DECAF_JAR	TestCases/testAll.py	/^DECAF_JAR = os.path.join('..', 'build', 'libs', 'decaf.jar')$/;"	v
DEFAULT_JVM_OPTS	gradlew.bat	/^set DEFAULT_JVM_OPTS="-Xmx64m"$/;"	v
DIRECT_CALL	src/main/java/decaf/lowlevel/tac/Opcodes.java	/^    int DIRECT_CALL = 16;$/;"	f	interface:Opcodes
DIRECT_CALL_VOID	src/main/java/decaf/lowlevel/tac/Opcodes.java	/^    int DIRECT_CALL_VOID = 8;$/;"	f	interface:Opcodes
DIRNAME	gradlew.bat	/^if "%DIRNAME%" == "" set DIRNAME=.$/;"	v
DIRNAME	gradlew.bat	/^set DIRNAME=%~dp0$/;"	v
DIV	src/main/java/decaf/frontend/tree/Tree.java	/^        ADD, SUB, MUL, DIV, MOD,$/;"	e	enum:Tree.BinaryOp	file:
DIV	src/main/java/decaf/lowlevel/Mips.java	/^        ADD, SUB, MUL, DIV, REM,$/;"	e	enum:Mips.BinaryOp	file:
DIV	src/main/java/decaf/lowlevel/tac/Opcodes.java	/^    int DIV = 20;$/;"	f	interface:Opcodes
DIV	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^            ADD, SUB, MUL, DIV, MOD, EQU, NEQ, LES, LEQ, GTR, GEQ, LAND, LOR$/;"	e	enum:TacInstr.Binary.Op	file:
DIVIDE_OR_MOD_ZERO_ERROR	src/main/java/decaf/lowlevel/tac/RuntimeError.java	/^    public static final String DIVIDE_OR_MOD_ZERO_ERROR = "Decaf runtime error: Division by zero/;"	f	class:RuntimeError
DST	src/main/java/decaf/driver/OptParser.java	/^    static final String DST = "d";$/;"	f	class:OptParser
DecafError	src/main/java/decaf/driver/error/DecafError.java	/^    public DecafError(Pos pos) {$/;"	m	class:DecafError
DecafError	src/main/java/decaf/driver/error/DecafError.java	/^public abstract class DecafError {$/;"	c
DecafJaccParser	build/generated-src/jacc/DecafJaccParser.java	/^public class DecafJaccParser extends JaccParser.BaseParser implements JaccTokens {$/;"	c
DecafLexer	build/generated-src/jflex/DecafLexer.java	/^  public DecafLexer(java.io.Reader in) {$/;"	m	class:DecafLexer
DecafLexer	build/generated-src/jflex/DecafLexer.java	/^public class DecafLexer<P extends AbstractParser> extends AbstractLexer<P> {$/;"	c
DeclConflictError	src/main/java/decaf/driver/error/DeclConflictError.java	/^    public DeclConflictError(Pos pos, String name, Pos earlier) {$/;"	m	class:DeclConflictError
DeclConflictError	src/main/java/decaf/driver/error/DeclConflictError.java	/^public class DeclConflictError extends DecafError {$/;"	c
Development & Contribution	README.md	/^## Development & Contribution$/;"	s
DirectCall	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public DirectCall(Intrinsic intrinsic) {$/;"	m	class:TacInstr.DirectCall
DirectCall	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public DirectCall(Label entry) {$/;"	m	class:TacInstr.DirectCall
DirectCall	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public DirectCall(Temp dst, Intrinsic intrinsic) {$/;"	m	class:TacInstr.DirectCall
DirectCall	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public DirectCall(Temp dst, Label entry) {$/;"	m	class:TacInstr.DirectCall
DirectCall	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^    public static class DirectCall extends TacInstr {$/;"	c	class:TacInstr
ELSE	build/generated-src/jacc/JaccTokens.java	/^    int ELSE = 8;$/;"	f	interface:JaccTokens
ELSE	build/generated-src/ll1pg/LLTable.java	/^    public static final int ELSE = 268; \/\/# line 16$/;"	f	class:LLTable
ELSE	src/main/java/decaf/frontend/parsing/Tokens.java	/^    int ELSE = 12;$/;"	f	interface:Tokens
EMPTY	build/generated-src/jacc/JaccTokens.java	/^    int EMPTY = 9;$/;"	f	interface:JaccTokens
ENDINPUT	build/generated-src/jacc/JaccTokens.java	/^    int ENDINPUT = 0;$/;"	f	interface:JaccTokens
END_BY_COND_JUMP	src/main/java/decaf/backend/dataflow/BasicBlock.java	/^        CONTINUOUS, END_BY_JUMP, END_BY_COND_JUMP, END_BY_RETURN$/;"	e	enum:BasicBlock.Kind	file:
END_BY_JUMP	src/main/java/decaf/backend/dataflow/BasicBlock.java	/^        CONTINUOUS, END_BY_JUMP, END_BY_COND_JUMP, END_BY_RETURN$/;"	e	enum:BasicBlock.Kind	file:
END_BY_RETURN	src/main/java/decaf/backend/dataflow/BasicBlock.java	/^        CONTINUOUS, END_BY_JUMP, END_BY_COND_JUMP, END_BY_RETURN$/;"	e	enum:BasicBlock.Kind	file:
END_LINE	src/main/java/decaf/lowlevel/AsmCodePrinter.java	/^    protected final String END_LINE = "\\n";$/;"	f	class:AsmCodePrinter
EPILOGUE_SUFFIX	src/main/java/decaf/lowlevel/Mips.java	/^    public static final String EPILOGUE_SUFFIX = "_exit";$/;"	f	class:Mips
EQ	src/main/java/decaf/frontend/tree/Tree.java	/^        EQ, NE, GE, GT, LE, LT,$/;"	e	enum:Tree.BinaryOp	file:
EQU	src/main/java/decaf/lowlevel/tac/Opcodes.java	/^    int EQU = 22;$/;"	f	interface:Opcodes
EQU	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^            ADD, SUB, MUL, DIV, MOD, EQU, NEQ, LES, LEQ, GTR, GEQ, LAND, LOR$/;"	e	enum:TacInstr.Binary.Op	file:
EQUAL	build/generated-src/jacc/JaccTokens.java	/^    int EQUAL = 10;$/;"	f	interface:JaccTokens
EQUAL	build/generated-src/ll1pg/LLTable.java	/^    public static final int EQUAL = 285; \/\/# line 20$/;"	f	class:LLTable
EQUAL	src/main/java/decaf/frontend/parsing/Tokens.java	/^    int EQUAL = 29;$/;"	f	interface:Tokens
ERROR	src/main/java/decaf/frontend/type/BuiltInType.java	/^    public static final BuiltInType ERROR = new BuiltInType("Error");$/;"	f	class:BuiltInType
EXPR	src/main/java/decaf/frontend/parsing/SemValue.java	/^        TOKEN, CLASS, CLASS_LIST, FIELD, FIELD_LIST, VAR, VAR_LIST, TYPE, STMT, STMT_LIST, BLOCK/;"	e	enum:SemValue.Kind	file:
EXPR_EVAL	src/main/java/decaf/frontend/tree/Tree.java	/^        LOCAL_VAR_DEF, BLOCK, ASSIGN, EXPR_EVAL, SKIP, IF, WHILE, FOR, BREAK, RETURN, PRINT,$/;"	e	enum:Tree.Kind	file:
EXPR_LIST	src/main/java/decaf/frontend/parsing/SemValue.java	/^        TOKEN, CLASS, CLASS_LIST, FIELD, FIELD_LIST, VAR, VAR_LIST, TYPE, STMT, STMT_LIST, BLOCK/;"	e	enum:SemValue.Kind	file:
EXTENDS	build/generated-src/jacc/JaccTokens.java	/^    int EXTENDS = 11;$/;"	f	interface:JaccTokens
EXTENDS	build/generated-src/ll1pg/LLTable.java	/^    public static final int EXTENDS = 263; \/\/# line 15$/;"	f	class:LLTable
EXTENDS	src/main/java/decaf/frontend/parsing/Tokens.java	/^    int EXTENDS = 7;$/;"	f	interface:Tokens
ElseClause	build/generated-src/ll1pg/LLTable.java	/^    public static final int ElseClause = 307;$/;"	f	class:LLTable
ElseClause	src/main/ll1pg/Decaf.spec	/^ElseClause      :   ELSE Stmt \/\/ higher priority, which triggers a warning (that is expected)$/;"	t
Error	src/main/java/decaf/lowlevel/tac/Simulator.java	/^        Error(String msg) {$/;"	m	class:Simulator.Error
Error	src/main/java/decaf/lowlevel/tac/Simulator.java	/^    private static class Error extends RuntimeException {$/;"	c	class:Simulator
ErrorIssuer	src/main/java/decaf/driver/ErrorIssuer.java	/^public interface ErrorIssuer {$/;"	i
Expr	build/generated-src/ll1pg/LLTable.java	/^    public static final int Expr = 316;$/;"	f	class:LLTable
Expr	src/main/java/decaf/frontend/tree/Tree.java	/^        public Expr(Kind kind, String displayName, Pos pos) {$/;"	m	class:Tree.Expr
Expr	src/main/java/decaf/frontend/tree/Tree.java	/^    public abstract static class Expr extends TreeNode {$/;"	c	class:Tree
Expr	src/main/ll1pg/Decaf.spec	/^Expr            :   Expr1$/;"	t
Expr1	build/generated-src/ll1pg/LLTable.java	/^    public static final int Expr1 = 305;$/;"	f	class:LLTable
Expr1	src/main/ll1pg/Decaf.spec	/^Expr1           :   Expr2 ExprT1$/;"	t
Expr2	build/generated-src/ll1pg/LLTable.java	/^    public static final int Expr2 = 297;$/;"	f	class:LLTable
Expr2	src/main/ll1pg/Decaf.spec	/^Expr2           :   Expr3 ExprT2$/;"	t
Expr3	build/generated-src/ll1pg/LLTable.java	/^    public static final int Expr3 = 325;$/;"	f	class:LLTable
Expr3	src/main/ll1pg/Decaf.spec	/^Expr3           :   Expr4 ExprT3$/;"	t
Expr4	build/generated-src/ll1pg/LLTable.java	/^    public static final int Expr4 = 334;$/;"	f	class:LLTable
Expr4	src/main/ll1pg/Decaf.spec	/^Expr4           :   Expr5 ExprT4$/;"	t
Expr5	build/generated-src/ll1pg/LLTable.java	/^    public static final int Expr5 = 319;$/;"	f	class:LLTable
Expr5	src/main/ll1pg/Decaf.spec	/^Expr5           :   Expr6 ExprT5$/;"	t
Expr6	build/generated-src/ll1pg/LLTable.java	/^    public static final int Expr6 = 301;$/;"	f	class:LLTable
Expr6	src/main/ll1pg/Decaf.spec	/^Expr6           :   Expr7 ExprT6$/;"	t
Expr7	build/generated-src/ll1pg/LLTable.java	/^    public static final int Expr7 = 342;$/;"	f	class:LLTable
Expr7	src/main/ll1pg/Decaf.spec	/^Expr7           :   Op7 Expr8$/;"	t
Expr8	build/generated-src/ll1pg/LLTable.java	/^    public static final int Expr8 = 295;$/;"	f	class:LLTable
Expr8	src/main/ll1pg/Decaf.spec	/^Expr8           :   Expr9 ExprT8$/;"	t
Expr9	build/generated-src/ll1pg/LLTable.java	/^    public static final int Expr9 = 304;$/;"	f	class:LLTable
Expr9	src/main/ll1pg/Decaf.spec	/^Expr9           :   Literal$/;"	t
ExprEval	src/main/java/decaf/frontend/tree/Tree.java	/^        public ExprEval(Expr expr, Pos pos) {$/;"	m	class:Tree.ExprEval
ExprEval	src/main/java/decaf/frontend/tree/Tree.java	/^    public static class ExprEval extends Stmt {$/;"	c	class:Tree
ExprList	build/generated-src/ll1pg/LLTable.java	/^    public static final int ExprList = 312;$/;"	f	class:LLTable
ExprList	src/main/ll1pg/Decaf.spec	/^ExprList        :   Expr ExprList1$/;"	t
ExprList1	build/generated-src/ll1pg/LLTable.java	/^    public static final int ExprList1 = 340;$/;"	f	class:LLTable
ExprList1	src/main/ll1pg/Decaf.spec	/^ExprList1       :   ',' Expr ExprList1$/;"	t
ExprListOpt	build/generated-src/ll1pg/LLTable.java	/^    public static final int ExprListOpt = 306;$/;"	f	class:LLTable
ExprListOpt	src/main/ll1pg/Decaf.spec	/^ExprListOpt     :   '(' ExprList ')'$/;"	t
ExprOpt	build/generated-src/ll1pg/LLTable.java	/^    public static final int ExprOpt = 324;$/;"	f	class:LLTable
ExprOpt	src/main/ll1pg/Decaf.spec	/^ExprOpt         :   Expr$/;"	t
ExprT1	build/generated-src/ll1pg/LLTable.java	/^    public static final int ExprT1 = 332;$/;"	f	class:LLTable
ExprT1	src/main/ll1pg/Decaf.spec	/^ExprT1          :   Op1 Expr2 ExprT1$/;"	t
ExprT2	build/generated-src/ll1pg/LLTable.java	/^    public static final int ExprT2 = 302;$/;"	f	class:LLTable
ExprT2	src/main/ll1pg/Decaf.spec	/^ExprT2          :   Op2 Expr3 ExprT2$/;"	t
ExprT3	build/generated-src/ll1pg/LLTable.java	/^    public static final int ExprT3 = 328;$/;"	f	class:LLTable
ExprT3	src/main/ll1pg/Decaf.spec	/^ExprT3          :   Op3 Expr4 ExprT3$/;"	t
ExprT4	build/generated-src/ll1pg/LLTable.java	/^    public static final int ExprT4 = 335;$/;"	f	class:LLTable
ExprT4	src/main/ll1pg/Decaf.spec	/^ExprT4          :   Op4 Expr5 ExprT4$/;"	t
ExprT5	build/generated-src/ll1pg/LLTable.java	/^    public static final int ExprT5 = 292;$/;"	f	class:LLTable
ExprT5	src/main/ll1pg/Decaf.spec	/^ExprT5          :   Op5 Expr6 ExprT5$/;"	t
ExprT6	build/generated-src/ll1pg/LLTable.java	/^    public static final int ExprT6 = 337;$/;"	f	class:LLTable
ExprT6	src/main/ll1pg/Decaf.spec	/^ExprT6          :   Op6 Expr7 ExprT6$/;"	t
ExprT8	build/generated-src/ll1pg/LLTable.java	/^    public static final int ExprT8 = 339;$/;"	f	class:LLTable
ExprT8	src/main/ll1pg/Decaf.spec	/^ExprT8          :   '[' Expr ']' ExprT8$/;"	t
ExtendsClause	build/generated-src/ll1pg/LLTable.java	/^    public static final int ExtendsClause = 322;$/;"	f	class:LLTable
ExtendsClause	src/main/ll1pg/Decaf.spec	/^ExtendsClause   :   EXTENDS Id$/;"	t
FIELD	src/main/java/decaf/frontend/parsing/SemValue.java	/^        TOKEN, CLASS, CLASS_LIST, FIELD, FIELD_LIST, VAR, VAR_LIST, TYPE, STMT, STMT_LIST, BLOCK/;"	e	enum:SemValue.Kind	file:
FIELD_LIST	src/main/java/decaf/frontend/parsing/SemValue.java	/^        TOKEN, CLASS, CLASS_LIST, FIELD, FIELD_LIST, VAR, VAR_LIST, TYPE, STMT, STMT_LIST, BLOCK/;"	e	enum:SemValue.Kind	file:
FMT1	src/main/java/decaf/lowlevel/Mips.java	/^    private static final String FMT1 = "%s";$/;"	f	class:Mips	file:
FMT2	src/main/java/decaf/lowlevel/Mips.java	/^    private static final String FMT2 = "%s, %s";$/;"	f	class:Mips	file:
FMT3	src/main/java/decaf/lowlevel/Mips.java	/^    private static final String FMT3 = "%s, %s, %s";$/;"	f	class:Mips	file:
FMT_OFFSET	src/main/java/decaf/lowlevel/Mips.java	/^    private static final String FMT_OFFSET = "%s, %d(%s)";$/;"	f	class:Mips	file:
FOR	build/generated-src/jacc/JaccTokens.java	/^    int FOR = 12;$/;"	f	interface:JaccTokens
FOR	build/generated-src/ll1pg/LLTable.java	/^    public static final int FOR = 266; \/\/# line 15$/;"	f	class:LLTable
FOR	src/main/java/decaf/frontend/parsing/Tokens.java	/^    int FOR = 10;$/;"	f	interface:Tokens
FOR	src/main/java/decaf/frontend/tree/Tree.java	/^        LOCAL_VAR_DEF, BLOCK, ASSIGN, EXPR_EVAL, SKIP, IF, WHILE, FOR, BREAK, RETURN, PRINT,$/;"	e	enum:Tree.Kind	file:
FORMAL	src/main/java/decaf/frontend/scope/Scope.java	/^        GLOBAL, CLASS, FORMAL, LOCAL, LAMBDA$/;"	e	enum:Scope.Kind	file:
FUN	build/generated-src/jacc/JaccTokens.java	/^    int FUN = 13;$/;"	f	interface:JaccTokens
FUN	build/generated-src/ll1pg/LLTable.java	/^    public static final int FUN = 290; \/\/# line 21$/;"	f	class:LLTable
FUN	src/main/java/decaf/frontend/parsing/Tokens.java	/^    int FUN = 203;$/;"	f	interface:Tokens
FUNC	src/main/java/decaf/lowlevel/label/Label.java	/^        TEMP, VTABLE, FUNC, INTRINSIC$/;"	e	enum:Label.Kind	file:
Field	src/main/java/decaf/frontend/tree/Tree.java	/^        public Field(Kind kind, String displayName, Pos pos) {$/;"	m	class:Tree.Field
Field	src/main/java/decaf/frontend/tree/Tree.java	/^    public static abstract class Field extends TreeNode {$/;"	c	class:Tree
FieldList	build/generated-src/ll1pg/LLTable.java	/^    public static final int FieldList = 308;$/;"	f	class:LLTable
FieldList	src/main/ll1pg/Decaf.spec	/^FieldList       :   STATIC Type Id '(' VarList ')' Block FieldList$/;"	t
FieldNotAccessError	src/main/java/decaf/driver/error/FieldNotAccessError.java	/^    public FieldNotAccessError(Pos pos, String name, String owner) {$/;"	m	class:FieldNotAccessError
FieldNotAccessError	src/main/java/decaf/driver/error/FieldNotAccessError.java	/^public class FieldNotAccessError extends DecafError {$/;"	c
FieldNotFoundError	src/main/java/decaf/driver/error/FieldNotFoundError.java	/^    public FieldNotFoundError(Pos pos, String name, String owner) {$/;"	m	class:FieldNotFoundError
FieldNotFoundError	src/main/java/decaf/driver/error/FieldNotFoundError.java	/^public class FieldNotFoundError extends DecafError {$/;"	c
For	src/main/java/decaf/frontend/tree/Tree.java	/^        public For(Stmt init, Expr cond, Stmt update, Stmt body, Pos pos) {$/;"	m	class:Tree.For
For	src/main/java/decaf/frontend/tree/Tree.java	/^    public static class For extends Stmt {$/;"	c	class:Tree
FormalScope	src/main/java/decaf/frontend/scope/FormalScope.java	/^    public FormalScope() {$/;"	m	class:FormalScope
FormalScope	src/main/java/decaf/frontend/scope/FormalScope.java	/^public class FormalScope extends Scope {$/;"	c
Frame	src/main/java/decaf/lowlevel/tac/Simulator.java	/^        Frame(Label entry, int arraySize) {$/;"	m	class:Simulator.Frame
Frame	src/main/java/decaf/lowlevel/tac/Simulator.java	/^        Frame(TacFunc func) {$/;"	m	class:Simulator.Frame
Frame	src/main/java/decaf/lowlevel/tac/Simulator.java	/^    private class Frame {$/;"	c	class:Simulator
FunType	src/main/java/decaf/frontend/type/FunType.java	/^    public FunType(Type returnType, List<Type> argTypes) {$/;"	m	class:FunType
FunType	src/main/java/decaf/frontend/type/FunType.java	/^public final class FunType extends Type {$/;"	c
FuncLabel	src/main/java/decaf/lowlevel/label/FuncLabel.java	/^    private FuncLabel() {$/;"	m	class:FuncLabel	file:
FuncLabel	src/main/java/decaf/lowlevel/label/FuncLabel.java	/^    public FuncLabel(String clazz, String method) {$/;"	m	class:FuncLabel
FuncLabel	src/main/java/decaf/lowlevel/label/FuncLabel.java	/^public class FuncLabel extends Label {$/;"	c
FuncVisitor	src/main/java/decaf/lowlevel/tac/FuncVisitor.java	/^    FuncVisitor(FuncLabel entry, int numArgs, ProgramWriter.Context ctx) {$/;"	m	class:FuncVisitor
FuncVisitor	src/main/java/decaf/lowlevel/tac/FuncVisitor.java	/^public class FuncVisitor {$/;"	c
GE	src/main/java/decaf/frontend/tree/Tree.java	/^        EQ, NE, GE, GT, LE, LT,$/;"	e	enum:Tree.BinaryOp	file:
GEQ	src/main/java/decaf/lowlevel/tac/Opcodes.java	/^    int GEQ = 27;$/;"	f	interface:Opcodes
GEQ	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^            ADD, SUB, MUL, DIV, MOD, EQU, NEQ, LES, LEQ, GTR, GEQ, LAND, LOR$/;"	e	enum:TacInstr.Binary.Op	file:
GLOBAL	src/main/java/decaf/frontend/scope/Scope.java	/^        GLOBAL, CLASS, FORMAL, LOCAL, LAMBDA$/;"	e	enum:Scope.Kind	file:
GP	src/main/java/decaf/lowlevel/Mips.java	/^    public static final Reg GP = new Reg(28, "$gp"); \/\/ global pointer (not used by decaf)$/;"	f	class:Mips
GREATER_EQUAL	build/generated-src/jacc/JaccTokens.java	/^    int GREATER_EQUAL = 14;$/;"	f	interface:JaccTokens
GREATER_EQUAL	build/generated-src/ll1pg/LLTable.java	/^    public static final int GREATER_EQUAL = 284; \/\/# line 20$/;"	f	class:LLTable
GREATER_EQUAL	src/main/java/decaf/frontend/parsing/Tokens.java	/^    int GREATER_EQUAL = 28;$/;"	f	interface:Tokens
GT	src/main/java/decaf/frontend/tree/Tree.java	/^        EQ, NE, GE, GT, LE, LT,$/;"	e	enum:Tree.BinaryOp	file:
GTR	src/main/java/decaf/lowlevel/tac/Opcodes.java	/^    int GTR = 26;$/;"	f	interface:Opcodes
GTR	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^            ADD, SUB, MUL, DIV, MOD, EQU, NEQ, LES, LEQ, GTR, GEQ, LAND, LOR$/;"	e	enum:TacInstr.Binary.Op	file:
Getting Started	README.md	/^## Getting Started$/;"	s
GlobalScope	src/main/java/decaf/frontend/scope/GlobalScope.java	/^    public GlobalScope() {$/;"	m	class:GlobalScope
GlobalScope	src/main/java/decaf/frontend/scope/GlobalScope.java	/^public class GlobalScope extends Scope {$/;"	c
HALT	src/main/java/decaf/lowlevel/tac/Intrinsic.java	/^        ALLOCATE, READ_LINE, READ_INT, STRING_EQUAL, PRINT_INT, PRINT_STRING, PRINT_BOOL, HALT$/;"	e	enum:Intrinsic.Opcode	file:
HALT	src/main/java/decaf/lowlevel/tac/Intrinsic.java	/^    public static final Intrinsic HALT = new Intrinsic(Opcode.HALT, "_Halt", 0);$/;"	f	class:Intrinsic
HELP	src/main/java/decaf/driver/OptParser.java	/^    static final String HELP = "h";$/;"	f	class:OptParser
HoleInstr	src/main/java/decaf/backend/asm/HoleInstr.java	/^    private HoleInstr(String str) {$/;"	m	class:HoleInstr	file:
HoleInstr	src/main/java/decaf/backend/asm/HoleInstr.java	/^public class HoleInstr extends PseudoInstr {$/;"	c
ID	src/main/java/decaf/frontend/parsing/SemValue.java	/^        LVALUE, ID, TEMPORARY, TYPE_LIST$/;"	e	enum:SemValue.Kind	file:
IDENTIFIER	build/generated-src/jacc/JaccTokens.java	/^    int IDENTIFIER = 15;$/;"	f	interface:JaccTokens
IDENTIFIER	build/generated-src/ll1pg/LLTable.java	/^    public static final int IDENTIFIER = 278; \/\/# line 19$/;"	f	class:LLTable
IDENTIFIER	src/main/java/decaf/frontend/parsing/Tokens.java	/^    int IDENTIFIER = 22;$/;"	f	interface:Tokens
IF	build/generated-src/jacc/JaccTokens.java	/^    int IF = 16;$/;"	f	interface:JaccTokens
IF	build/generated-src/ll1pg/LLTable.java	/^    public static final int IF = 267; \/\/# line 16$/;"	f	class:LLTable
IF	src/main/java/decaf/frontend/parsing/Tokens.java	/^    int IF = 11;$/;"	f	interface:Tokens
IF	src/main/java/decaf/frontend/tree/Tree.java	/^        LOCAL_VAR_DEF, BLOCK, ASSIGN, EXPR_EVAL, SKIP, IF, WHILE, FOR, BREAK, RETURN, PRINT,$/;"	e	enum:Tree.Kind	file:
INDENTS	src/main/java/decaf/lowlevel/AsmCodePrinter.java	/^    protected final String INDENTS = "    ";$/;"	f	class:AsmCodePrinter
INDEX_SEL	src/main/java/decaf/frontend/tree/Tree.java	/^        INT_LIT, BOOL_LIT, STRING_LIT, NULL_LIT, VAR_SEL, INDEX_SEL, CALL,$/;"	e	enum:Tree.Kind	file:
INDIRECT_CALL	src/main/java/decaf/lowlevel/tac/Opcodes.java	/^    int INDIRECT_CALL = 15;$/;"	f	interface:Opcodes
INDIRECT_CALL_VOID	src/main/java/decaf/lowlevel/tac/Opcodes.java	/^    int INDIRECT_CALL_VOID = 7;$/;"	f	interface:Opcodes
INSTANCE_OF	build/generated-src/jacc/JaccTokens.java	/^    int INSTANCE_OF = 17;$/;"	f	interface:JaccTokens
INSTANCE_OF	build/generated-src/ll1pg/LLTable.java	/^    public static final int INSTANCE_OF = 282; \/\/# line 19$/;"	f	class:LLTable
INSTANCE_OF	src/main/java/decaf/frontend/parsing/Tokens.java	/^    int INSTANCE_OF = 26;$/;"	f	interface:Tokens
INT	build/generated-src/jacc/JaccTokens.java	/^    int INT = 18;$/;"	f	interface:JaccTokens
INT	build/generated-src/ll1pg/LLTable.java	/^    public static final int INT = 259; \/\/# line 14$/;"	f	class:LLTable
INT	src/main/java/decaf/frontend/parsing/Tokens.java	/^    int INT = 3;$/;"	f	interface:Tokens
INT	src/main/java/decaf/frontend/type/BuiltInType.java	/^    public static final BuiltInType INT = new BuiltInType("int");$/;"	f	class:BuiltInType
INTRINSIC	src/main/java/decaf/lowlevel/label/Label.java	/^        TEMP, VTABLE, FUNC, INTRINSIC$/;"	e	enum:Label.Kind	file:
INT_LIT	build/generated-src/jacc/JaccTokens.java	/^    int INT_LIT = 19;$/;"	f	interface:JaccTokens
INT_LIT	build/generated-src/ll1pg/LLTable.java	/^    public static final int INT_LIT = 276; \/\/# line 18$/;"	f	class:LLTable
INT_LIT	src/main/java/decaf/frontend/parsing/Tokens.java	/^    int INT_LIT = 20;$/;"	f	interface:Tokens
INT_LIT	src/main/java/decaf/frontend/tree/Tree.java	/^        INT_LIT, BOOL_LIT, STRING_LIT, NULL_LIT, VAR_SEL, INDEX_SEL, CALL,$/;"	e	enum:Tree.Kind	file:
Id	build/generated-src/ll1pg/LLTable.java	/^    public static final int Id = 317;$/;"	f	class:LLTable
Id	src/main/java/decaf/frontend/tree/Tree.java	/^        public Id(String name, Pos pos) {$/;"	m	class:Tree.Id
Id	src/main/java/decaf/frontend/tree/Tree.java	/^    public static class Id {$/;"	c	class:Tree
Id	src/main/ll1pg/Decaf.spec	/^Id              :   IDENTIFIER$/;"	t
If	src/main/java/decaf/frontend/tree/Tree.java	/^        public If(Expr cond, Stmt trueBranch, Optional<Stmt> falseBranch, Pos pos) {$/;"	m	class:Tree.If
If	src/main/java/decaf/frontend/tree/Tree.java	/^    public static class If extends Stmt {$/;"	c	class:Tree
IncompatBinOpError	src/main/java/decaf/driver/error/IncompatBinOpError.java	/^    public IncompatBinOpError(Pos pos, String left, String op,$/;"	m	class:IncompatBinOpError
IncompatBinOpError	src/main/java/decaf/driver/error/IncompatBinOpError.java	/^public class IncompatBinOpError extends DecafError {$/;"	c
IncompatReturnTypesError	src/main/java/decaf/driver/error/IncompatReturnTypesError.java	/^    public IncompatReturnTypesError(Pos pos){$/;"	m	class:IncompatReturnTypesError
IncompatReturnTypesError	src/main/java/decaf/driver/error/IncompatReturnTypesError.java	/^public class IncompatReturnTypesError extends DecafError{$/;"	c
IncompatUnOpError	src/main/java/decaf/driver/error/IncompatUnOpError.java	/^    public IncompatUnOpError(Pos pos, String op, String type) {$/;"	m	class:IncompatUnOpError
IncompatUnOpError	src/main/java/decaf/driver/error/IncompatUnOpError.java	/^public class IncompatUnOpError extends DecafError {$/;"	c
IndentPrinter	src/main/java/decaf/lowlevel/log/IndentPrinter.java	/^    public IndentPrinter(List<OutputStream> outs) {$/;"	m	class:IndentPrinter
IndentPrinter	src/main/java/decaf/lowlevel/log/IndentPrinter.java	/^    public IndentPrinter(List<OutputStream> outs, boolean autoFlush) {$/;"	m	class:IndentPrinter
IndentPrinter	src/main/java/decaf/lowlevel/log/IndentPrinter.java	/^    public IndentPrinter(List<OutputStream> outs, boolean autoFlush, int indents) {$/;"	m	class:IndentPrinter
IndentPrinter	src/main/java/decaf/lowlevel/log/IndentPrinter.java	/^    public IndentPrinter(OutputStream out) {$/;"	m	class:IndentPrinter
IndentPrinter	src/main/java/decaf/lowlevel/log/IndentPrinter.java	/^    public IndentPrinter(OutputStream out, boolean autoFlush) {$/;"	m	class:IndentPrinter
IndentPrinter	src/main/java/decaf/lowlevel/log/IndentPrinter.java	/^    public IndentPrinter(OutputStream out, boolean autoFlush, int indents) {$/;"	m	class:IndentPrinter
IndentPrinter	src/main/java/decaf/lowlevel/log/IndentPrinter.java	/^public final class IndentPrinter {$/;"	c
IndexSel	src/main/java/decaf/frontend/tree/Tree.java	/^        public IndexSel(Expr array, Expr index, Pos pos) {$/;"	m	class:Tree.IndexSel
IndexSel	src/main/java/decaf/frontend/tree/Tree.java	/^    public static class IndexSel extends LValue {$/;"	c	class:Tree
IndirectCall	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public IndirectCall(Temp dst, Temp entry) {$/;"	m	class:TacInstr.IndirectCall
IndirectCall	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public IndirectCall(Temp entry) {$/;"	m	class:TacInstr.IndirectCall
IndirectCall	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^    public static class IndirectCall extends TacInstr {$/;"	c	class:TacInstr
Initializer	build/generated-src/ll1pg/LLTable.java	/^    public static final int Initializer = 309;$/;"	f	class:LLTable
Initializer	src/main/ll1pg/Decaf.spec	/^Initializer     :   '=' Expr$/;"	t
InstrExecutor	src/main/java/decaf/lowlevel/tac/Simulator.java	/^    private class InstrExecutor implements TacInstr.Visitor {$/;"	c	class:Simulator
IntLit	src/main/java/decaf/frontend/tree/Tree.java	/^        public IntLit(int value, Pos pos) {$/;"	m	class:Tree.IntLit
IntLit	src/main/java/decaf/frontend/tree/Tree.java	/^    public static class IntLit extends Expr {$/;"	c	class:Tree
IntTooLargeError	src/main/java/decaf/driver/error/IntTooLargeError.java	/^    public IntTooLargeError(Pos pos, String val) {$/;"	m	class:IntTooLargeError
IntTooLargeError	src/main/java/decaf/driver/error/IntTooLargeError.java	/^public class IntTooLargeError extends DecafError {$/;"	c
Intrinsic	src/main/java/decaf/lowlevel/tac/Intrinsic.java	/^    private Intrinsic(Opcode kind, String name, int numArgs) {$/;"	m	class:Intrinsic	file:
Intrinsic	src/main/java/decaf/lowlevel/tac/Intrinsic.java	/^public final class Intrinsic {$/;"	c
IntrinsicLabel	src/main/java/decaf/lowlevel/label/IntrinsicLabel.java	/^    public IntrinsicLabel(String name, Intrinsic.Opcode opcode) {$/;"	m	class:IntrinsicLabel
IntrinsicLabel	src/main/java/decaf/lowlevel/label/IntrinsicLabel.java	/^public class IntrinsicLabel extends Label {$/;"	c
JAVA_EXE	gradlew.bat	/^set JAVA_EXE=%JAVA_HOME%\/bin\/java.exe$/;"	v
JAVA_EXE	gradlew.bat	/^set JAVA_EXE=java.exe$/;"	v
JAVA_HOME	gradlew.bat	/^set JAVA_HOME=%JAVA_HOME:"=%$/;"	v
JMP	src/main/java/decaf/lowlevel/instr/PseudoInstr.java	/^        LABEL, SEQ, JMP, COND_JMP, RET$/;"	e	enum:PseudoInstr.Kind	file:
JVMTester	TestCases/testAll.py	/^class JVMTester(Tester):$/;"	c
JaccParser	src/main/java/decaf/frontend/parsing/JaccParser.java	/^    public JaccParser(Config config) {$/;"	m	class:JaccParser
JaccParser	src/main/java/decaf/frontend/parsing/JaccParser.java	/^public class JaccParser extends Phase<InputStream, Tree.TopLevel> {$/;"	c
JaccTokens	build/generated-src/jacc/JaccTokens.java	/^interface JaccTokens {$/;"	i
Jump	src/main/java/decaf/lowlevel/Mips.java	/^        public Jump(Label to) {$/;"	m	class:Mips.Jump
Jump	src/main/java/decaf/lowlevel/Mips.java	/^    public static class Jump extends PseudoInstr {$/;"	c	class:Mips
JumpAndLink	src/main/java/decaf/lowlevel/Mips.java	/^        public JumpAndLink(Label to) {$/;"	m	class:Mips.JumpAndLink
JumpAndLink	src/main/java/decaf/lowlevel/Mips.java	/^    public static class JumpAndLink extends PseudoInstr {$/;"	c	class:Mips
JumpAndLinkReg	src/main/java/decaf/lowlevel/Mips.java	/^        public JumpAndLinkReg(Temp src) {$/;"	m	class:Mips.JumpAndLinkReg
JumpAndLinkReg	src/main/java/decaf/lowlevel/Mips.java	/^    public static class JumpAndLinkReg extends PseudoInstr {$/;"	c	class:Mips
JumpToEpilogue	src/main/java/decaf/lowlevel/Mips.java	/^        public JumpToEpilogue(Label label) {$/;"	m	class:Mips.JumpToEpilogue
JumpToEpilogue	src/main/java/decaf/lowlevel/Mips.java	/^    public static class JumpToEpilogue extends PseudoInstr {$/;"	c	class:Mips
K0	src/main/java/decaf/lowlevel/Mips.java	/^    public static final Reg K0 = new Reg(26, "$k0"); \/\/ kernel 0 (not used by decaf)$/;"	f	class:Mips
K1	src/main/java/decaf/lowlevel/Mips.java	/^    public static final Reg K1 = new Reg(27, "$k1"); \/\/ kernel 1 (not used by decaf)$/;"	f	class:Mips
Kind	src/main/java/decaf/backend/dataflow/BasicBlock.java	/^    public enum Kind {$/;"	g	class:BasicBlock
Kind	src/main/java/decaf/frontend/parsing/SemValue.java	/^    enum Kind {$/;"	g	class:SemValue
Kind	src/main/java/decaf/frontend/scope/Scope.java	/^    public enum Kind {$/;"	g	class:Scope
Kind	src/main/java/decaf/frontend/tree/Tree.java	/^    public enum Kind {$/;"	g	class:Tree
Kind	src/main/java/decaf/lowlevel/instr/PseudoInstr.java	/^    public enum Kind {$/;"	g	class:PseudoInstr
Kind	src/main/java/decaf/lowlevel/label/Label.java	/^    public enum Kind {$/;"	g	class:Label
L	src/main/java/decaf/lowlevel/log/Log.java	/^    private static Logger L;$/;"	f	class:Log	file:
LABEL	src/main/java/decaf/lowlevel/instr/PseudoInstr.java	/^        LABEL, SEQ, JMP, COND_JMP, RET$/;"	e	enum:PseudoInstr.Kind	file:
LAMBDA	src/main/java/decaf/frontend/scope/Scope.java	/^        GLOBAL, CLASS, FORMAL, LOCAL, LAMBDA$/;"	e	enum:Scope.Kind	file:
LAMBDA	src/main/java/decaf/frontend/tree/Tree.java	/^        T_LAMBDA, LAMBDA$/;"	e	enum:Tree.Kind	file:
LAND	src/main/java/decaf/lowlevel/tac/Opcodes.java	/^    int LAND = 28;$/;"	f	interface:Opcodes
LAND	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^            ADD, SUB, MUL, DIV, MOD, EQU, NEQ, LES, LEQ, GTR, GEQ, LAND, LOR$/;"	e	enum:TacInstr.Binary.Op	file:
LE	src/main/java/decaf/frontend/tree/Tree.java	/^        EQ, NE, GE, GT, LE, LT,$/;"	e	enum:Tree.BinaryOp	file:
LEQ	src/main/java/decaf/lowlevel/tac/Opcodes.java	/^    int LEQ = 25;$/;"	f	interface:Opcodes
LEQ	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^            ADD, SUB, MUL, DIV, MOD, EQU, NEQ, LES, LEQ, GTR, GEQ, LAND, LOR$/;"	e	enum:TacInstr.Binary.Op	file:
LES	src/main/java/decaf/lowlevel/tac/Opcodes.java	/^    int LES = 24;$/;"	f	interface:Opcodes
LES	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^            ADD, SUB, MUL, DIV, MOD, EQU, NEQ, LES, LEQ, GTR, GEQ, LAND, LOR$/;"	e	enum:TacInstr.Binary.Op	file:
LESS_EQUAL	build/generated-src/jacc/JaccTokens.java	/^    int LESS_EQUAL = 20;$/;"	f	interface:JaccTokens
LESS_EQUAL	build/generated-src/ll1pg/LLTable.java	/^    public static final int LESS_EQUAL = 283; \/\/# line 20$/;"	f	class:LLTable
LESS_EQUAL	src/main/java/decaf/frontend/parsing/Tokens.java	/^    int LESS_EQUAL = 27;$/;"	f	interface:Tokens
LLTable	build/generated-src/ll1pg/LLTable.java	/^    public LLTable() {$/;"	m	class:LLTable
LLTable	build/generated-src/ll1pg/LLTable.java	/^public abstract class LLTable extends AbstractParser$/;"	c
LNOT	src/main/java/decaf/lowlevel/tac/Opcodes.java	/^    int LNOT = 14;$/;"	f	interface:Opcodes
LNOT	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^            NEG, LNOT$/;"	e	enum:TacInstr.Unary.Op	file:
LOAD	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^            LOAD, STORE$/;"	e	enum:TacInstr.Memory.Op	file:
LOAD_IMM4	src/main/java/decaf/lowlevel/tac/Opcodes.java	/^    int LOAD_IMM4 = 10;$/;"	f	interface:Opcodes
LOAD_STR_CONST	src/main/java/decaf/lowlevel/tac/Opcodes.java	/^    int LOAD_STR_CONST = 11;$/;"	f	interface:Opcodes
LOAD_VTBL	src/main/java/decaf/lowlevel/tac/Opcodes.java	/^    int LOAD_VTBL = 12;$/;"	f	interface:Opcodes
LOCAL	src/main/java/decaf/frontend/scope/Scope.java	/^        GLOBAL, CLASS, FORMAL, LOCAL, LAMBDA$/;"	e	enum:Scope.Kind	file:
LOCAL_VAR_DEF	src/main/java/decaf/frontend/tree/Tree.java	/^        LOCAL_VAR_DEF, BLOCK, ASSIGN, EXPR_EVAL, SKIP, IF, WHILE, FOR, BREAK, RETURN, PRINT,$/;"	e	enum:Tree.Kind	file:
LOG_COLORFUL	src/main/java/decaf/driver/OptParser.java	/^    static final String LOG_COLORFUL = "log-color";$/;"	f	class:OptParser
LOG_FILE	src/main/java/decaf/driver/OptParser.java	/^    static final String LOG_FILE = "log-file";$/;"	f	class:OptParser
LOG_LEVEL	src/main/java/decaf/driver/OptParser.java	/^    static final String LOG_LEVEL = "log-level";$/;"	f	class:OptParser
LOR	src/main/java/decaf/lowlevel/tac/Opcodes.java	/^    int LOR = 29;$/;"	f	interface:Opcodes
LOR	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^            ADD, SUB, MUL, DIV, MOD, EQU, NEQ, LES, LEQ, GTR, GEQ, LAND, LOR$/;"	e	enum:TacInstr.Binary.Op	file:
LT	src/main/java/decaf/frontend/tree/Tree.java	/^        EQ, NE, GE, GT, LE, LT,$/;"	e	enum:Tree.BinaryOp	file:
LVALUE	src/main/java/decaf/frontend/parsing/SemValue.java	/^        LVALUE, ID, TEMPORARY, TYPE_LIST$/;"	e	enum:SemValue.Kind	file:
LValue	src/main/java/decaf/frontend/tree/Tree.java	/^        public LValue(Kind kind, String displayName, Pos pos) {$/;"	m	class:Tree.LValue
LValue	src/main/java/decaf/frontend/tree/Tree.java	/^    public static abstract class LValue extends Expr {$/;"	c	class:Tree
Label	src/main/java/decaf/lowlevel/label/Label.java	/^    public Label(Kind kind, String name) {$/;"	m	class:Label
Label	src/main/java/decaf/lowlevel/label/Label.java	/^    public Label(String name) {$/;"	m	class:Label
Label	src/main/java/decaf/lowlevel/label/Label.java	/^public class Label implements Comparable<Label> {$/;"	c
Lambda	src/main/java/decaf/frontend/tree/Tree.java	/^        public Lambda(List<LocalVarDef> varList, Block block, Pos pos){$/;"	m	class:Tree.Lambda
Lambda	src/main/java/decaf/frontend/tree/Tree.java	/^        public Lambda(List<LocalVarDef> varList, Expr expr, Pos pos){$/;"	m	class:Tree.Lambda
Lambda	src/main/java/decaf/frontend/tree/Tree.java	/^    public static class Lambda extends Expr {$/;"	c	class:Tree
LambdaAssignVarOutOfScopeError	src/main/java/decaf/driver/error/LambdaAssignVarOutOfScopeError.java	/^    public LambdaAssignVarOutOfScopeError(Pos pos) {$/;"	m	class:LambdaAssignVarOutOfScopeError
LambdaAssignVarOutOfScopeError	src/main/java/decaf/driver/error/LambdaAssignVarOutOfScopeError.java	/^public class LambdaAssignVarOutOfScopeError extends DecafError{$/;"	c
LambdaScope	src/main/java/decaf/frontend/scope/LambdaScope.java	/^    public LambdaScope(LocalScope parent) {$/;"	m	class:LambdaScope
LambdaScope	src/main/java/decaf/frontend/scope/LambdaScope.java	/^public class LambdaScope extends Scope {$/;"	c
LambdaSymbol	src/main/java/decaf/frontend/symbol/LambdaSymbol.java	/^    public LambdaSymbol(FunType type, LambdaScope scope, Pos pos) {$/;"	m	class:LambdaSymbol
LambdaSymbol	src/main/java/decaf/frontend/symbol/LambdaSymbol.java	/^public class LambdaSymbol extends Symbol {$/;"	c
Launcher	src/main/java/decaf/driver/Launcher.java	/^public class Launcher {$/;"	c
Literal	build/generated-src/ll1pg/LLTable.java	/^    public static final int Literal = 314;$/;"	f	class:LLTable
Literal	src/main/ll1pg/Decaf.spec	/^Literal         :   INT_LIT$/;"	t
LivenessAnalyzer	src/main/java/decaf/backend/dataflow/LivenessAnalyzer.java	/^public class LivenessAnalyzer<I extends PseudoInstr> implements Consumer<CFG<I>> {$/;"	c
LoadAddr	src/main/java/decaf/lowlevel/Mips.java	/^        public LoadAddr(Temp dst, Label label) {$/;"	m	class:Mips.LoadAddr
LoadAddr	src/main/java/decaf/lowlevel/Mips.java	/^    public static class LoadAddr extends PseudoInstr {$/;"	c	class:Mips
LoadImm	src/main/java/decaf/lowlevel/Mips.java	/^        public LoadImm(Temp dst, int value) {$/;"	m	class:Mips.LoadImm
LoadImm	src/main/java/decaf/lowlevel/Mips.java	/^    public static class LoadImm extends PseudoInstr {$/;"	c	class:Mips
LoadImm4	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public LoadImm4(Temp dst, int value) {$/;"	m	class:TacInstr.LoadImm4
LoadImm4	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^    public static class LoadImm4 extends TacInstr {$/;"	c	class:TacInstr
LoadStrConst	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public LoadStrConst(Temp dst, String value) {$/;"	m	class:TacInstr.LoadStrConst
LoadStrConst	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^    public static class LoadStrConst extends TacInstr {$/;"	c	class:TacInstr
LoadVTbl	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public LoadVTbl(Temp dst, VTable vtbl) {$/;"	m	class:TacInstr.LoadVTbl
LoadVTbl	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^    public static class LoadVTbl extends TacInstr {$/;"	c	class:TacInstr
LoadWord	src/main/java/decaf/lowlevel/Mips.java	/^        public LoadWord(Temp dst, Temp base, int offset) {$/;"	m	class:Mips.LoadWord
LoadWord	src/main/java/decaf/lowlevel/Mips.java	/^    public static class LoadWord extends PseudoInstr {$/;"	c	class:Mips
Loc	src/main/java/decaf/backend/dataflow/Loc.java	/^    Loc(I instr) {$/;"	m	class:Loc
Loc	src/main/java/decaf/backend/dataflow/Loc.java	/^public class Loc<I extends PseudoInstr> {$/;"	c
LocalScope	src/main/java/decaf/frontend/scope/LocalScope.java	/^    public LocalScope(Scope parent) {$/;"	m	class:LocalScope
LocalScope	src/main/java/decaf/frontend/scope/LocalScope.java	/^public class LocalScope extends Scope {$/;"	c
LocalVarDef	src/main/java/decaf/frontend/tree/Tree.java	/^        public LocalVarDef(Optional<TypeLit> typeLit, Id id, Pos assignPos, Optional<Expr> initV/;"	m	class:Tree.LocalVarDef
LocalVarDef	src/main/java/decaf/frontend/tree/Tree.java	/^        public LocalVarDef(Optional<TypeLit> typeLit, Id id, Pos pos) {$/;"	m	class:Tree.LocalVarDef
LocalVarDef	src/main/java/decaf/frontend/tree/Tree.java	/^        public LocalVarDef(TypeLit typeLit, Id id, Pos assignPos, Optional<Expr> initVal, Pos po/;"	m	class:Tree.LocalVarDef
LocalVarDef	src/main/java/decaf/frontend/tree/Tree.java	/^        public LocalVarDef(TypeLit typeLit, Id id, Pos pos) {$/;"	m	class:Tree.LocalVarDef
LocalVarDef	src/main/java/decaf/frontend/tree/Tree.java	/^    public static class LocalVarDef extends Stmt {$/;"	c	class:Tree
Log	src/main/java/decaf/lowlevel/log/Log.java	/^    private Log() {$/;"	m	class:Log	file:
Log	src/main/java/decaf/lowlevel/log/Log.java	/^public class Log {$/;"	c
MAIN_LABEL	src/main/java/decaf/lowlevel/label/FuncLabel.java	/^    public static FuncLabel MAIN_LABEL = new FuncLabel() {$/;"	f	class:FuncLabel
MARK	src/main/java/decaf/lowlevel/tac/Opcodes.java	/^    int MARK = 5;$/;"	f	interface:Opcodes
MEMO	src/main/java/decaf/lowlevel/tac/Opcodes.java	/^    int MEMO = 6;$/;"	f	interface:Opcodes
METHOD_DEF	src/main/java/decaf/frontend/tree/Tree.java	/^        TOP_LEVEL, CLASS_DEF, VAR_DEF, METHOD_DEF,$/;"	e	enum:Tree.Kind	file:
MOD	src/main/java/decaf/frontend/tree/Tree.java	/^        ADD, SUB, MUL, DIV, MOD,$/;"	e	enum:Tree.BinaryOp	file:
MOD	src/main/java/decaf/lowlevel/tac/Opcodes.java	/^    int MOD = 21;$/;"	f	interface:Opcodes
MOD	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^            ADD, SUB, MUL, DIV, MOD, EQU, NEQ, LES, LEQ, GTR, GEQ, LAND, LOR$/;"	e	enum:TacInstr.Binary.Op	file:
MUL	src/main/java/decaf/frontend/tree/Tree.java	/^        ADD, SUB, MUL, DIV, MOD,$/;"	e	enum:Tree.BinaryOp	file:
MUL	src/main/java/decaf/lowlevel/Mips.java	/^        ADD, SUB, MUL, DIV, REM,$/;"	e	enum:Mips.BinaryOp	file:
MUL	src/main/java/decaf/lowlevel/tac/Opcodes.java	/^    int MUL = 19;$/;"	f	interface:Opcodes
MUL	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^            ADD, SUB, MUL, DIV, MOD, EQU, NEQ, LES, LEQ, GTR, GEQ, LAND, LOR$/;"	e	enum:TacInstr.Binary.Op	file:
Main	src/main/java/decaf/Main.java	/^public class Main {$/;"	c
Mark	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public Mark(Label label) {$/;"	m	class:TacInstr.Mark
Mark	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^    public static class Mark extends TacInstr {$/;"	c	class:TacInstr
Materials	README.md	/^## Materials$/;"	s
Memo	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public Memo(String msg) {$/;"	m	class:TacInstr.Memo
Memo	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^    public static class Memo extends TacInstr {$/;"	c	class:TacInstr
Memory	src/main/java/decaf/lowlevel/tac/Simulator.java	/^    private class Memory {$/;"	c	class:Simulator
Memory	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public Memory(Op op, Temp dst, Temp base, int offset) {$/;"	m	class:TacInstr.Memory
Memory	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^    public static class Memory extends TacInstr {$/;"	c	class:TacInstr
MethodDef	src/main/java/decaf/frontend/tree/Tree.java	/^        public MethodDef(boolean isAbstract, boolean isStatic, Id id, TypeLit returnType, List<L/;"	m	class:Tree.MethodDef
MethodDef	src/main/java/decaf/frontend/tree/Tree.java	/^        public MethodDef(boolean isStatic, Id id, TypeLit returnType, List<LocalVarDef> params, /;"	m	class:Tree.MethodDef
MethodDef	src/main/java/decaf/frontend/tree/Tree.java	/^    public static class MethodDef extends Field {$/;"	c	class:Tree
MethodSymbol	src/main/java/decaf/frontend/symbol/MethodSymbol.java	/^    public MethodSymbol(String name, FunType type, FormalScope scope, Pos pos, Tree.Modifiers mo/;"	m	class:MethodSymbol
MethodSymbol	src/main/java/decaf/frontend/symbol/MethodSymbol.java	/^public final class MethodSymbol extends Symbol {$/;"	c
Mips	src/main/java/decaf/lowlevel/Mips.java	/^public class Mips {$/;"	c
MipsAsmEmitter	src/main/java/decaf/backend/asm/mips/MipsAsmEmitter.java	/^    public MipsAsmEmitter() {$/;"	m	class:MipsAsmEmitter
MipsAsmEmitter	src/main/java/decaf/backend/asm/mips/MipsAsmEmitter.java	/^public final class MipsAsmEmitter extends AsmEmitter {$/;"	c
MipsInstrSelector	src/main/java/decaf/backend/asm/mips/MipsAsmEmitter.java	/^        MipsInstrSelector(Label entry) {$/;"	m	class:MipsAsmEmitter.MipsInstrSelector
MipsInstrSelector	src/main/java/decaf/backend/asm/mips/MipsAsmEmitter.java	/^    private class MipsInstrSelector implements TacInstr.Visitor {$/;"	c	class:MipsAsmEmitter
MipsLabel	src/main/java/decaf/lowlevel/Mips.java	/^        public MipsLabel(Label label) {$/;"	m	class:Mips.MipsLabel
MipsLabel	src/main/java/decaf/lowlevel/Mips.java	/^    public static class MipsLabel extends PseudoInstr {$/;"	c	class:Mips
MipsSubroutineEmitter	src/main/java/decaf/backend/asm/mips/MipsSubroutineEmitter.java	/^    MipsSubroutineEmitter(MipsAsmEmitter emitter, SubroutineInfo info) {$/;"	m	class:MipsSubroutineEmitter
MipsSubroutineEmitter	src/main/java/decaf/backend/asm/mips/MipsSubroutineEmitter.java	/^public class MipsSubroutineEmitter extends SubroutineEmitter {$/;"	c
MipsTester	TestCases/testAll.py	/^class MipsTester(Tester):$/;"	c
MissingReturnError	src/main/java/decaf/driver/error/MissingReturnError.java	/^    public MissingReturnError(Pos pos) {$/;"	m	class:MissingReturnError
MissingReturnError	src/main/java/decaf/driver/error/MissingReturnError.java	/^public class MissingReturnError extends DecafError {$/;"	c
Modifiers	src/main/java/decaf/frontend/tree/Tree.java	/^        public Modifiers() {$/;"	m	class:Tree.Modifiers
Modifiers	src/main/java/decaf/frontend/tree/Tree.java	/^        public Modifiers(int code, Pos pos) {$/;"	m	class:Tree.Modifiers
Modifiers	src/main/java/decaf/frontend/tree/Tree.java	/^    public static class Modifiers {$/;"	c	class:Tree
Move	src/main/java/decaf/lowlevel/Mips.java	/^        public Move(Temp dst, Temp src) {$/;"	m	class:Mips.Move
Move	src/main/java/decaf/lowlevel/Mips.java	/^    public static class Move extends PseudoInstr {$/;"	c	class:Mips
MsgError	src/main/java/decaf/driver/error/MsgError.java	/^    public MsgError(Pos pos, String msg) {$/;"	m	class:MsgError
MsgError	src/main/java/decaf/driver/error/MsgError.java	/^public class MsgError extends DecafError {$/;"	c
NE	src/main/java/decaf/frontend/tree/Tree.java	/^        EQ, NE, GE, GT, LE, LT,$/;"	e	enum:Tree.BinaryOp	file:
NEG	src/main/java/decaf/frontend/tree/Tree.java	/^        NEG, NOT$/;"	e	enum:Tree.UnaryOp	file:
NEG	src/main/java/decaf/lowlevel/Mips.java	/^        NEG, NOT$/;"	e	enum:Mips.UnaryOp	file:
NEG	src/main/java/decaf/lowlevel/tac/Opcodes.java	/^    int NEG = 13;$/;"	f	interface:Opcodes
NEG	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^            NEG, LNOT$/;"	e	enum:TacInstr.Unary.Op	file:
NEGATIVE_ARR_SIZE	src/main/java/decaf/lowlevel/tac/RuntimeError.java	/^    public static final String NEGATIVE_ARR_SIZE = "Decaf runtime error: Cannot create negative-/;"	f	class:RuntimeError
NEQ	src/main/java/decaf/lowlevel/tac/Opcodes.java	/^    int NEQ = 23;$/;"	f	interface:Opcodes
NEQ	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^            ADD, SUB, MUL, DIV, MOD, EQU, NEQ, LES, LEQ, GTR, GEQ, LAND, LOR$/;"	e	enum:TacInstr.Binary.Op	file:
NEW	build/generated-src/jacc/JaccTokens.java	/^    int NEW = 21;$/;"	f	interface:JaccTokens
NEW	build/generated-src/ll1pg/LLTable.java	/^    public static final int NEW = 271; \/\/# line 16$/;"	f	class:LLTable
NEW	src/main/java/decaf/frontend/parsing/Tokens.java	/^    int NEW = 15;$/;"	f	interface:Tokens
NEW_ARRAY	src/main/java/decaf/frontend/tree/Tree.java	/^        THIS, UNARY_EXPR, BINARY_EXPR, READ_INT, READ_LINE, NEW_CLASS, NEW_ARRAY, CLASS_TEST, CL/;"	e	enum:Tree.Kind	file:
NEW_CLASS	src/main/java/decaf/frontend/tree/Tree.java	/^        THIS, UNARY_EXPR, BINARY_EXPR, READ_INT, READ_LINE, NEW_CLASS, NEW_ARRAY, CLASS_TEST, CL/;"	e	enum:Tree.Kind	file:
NOP	src/main/java/decaf/lowlevel/tac/Opcodes.java	/^    int NOP = 0;$/;"	f	interface:Opcodes
NOT	src/main/java/decaf/frontend/tree/Tree.java	/^        NEG, NOT$/;"	e	enum:Tree.UnaryOp	file:
NOT	src/main/java/decaf/lowlevel/Mips.java	/^        NEG, NOT$/;"	e	enum:Mips.UnaryOp	file:
NOT_EQUAL	build/generated-src/jacc/JaccTokens.java	/^    int NOT_EQUAL = 22;$/;"	f	interface:JaccTokens
NOT_EQUAL	build/generated-src/ll1pg/LLTable.java	/^    public static final int NOT_EQUAL = 286; \/\/# line 20$/;"	f	class:LLTable
NOT_EQUAL	src/main/java/decaf/frontend/parsing/Tokens.java	/^    int NOT_EQUAL = 30;$/;"	f	interface:Tokens
NULL	build/generated-src/jacc/JaccTokens.java	/^    int NULL = 23;$/;"	f	interface:JaccTokens
NULL	build/generated-src/ll1pg/LLTable.java	/^    public static final int NULL = 262; \/\/# line 15$/;"	f	class:LLTable
NULL	src/main/java/decaf/frontend/parsing/Tokens.java	/^    int NULL = 6;$/;"	f	interface:Tokens
NULL	src/main/java/decaf/frontend/type/BuiltInType.java	/^    public static final BuiltInType NULL = new BuiltInType("null");$/;"	f	class:BuiltInType
NULL_LIT	src/main/java/decaf/frontend/tree/Tree.java	/^        INT_LIT, BOOL_LIT, STRING_LIT, NULL_LIT, VAR_SEL, INDEX_SEL, CALL,$/;"	e	enum:Tree.Kind	file:
Namer	src/main/java/decaf/frontend/typecheck/Namer.java	/^    public Namer(Config config) {$/;"	m	class:Namer
Namer	src/main/java/decaf/frontend/typecheck/Namer.java	/^public class Namer extends Phase<Tree.TopLevel, Tree.TopLevel> implements TypeLitVisited {$/;"	c
NativeInstr	src/main/java/decaf/lowlevel/instr/NativeInstr.java	/^    public NativeInstr(Kind kind, Reg[] dsts, Reg[] srcs, Label label) {$/;"	m	class:NativeInstr
NativeInstr	src/main/java/decaf/lowlevel/instr/NativeInstr.java	/^    public NativeInstr(Label label) {$/;"	m	class:NativeInstr
NativeInstr	src/main/java/decaf/lowlevel/instr/NativeInstr.java	/^    public NativeInstr(Reg[] dsts, Reg[] srcs) {$/;"	m	class:NativeInstr
NativeInstr	src/main/java/decaf/lowlevel/instr/NativeInstr.java	/^public abstract class NativeInstr extends PseudoInstr {$/;"	c
NativeLoadWord	src/main/java/decaf/lowlevel/Mips.java	/^        public NativeLoadWord(Reg dst, Reg base, int offset) {$/;"	m	class:Mips.NativeLoadWord
NativeLoadWord	src/main/java/decaf/lowlevel/Mips.java	/^    public static class NativeLoadWord extends NativeInstr {$/;"	c	class:Mips
NativeMove	src/main/java/decaf/lowlevel/Mips.java	/^        public NativeMove(Reg dst, Reg src) {$/;"	m	class:Mips.NativeMove
NativeMove	src/main/java/decaf/lowlevel/Mips.java	/^    public static class NativeMove extends NativeInstr {$/;"	c	class:Mips
NativeReturn	src/main/java/decaf/lowlevel/Mips.java	/^        public NativeReturn() {$/;"	m	class:Mips.NativeReturn
NativeReturn	src/main/java/decaf/lowlevel/Mips.java	/^    public static class NativeReturn extends NativeInstr {$/;"	c	class:Mips
NativeStoreWord	src/main/java/decaf/lowlevel/Mips.java	/^        public NativeStoreWord(Reg src, Reg base, int offset) {$/;"	m	class:Mips.NativeStoreWord
NativeStoreWord	src/main/java/decaf/lowlevel/Mips.java	/^    public static class NativeStoreWord extends NativeInstr {$/;"	c	class:Mips
NewAbstractError	src/main/java/decaf/driver/error/NewAbstractError.java	/^    public NewAbstractError(Pos pos, String className) {$/;"	m	class:NewAbstractError
NewAbstractError	src/main/java/decaf/driver/error/NewAbstractError.java	/^public class NewAbstractError extends DecafError{$/;"	c
NewArray	src/main/java/decaf/frontend/tree/Tree.java	/^        public NewArray(TypeLit elemType, Expr length, Pos pos) {$/;"	m	class:Tree.NewArray
NewArray	src/main/java/decaf/frontend/tree/Tree.java	/^    public static class NewArray extends Expr {$/;"	c	class:Tree
NewClass	src/main/java/decaf/frontend/tree/Tree.java	/^        public NewClass(Id clazz, Pos pos) {$/;"	m	class:Tree.NewClass
NewClass	src/main/java/decaf/frontend/tree/Tree.java	/^    public static class NewClass extends Expr {$/;"	c	class:Tree
NewlineInStrError	src/main/java/decaf/driver/error/NewlineInStrError.java	/^    public NewlineInStrError(Pos pos, String str) {$/;"	m	class:NewlineInStrError
NewlineInStrError	src/main/java/decaf/driver/error/NewlineInStrError.java	/^public class NewlineInStrError extends DecafError {$/;"	c
NoMainClassError	src/main/java/decaf/driver/error/NoMainClassError.java	/^    public NoMainClassError() {$/;"	m	class:NoMainClassError
NoMainClassError	src/main/java/decaf/driver/error/NoMainClassError.java	/^public class NoMainClassError extends DecafError {$/;"	c
NoPos	src/main/java/decaf/frontend/tree/Pos.java	/^    public static final Pos NoPos = new Pos(-1, -1);$/;"	f	class:Pos
NotAbstractClassError	src/main/java/decaf/driver/error/NotAbstractClassError.java	/^    public NotAbstractClassError(Pos pos, String className) {$/;"	m	class:NotAbstractClassError
NotAbstractClassError	src/main/java/decaf/driver/error/NotAbstractClassError.java	/^public class NotAbstractClassError extends DecafError {$/;"	c
NotArrayError	src/main/java/decaf/driver/error/NotArrayError.java	/^    public NotArrayError(Pos pos) {$/;"	m	class:NotArrayError
NotArrayError	src/main/java/decaf/driver/error/NotArrayError.java	/^public class NotArrayError extends DecafError {$/;"	c
NotCallableTypeError	src/main/java/decaf/driver/error/NotCallableTypeError.java	/^    public NotCallableTypeError(Pos pos, String type){$/;"	m	class:NotCallableTypeError
NotCallableTypeError	src/main/java/decaf/driver/error/NotCallableTypeError.java	/^public class NotCallableTypeError extends DecafError {$/;"	c
NotClassError	src/main/java/decaf/driver/error/NotClassError.java	/^    public NotClassError(String type, Pos pos) {$/;"	m	class:NotClassError
NotClassError	src/main/java/decaf/driver/error/NotClassError.java	/^public class NotClassError extends DecafError {$/;"	c
NotClassFieldError	src/main/java/decaf/driver/error/NotClassFieldError.java	/^    public NotClassFieldError(Pos pos, String name, String owner) {$/;"	m	class:NotClassFieldError
NotClassFieldError	src/main/java/decaf/driver/error/NotClassFieldError.java	/^public class NotClassFieldError extends DecafError {$/;"	c
NotClassMethodError	src/main/java/decaf/driver/error/NotClassMethodError.java	/^    public NotClassMethodError(Pos pos, String name, String owner) {$/;"	m	class:NotClassMethodError
NotClassMethodError	src/main/java/decaf/driver/error/NotClassMethodError.java	/^public class NotClassMethodError extends DecafError {$/;"	c
NullLit	src/main/java/decaf/frontend/tree/Tree.java	/^        public NullLit(Pos pos) {$/;"	m	class:Tree.NullLit
NullLit	src/main/java/decaf/frontend/tree/Tree.java	/^    public static class NullLit extends Expr {$/;"	c	class:Tree
OPTIONS	TestCases/testAll.py	/^OPTIONS = ', '.join(TARGETS.keys())$/;"	v
OR	build/generated-src/jacc/JaccTokens.java	/^    int OR = 24;$/;"	f	interface:JaccTokens
OR	build/generated-src/ll1pg/LLTable.java	/^    public static final int OR = 280; \/\/# line 19$/;"	f	class:LLTable
OR	src/main/java/decaf/frontend/parsing/Tokens.java	/^    int OR = 24;$/;"	f	interface:Tokens
OR	src/main/java/decaf/frontend/tree/Tree.java	/^        AND, OR$/;"	e	enum:Tree.BinaryOp	file:
OR	src/main/java/decaf/lowlevel/Mips.java	/^        AND, OR$/;"	e	enum:Mips.BinaryOp	file:
OUTPUT	src/main/java/decaf/driver/OptParser.java	/^    static final String OUTPUT = "o";$/;"	f	class:OptParser
Op	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public enum Op {$/;"	g	class:TacInstr.Binary
Op	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public enum Op {$/;"	g	class:TacInstr.CondBranch
Op	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public enum Op {$/;"	g	class:TacInstr.Memory
Op	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public enum Op {$/;"	g	class:TacInstr.Unary
Op1	build/generated-src/ll1pg/LLTable.java	/^    public static final int Op1 = 338;$/;"	f	class:LLTable
Op1	src/main/ll1pg/Decaf.spec	/^Op1             :   OR$/;"	t
Op2	build/generated-src/ll1pg/LLTable.java	/^    public static final int Op2 = 315;$/;"	f	class:LLTable
Op2	src/main/ll1pg/Decaf.spec	/^Op2             :   AND$/;"	t
Op3	build/generated-src/ll1pg/LLTable.java	/^    public static final int Op3 = 299;$/;"	f	class:LLTable
Op3	src/main/ll1pg/Decaf.spec	/^Op3             :   EQUAL$/;"	t
Op4	build/generated-src/ll1pg/LLTable.java	/^    public static final int Op4 = 296;$/;"	f	class:LLTable
Op4	src/main/ll1pg/Decaf.spec	/^Op4             :   LESS_EQUAL$/;"	t
Op5	build/generated-src/ll1pg/LLTable.java	/^    public static final int Op5 = 341;$/;"	f	class:LLTable
Op5	src/main/ll1pg/Decaf.spec	/^Op5             :   '+'$/;"	t
Op6	build/generated-src/ll1pg/LLTable.java	/^    public static final int Op6 = 291;$/;"	f	class:LLTable
Op6	src/main/ll1pg/Decaf.spec	/^Op6           :   '*'$/;"	t
Op7	build/generated-src/ll1pg/LLTable.java	/^    public static final int Op7 = 313;$/;"	f	class:LLTable
Op7	src/main/ll1pg/Decaf.spec	/^Op7             :   '-'$/;"	t
Opcode	src/main/java/decaf/lowlevel/tac/Intrinsic.java	/^    public enum Opcode {$/;"	g	class:Intrinsic
Opcodes	src/main/java/decaf/lowlevel/tac/Opcodes.java	/^public interface Opcodes {$/;"	i
OptParser	src/main/java/decaf/driver/OptParser.java	/^    public OptParser() {$/;"	m	class:OptParser
OptParser	src/main/java/decaf/driver/OptParser.java	/^public class OptParser {$/;"	c
Optimizer	src/main/java/decaf/backend/opt/Optimizer.java	/^    public Optimizer(Config config) {$/;"	m	class:Optimizer
Optimizer	src/main/java/decaf/backend/opt/Optimizer.java	/^public class Optimizer extends Phase<TacProg, TacProg> {$/;"	c
OverridingVarError	src/main/java/decaf/driver/error/OverridingVarError.java	/^    public OverridingVarError(Pos pos, String name) {$/;"	m	class:OverridingVarError
OverridingVarError	src/main/java/decaf/driver/error/OverridingVarError.java	/^public class OverridingVarError extends DecafError {$/;"	c
PA1	src/main/java/decaf/driver/Config.java	/^        PA1, PA1_LL, PA2, PA3, PA4, PA5$/;"	e	enum:Config.Target	file:
PA1ATester	TestCases/testAll.py	/^class PA1ATester(PATester):$/;"	c
PA1BTester	TestCases/testAll.py	/^class PA1BTester(PATester):$/;"	c
PA1_LL	src/main/java/decaf/driver/Config.java	/^        PA1, PA1_LL, PA2, PA3, PA4, PA5$/;"	e	enum:Config.Target	file:
PA2	src/main/java/decaf/driver/Config.java	/^        PA1, PA1_LL, PA2, PA3, PA4, PA5$/;"	e	enum:Config.Target	file:
PA2Tester	TestCases/testAll.py	/^class PA2Tester(PATester):$/;"	c
PA3	src/main/java/decaf/driver/Config.java	/^        PA1, PA1_LL, PA2, PA3, PA4, PA5$/;"	e	enum:Config.Target	file:
PA3Tester	TestCases/testAll.py	/^class PA3Tester(PATester):$/;"	c
PA4	src/main/java/decaf/driver/Config.java	/^        PA1, PA1_LL, PA2, PA3, PA4, PA5$/;"	e	enum:Config.Target	file:
PA5	src/main/java/decaf/driver/Config.java	/^        PA1, PA1_LL, PA2, PA3, PA4, PA5$/;"	e	enum:Config.Target	file:
PARM	src/main/java/decaf/lowlevel/tac/Opcodes.java	/^    int PARM = 4;$/;"	f	interface:Opcodes
PATester	TestCases/testAll.py	/^class PATester(Tester):$/;"	c
PRINT	build/generated-src/jacc/JaccTokens.java	/^    int PRINT = 25;$/;"	f	interface:JaccTokens
PRINT	build/generated-src/ll1pg/LLTable.java	/^    public static final int PRINT = 272; \/\/# line 17$/;"	f	class:LLTable
PRINT	src/main/java/decaf/frontend/parsing/Tokens.java	/^    int PRINT = 16;$/;"	f	interface:Tokens
PRINT	src/main/java/decaf/frontend/tree/Tree.java	/^        LOCAL_VAR_DEF, BLOCK, ASSIGN, EXPR_EVAL, SKIP, IF, WHILE, FOR, BREAK, RETURN, PRINT,$/;"	e	enum:Tree.Kind	file:
PRINT_BOOL	src/main/java/decaf/lowlevel/tac/Intrinsic.java	/^        ALLOCATE, READ_LINE, READ_INT, STRING_EQUAL, PRINT_INT, PRINT_STRING, PRINT_BOOL, HALT$/;"	e	enum:Intrinsic.Opcode	file:
PRINT_BOOL	src/main/java/decaf/lowlevel/tac/Intrinsic.java	/^    public static final Intrinsic PRINT_BOOL = new Intrinsic(Opcode.PRINT_BOOL, "_PrintBool", 1)/;"	f	class:Intrinsic
PRINT_INT	src/main/java/decaf/lowlevel/tac/Intrinsic.java	/^        ALLOCATE, READ_LINE, READ_INT, STRING_EQUAL, PRINT_INT, PRINT_STRING, PRINT_BOOL, HALT$/;"	e	enum:Intrinsic.Opcode	file:
PRINT_INT	src/main/java/decaf/lowlevel/tac/Intrinsic.java	/^    public static final Intrinsic PRINT_INT = new Intrinsic(Opcode.PRINT_INT, "_PrintInt", 1);$/;"	f	class:Intrinsic
PRINT_STRING	src/main/java/decaf/lowlevel/tac/Intrinsic.java	/^        ALLOCATE, READ_LINE, READ_INT, STRING_EQUAL, PRINT_INT, PRINT_STRING, PRINT_BOOL, HALT$/;"	e	enum:Intrinsic.Opcode	file:
PRINT_STRING	src/main/java/decaf/lowlevel/tac/Intrinsic.java	/^    public static final Intrinsic PRINT_STRING = new Intrinsic(Opcode.PRINT_STRING, "_PrintStrin/;"	f	class:Intrinsic
PWD	src/main/java/decaf/driver/Config.java	/^    public static Path PWD = new File(System.getProperty("user.dir")).toPath();$/;"	f	class:Config
ParamVoidError	src/main/java/decaf/driver/error/ParamVoidError.java	/^    public ParamVoidError(Pos pos) {$/;"	m	class:ParamVoidError
ParamVoidError	src/main/java/decaf/driver/error/ParamVoidError.java	/^public class ParamVoidError extends DecafError {$/;"	c
Parm	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public Parm(Temp value) {$/;"	m	class:TacInstr.Parm
Parm	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^    public static class Parm extends TacInstr {$/;"	c	class:TacInstr
Phase	src/main/java/decaf/driver/Phase.java	/^    public Phase(String name, Config config) {$/;"	m	class:Phase
Phase	src/main/java/decaf/driver/Phase.java	/^public abstract class Phase<In, Out> implements Task<In, Out>, ErrorIssuer {$/;"	c
Pos	src/main/java/decaf/frontend/tree/Pos.java	/^    public Pos(int line, int column) {$/;"	m	class:Pos
Pos	src/main/java/decaf/frontend/tree/Pos.java	/^public class Pos implements Comparable<Pos> {$/;"	c
PrettyCFG	src/main/java/decaf/printing/PrettyCFG.java	/^    public PrettyCFG(IndentPrinter printer) {$/;"	m	class:PrettyCFG
PrettyCFG	src/main/java/decaf/printing/PrettyCFG.java	/^public class PrettyCFG<I extends PseudoInstr> extends PrettyPrinter<CFG<I>> {$/;"	c
PrettyPrinter	src/main/java/decaf/printing/PrettyPrinter.java	/^    public PrettyPrinter(IndentPrinter printer) {$/;"	m	class:PrettyPrinter
PrettyPrinter	src/main/java/decaf/printing/PrettyPrinter.java	/^public abstract class PrettyPrinter<T> {$/;"	c
PrettyScope	src/main/java/decaf/printing/PrettyScope.java	/^    public PrettyScope(IndentPrinter printer) {$/;"	m	class:PrettyScope
PrettyScope	src/main/java/decaf/printing/PrettyScope.java	/^public final class PrettyScope extends PrettyPrinter<Scope> {$/;"	c
PrettyTree	src/main/java/decaf/printing/PrettyTree.java	/^    public PrettyTree(IndentPrinter printer) {$/;"	m	class:PrettyTree
PrettyTree	src/main/java/decaf/printing/PrettyTree.java	/^public final class PrettyTree extends PrettyPrinter<TreeNode> {$/;"	c
Print	src/main/java/decaf/frontend/tree/Tree.java	/^        public Print(List<Expr> exprs, Pos pos) {$/;"	m	class:Tree.Print
Print	src/main/java/decaf/frontend/tree/Tree.java	/^    public static class Print extends Stmt {$/;"	c	class:Tree
ProgramWriter	src/main/java/decaf/lowlevel/tac/ProgramWriter.java	/^    public ProgramWriter(List<ClassInfo> classes) {$/;"	m	class:ProgramWriter
ProgramWriter	src/main/java/decaf/lowlevel/tac/ProgramWriter.java	/^public class ProgramWriter {$/;"	c
PseudoInstr	src/main/java/decaf/lowlevel/instr/PseudoInstr.java	/^    public PseudoInstr(Kind kind, Temp[] dsts, Temp[] srcs, Label label) {$/;"	m	class:PseudoInstr
PseudoInstr	src/main/java/decaf/lowlevel/instr/PseudoInstr.java	/^    public PseudoInstr(Label label) {$/;"	m	class:PseudoInstr
PseudoInstr	src/main/java/decaf/lowlevel/instr/PseudoInstr.java	/^    public PseudoInstr(Temp[] dsts, Temp[] srcs) {$/;"	m	class:PseudoInstr
PseudoInstr	src/main/java/decaf/lowlevel/instr/PseudoInstr.java	/^public abstract class PseudoInstr {$/;"	c
RA	src/main/java/decaf/lowlevel/Mips.java	/^    public static final Reg RA = new Reg(31, "$ra"); \/\/ return address$/;"	f	class:Mips
READ_INT	src/main/java/decaf/frontend/tree/Tree.java	/^        THIS, UNARY_EXPR, BINARY_EXPR, READ_INT, READ_LINE, NEW_CLASS, NEW_ARRAY, CLASS_TEST, CL/;"	e	enum:Tree.Kind	file:
READ_INT	src/main/java/decaf/lowlevel/tac/Intrinsic.java	/^        ALLOCATE, READ_LINE, READ_INT, STRING_EQUAL, PRINT_INT, PRINT_STRING, PRINT_BOOL, HALT$/;"	e	enum:Intrinsic.Opcode	file:
READ_INT	src/main/java/decaf/lowlevel/tac/Intrinsic.java	/^    public static final Intrinsic READ_INT = new Intrinsic(Opcode.READ_INT, "_ReadInteger", 0);$/;"	f	class:Intrinsic
READ_INTEGER	build/generated-src/jacc/JaccTokens.java	/^    int READ_INTEGER = 26;$/;"	f	interface:JaccTokens
READ_INTEGER	build/generated-src/ll1pg/LLTable.java	/^    public static final int READ_INTEGER = 273; \/\/# line 17$/;"	f	class:LLTable
READ_INTEGER	src/main/java/decaf/frontend/parsing/Tokens.java	/^    int READ_INTEGER = 17;$/;"	f	interface:Tokens
READ_LINE	build/generated-src/jacc/JaccTokens.java	/^    int READ_LINE = 27;$/;"	f	interface:JaccTokens
READ_LINE	build/generated-src/ll1pg/LLTable.java	/^    public static final int READ_LINE = 274; \/\/# line 17$/;"	f	class:LLTable
READ_LINE	src/main/java/decaf/frontend/parsing/Tokens.java	/^    int READ_LINE = 18;$/;"	f	interface:Tokens
READ_LINE	src/main/java/decaf/frontend/tree/Tree.java	/^        THIS, UNARY_EXPR, BINARY_EXPR, READ_INT, READ_LINE, NEW_CLASS, NEW_ARRAY, CLASS_TEST, CL/;"	e	enum:Tree.Kind	file:
READ_LINE	src/main/java/decaf/lowlevel/tac/Intrinsic.java	/^        ALLOCATE, READ_LINE, READ_INT, STRING_EQUAL, PRINT_INT, PRINT_STRING, PRINT_BOOL, HALT$/;"	e	enum:Intrinsic.Opcode	file:
READ_LINE	src/main/java/decaf/lowlevel/tac/Intrinsic.java	/^    public static final Intrinsic READ_LINE = new Intrinsic(Opcode.READ_LINE, "_ReadLine", 0);$/;"	f	class:Intrinsic
REM	src/main/java/decaf/lowlevel/Mips.java	/^        ADD, SUB, MUL, DIV, REM,$/;"	e	enum:Mips.BinaryOp	file:
RET	src/main/java/decaf/lowlevel/instr/PseudoInstr.java	/^        LABEL, SEQ, JMP, COND_JMP, RET$/;"	e	enum:PseudoInstr.Kind	file:
RETURN	build/generated-src/jacc/JaccTokens.java	/^    int RETURN = 28;$/;"	f	interface:JaccTokens
RETURN	build/generated-src/ll1pg/LLTable.java	/^    public static final int RETURN = 269; \/\/# line 16$/;"	f	class:LLTable
RETURN	src/main/java/decaf/frontend/parsing/Tokens.java	/^    int RETURN = 13;$/;"	f	interface:Tokens
RETURN	src/main/java/decaf/frontend/tree/Tree.java	/^        LOCAL_VAR_DEF, BLOCK, ASSIGN, EXPR_EVAL, SKIP, IF, WHILE, FOR, BREAK, RETURN, PRINT,$/;"	e	enum:Tree.Kind	file:
RETURN	src/main/java/decaf/lowlevel/tac/Opcodes.java	/^    int RETURN = 3;$/;"	f	interface:Opcodes
RETURN_VOID	src/main/java/decaf/lowlevel/tac/Opcodes.java	/^    int RETURN_VOID = 1;$/;"	f	interface:Opcodes
RLambda	build/generated-src/ll1pg/LLTable.java	/^    public static final int RLambda = 293;$/;"	f	class:LLTable
RLambda	src/main/ll1pg/Decaf.spec	/^RLambda         :   TO Expr$/;"	t
ReadInt	src/main/java/decaf/frontend/tree/Tree.java	/^        public ReadInt(Pos pos) {$/;"	m	class:Tree.ReadInt
ReadInt	src/main/java/decaf/frontend/tree/Tree.java	/^    public static class ReadInt extends Expr {$/;"	c	class:Tree
ReadLine	src/main/java/decaf/frontend/tree/Tree.java	/^        public ReadLine(Pos pos) {$/;"	m	class:Tree.ReadLine
ReadLine	src/main/java/decaf/frontend/tree/Tree.java	/^    public static class ReadLine extends Expr {$/;"	c	class:Tree
RefNonStaticError	src/main/java/decaf/driver/error/RefNonStaticError.java	/^    public RefNonStaticError(Pos pos, String from, String ref) {$/;"	m	class:RefNonStaticError
RefNonStaticError	src/main/java/decaf/driver/error/RefNonStaticError.java	/^public class RefNonStaticError extends DecafError {$/;"	c
Reg	src/main/java/decaf/lowlevel/instr/Reg.java	/^    public Reg(int id, String name) {$/;"	m	class:Reg
Reg	src/main/java/decaf/lowlevel/instr/Reg.java	/^public final class Reg extends Temp {$/;"	c
RegAlloc	src/main/java/decaf/backend/reg/RegAlloc.java	/^    public RegAlloc(AsmEmitter emitter) {$/;"	m	class:RegAlloc
RegAlloc	src/main/java/decaf/backend/reg/RegAlloc.java	/^public abstract class RegAlloc {$/;"	c
Releases	README.md	/^## Releases$/;"	s
Return	src/main/java/decaf/frontend/tree/Tree.java	/^        public Return(Optional<Expr> expr, Pos pos) {$/;"	m	class:Tree.Return
Return	src/main/java/decaf/frontend/tree/Tree.java	/^    public static class Return extends Stmt {$/;"	c	class:Tree
Return	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public Return() {$/;"	m	class:TacInstr.Return
Return	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public Return(Temp value) {$/;"	m	class:TacInstr.Return
Return	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^    public static class Return extends TacInstr {$/;"	c	class:TacInstr
Run	README.md	/^## Run$/;"	s
Running Tests	TestCases/README.md	/^## Running Tests$/;"	s
RuntimeError	src/main/java/decaf/lowlevel/tac/RuntimeError.java	/^    private RuntimeError() {$/;"	m	class:RuntimeError	file:
RuntimeError	src/main/java/decaf/lowlevel/tac/RuntimeError.java	/^public final class RuntimeError {$/;"	c
S	build/generated-src/jflex/DecafLexer.java	/^  public static final int S = 2;$/;"	f	class:DecafLexer
S0	src/main/java/decaf/lowlevel/Mips.java	/^    public static final Reg S0 = new Reg(16, "$s0");$/;"	f	class:Mips
S1	src/main/java/decaf/lowlevel/Mips.java	/^    public static final Reg S1 = new Reg(17, "$s1");$/;"	f	class:Mips
S2	src/main/java/decaf/lowlevel/Mips.java	/^    public static final Reg S2 = new Reg(18, "$s2");$/;"	f	class:Mips
S3	src/main/java/decaf/lowlevel/Mips.java	/^    public static final Reg S3 = new Reg(19, "$s3");$/;"	f	class:Mips
S4	src/main/java/decaf/lowlevel/Mips.java	/^    public static final Reg S4 = new Reg(20, "$s4");$/;"	f	class:Mips
S5	src/main/java/decaf/lowlevel/Mips.java	/^    public static final Reg S5 = new Reg(21, "$s5");$/;"	f	class:Mips
S6	src/main/java/decaf/lowlevel/Mips.java	/^    public static final Reg S6 = new Reg(22, "$s6");$/;"	f	class:Mips
S7	src/main/java/decaf/lowlevel/Mips.java	/^    public static final Reg S7 = new Reg(23, "$s7");$/;"	f	class:Mips
S8	src/main/java/decaf/lowlevel/Mips.java	/^    public static final Reg S8 = new Reg(30, "$s8"); \/\/ also called $fp, but used as an additi/;"	f	class:Mips
SEQ	src/main/java/decaf/lowlevel/Mips.java	/^        SGT, SGE, SEQ, SNE, SLE, SLT,$/;"	e	enum:Mips.BinaryOp	file:
SEQ	src/main/java/decaf/lowlevel/instr/PseudoInstr.java	/^        LABEL, SEQ, JMP, COND_JMP, RET$/;"	e	enum:PseudoInstr.Kind	file:
SGE	src/main/java/decaf/lowlevel/Mips.java	/^        SGT, SGE, SEQ, SNE, SLE, SLT,$/;"	e	enum:Mips.BinaryOp	file:
SGT	src/main/java/decaf/lowlevel/Mips.java	/^        SGT, SGE, SEQ, SNE, SLE, SLT,$/;"	e	enum:Mips.BinaryOp	file:
SHOW_COLOR	TestCases/testAll.py	/^SHOW_COLOR = True$/;"	v
SHOW_DIFF	TestCases/testAll.py	/^SHOW_DIFF = True$/;"	v
SKIP	src/main/java/decaf/frontend/tree/Tree.java	/^        LOCAL_VAR_DEF, BLOCK, ASSIGN, EXPR_EVAL, SKIP, IF, WHILE, FOR, BREAK, RETURN, PRINT,$/;"	e	enum:Tree.Kind	file:
SLE	src/main/java/decaf/lowlevel/Mips.java	/^        SGT, SGE, SEQ, SNE, SLE, SLT,$/;"	e	enum:Mips.BinaryOp	file:
SLT	src/main/java/decaf/lowlevel/Mips.java	/^        SGT, SGE, SEQ, SNE, SLE, SLT,$/;"	e	enum:Mips.BinaryOp	file:
SNE	src/main/java/decaf/lowlevel/Mips.java	/^        SGT, SGE, SEQ, SNE, SLE, SLT,$/;"	e	enum:Mips.BinaryOp	file:
SP	src/main/java/decaf/lowlevel/Mips.java	/^    public static final Reg SP = new Reg(29, "$sp"); \/\/ stack pointer (not allocatable)$/;"	f	class:Mips
SPAdd	src/main/java/decaf/lowlevel/Mips.java	/^        public SPAdd(int offset) {$/;"	m	class:Mips.SPAdd
SPAdd	src/main/java/decaf/lowlevel/Mips.java	/^    public static class SPAdd extends NativeInstr {$/;"	c	class:Mips
STATIC	build/generated-src/jacc/JaccTokens.java	/^    int STATIC = 29;$/;"	f	interface:JaccTokens
STATIC	build/generated-src/ll1pg/LLTable.java	/^    public static final int STATIC = 281; \/\/# line 19$/;"	f	class:LLTable
STATIC	src/main/java/decaf/frontend/parsing/Tokens.java	/^    int STATIC = 25;$/;"	f	interface:Tokens
STATIC	src/main/java/decaf/frontend/tree/Tree.java	/^        public static final int STATIC = 1;$/;"	f	class:Tree.Modifiers
STDOUT	src/main/java/decaf/driver/Config.java	/^    public static OutputStream STDOUT = System.out;$/;"	f	class:Config
STMT	src/main/java/decaf/frontend/parsing/SemValue.java	/^        TOKEN, CLASS, CLASS_LIST, FIELD, FIELD_LIST, VAR, VAR_LIST, TYPE, STMT, STMT_LIST, BLOCK/;"	e	enum:SemValue.Kind	file:
STMT_LIST	src/main/java/decaf/frontend/parsing/SemValue.java	/^        TOKEN, CLASS, CLASS_LIST, FIELD, FIELD_LIST, VAR, VAR_LIST, TYPE, STMT, STMT_LIST, BLOCK/;"	e	enum:SemValue.Kind	file:
STORE	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^            LOAD, STORE$/;"	e	enum:TacInstr.Memory.Op	file:
STRING	build/generated-src/jacc/JaccTokens.java	/^    int STRING = 30;$/;"	f	interface:JaccTokens
STRING	build/generated-src/ll1pg/LLTable.java	/^    public static final int STRING = 260; \/\/# line 14$/;"	f	class:LLTable
STRING	src/main/java/decaf/frontend/parsing/Tokens.java	/^    int STRING = 4;$/;"	f	interface:Tokens
STRING	src/main/java/decaf/frontend/type/BuiltInType.java	/^    public static final BuiltInType STRING = new BuiltInType("string");$/;"	f	class:BuiltInType
STRING_EQUAL	src/main/java/decaf/lowlevel/tac/Intrinsic.java	/^        ALLOCATE, READ_LINE, READ_INT, STRING_EQUAL, PRINT_INT, PRINT_STRING, PRINT_BOOL, HALT$/;"	e	enum:Intrinsic.Opcode	file:
STRING_EQUAL	src/main/java/decaf/lowlevel/tac/Intrinsic.java	/^    public static final Intrinsic STRING_EQUAL = new Intrinsic(Opcode.STRING_EQUAL, "_StringEqua/;"	f	class:Intrinsic
STRING_LIT	build/generated-src/jacc/JaccTokens.java	/^    int STRING_LIT = 31;$/;"	f	interface:JaccTokens
STRING_LIT	build/generated-src/ll1pg/LLTable.java	/^    public static final int STRING_LIT = 277; \/\/# line 18$/;"	f	class:LLTable
STRING_LIT	src/main/java/decaf/frontend/parsing/Tokens.java	/^    int STRING_LIT = 21;$/;"	f	interface:Tokens
STRING_LIT	src/main/java/decaf/frontend/tree/Tree.java	/^        INT_LIT, BOOL_LIT, STRING_LIT, NULL_LIT, VAR_SEL, INDEX_SEL, CALL,$/;"	e	enum:Tree.Kind	file:
STR_PREFIX	src/main/java/decaf/lowlevel/Mips.java	/^    public static final String STR_PREFIX = "_S";$/;"	f	class:Mips
SUB	src/main/java/decaf/frontend/tree/Tree.java	/^        ADD, SUB, MUL, DIV, MOD,$/;"	e	enum:Tree.BinaryOp	file:
SUB	src/main/java/decaf/lowlevel/Mips.java	/^        ADD, SUB, MUL, DIV, REM,$/;"	e	enum:Mips.BinaryOp	file:
SUB	src/main/java/decaf/lowlevel/tac/Opcodes.java	/^    int SUB = 18;$/;"	f	interface:Opcodes
SUB	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^            ADD, SUB, MUL, DIV, MOD, EQU, NEQ, LES, LEQ, GTR, GEQ, LAND, LOR$/;"	e	enum:TacInstr.Binary.Op	file:
Scope	src/main/java/decaf/frontend/scope/Scope.java	/^    public Scope(Kind kind) {$/;"	m	class:Scope
Scope	src/main/java/decaf/frontend/scope/Scope.java	/^public abstract class Scope implements Iterable<Symbol> {$/;"	c
ScopeStack	src/main/java/decaf/frontend/scope/ScopeStack.java	/^    public ScopeStack(GlobalScope global) {$/;"	m	class:ScopeStack
ScopeStack	src/main/java/decaf/frontend/scope/ScopeStack.java	/^public class ScopeStack {$/;"	c
SemValue	src/main/java/decaf/frontend/parsing/SemValue.java	/^    SemValue() {$/;"	m	class:SemValue
SemValue	src/main/java/decaf/frontend/parsing/SemValue.java	/^    SemValue(Kind kind, Pos pos) {$/;"	m	class:SemValue
SemValue	src/main/java/decaf/frontend/parsing/SemValue.java	/^    SemValue(int code, Pos pos) {$/;"	m	class:SemValue
SemValue	src/main/java/decaf/frontend/parsing/SemValue.java	/^class SemValue {$/;"	c
SimpleStmt	build/generated-src/ll1pg/LLTable.java	/^    public static final int SimpleStmt = 330;$/;"	f	class:LLTable
SimpleStmt	src/main/ll1pg/Decaf.spec	/^SimpleStmt      :   Var Initializer$/;"	t
Simulator	src/main/java/decaf/lowlevel/tac/Simulator.java	/^    public Simulator(InputStream in, OutputStream out) {$/;"	m	class:Simulator
Simulator	src/main/java/decaf/lowlevel/tac/Simulator.java	/^public final class Simulator {$/;"	c
Skip	src/main/java/decaf/frontend/tree/Tree.java	/^        public Skip(Pos pos) {$/;"	m	class:Tree.Skip
Skip	src/main/java/decaf/frontend/tree/Tree.java	/^    public static class Skip extends Stmt {$/;"	c	class:Tree
Stmt	build/generated-src/ll1pg/LLTable.java	/^    public static final int Stmt = 329;$/;"	f	class:LLTable
Stmt	src/main/java/decaf/frontend/tree/Tree.java	/^        public Stmt(Kind kind, String displayName, Pos pos) {$/;"	m	class:Tree.Stmt
Stmt	src/main/java/decaf/frontend/tree/Tree.java	/^    public static abstract class Stmt extends TreeNode {$/;"	c	class:Tree
Stmt	src/main/ll1pg/Decaf.spec	/^Stmt            :   Block$/;"	t
StmtList	build/generated-src/ll1pg/LLTable.java	/^    public static final int StmtList = 303;$/;"	f	class:LLTable
StmtList	src/main/ll1pg/Decaf.spec	/^StmtList        :   Stmt StmtList$/;"	t
StoreWord	src/main/java/decaf/lowlevel/Mips.java	/^        public StoreWord(Temp src, Temp base, int offset) {$/;"	m	class:Mips.StoreWord
StoreWord	src/main/java/decaf/lowlevel/Mips.java	/^    public static class StoreWord extends PseudoInstr {$/;"	c	class:Mips
StringLit	src/main/java/decaf/frontend/tree/Tree.java	/^        public StringLit(String value, Pos pos) {$/;"	m	class:Tree.StringLit
StringLit	src/main/java/decaf/frontend/tree/Tree.java	/^    public static class StringLit extends Expr {$/;"	c	class:Tree
StringPool	src/main/java/decaf/lowlevel/tac/StringPool.java	/^public class StringPool implements Iterable<String> {$/;"	c
StringUtils	src/main/java/decaf/lowlevel/StringUtils.java	/^public final class StringUtils {$/;"	c
SubNotIntError	src/main/java/decaf/driver/error/SubNotIntError.java	/^    public SubNotIntError(Pos pos) {$/;"	m	class:SubNotIntError
SubNotIntError	src/main/java/decaf/driver/error/SubNotIntError.java	/^public class SubNotIntError extends DecafError {$/;"	c
SubroutineEmitter	src/main/java/decaf/backend/asm/SubroutineEmitter.java	/^    protected SubroutineEmitter(AsmEmitter emitter, SubroutineInfo info) {$/;"	m	class:SubroutineEmitter
SubroutineEmitter	src/main/java/decaf/backend/asm/SubroutineEmitter.java	/^public abstract class SubroutineEmitter {$/;"	c
SubroutineInfo	src/main/java/decaf/backend/asm/SubroutineInfo.java	/^    public SubroutineInfo(FuncLabel funcLabel, int numArg, boolean hasCalls, int argsSize) {$/;"	m	class:SubroutineInfo
SubroutineInfo	src/main/java/decaf/backend/asm/SubroutineInfo.java	/^public class SubroutineInfo {$/;"	c
Symbol	src/main/java/decaf/frontend/symbol/Symbol.java	/^    Symbol(String name, Type type, Pos pos) {$/;"	m	class:Symbol
Symbol	src/main/java/decaf/frontend/symbol/Symbol.java	/^public abstract class Symbol implements Comparable<Symbol> {$/;"	c
Syscall	src/main/java/decaf/lowlevel/Mips.java	/^        public Syscall() {$/;"	m	class:Mips.Syscall
Syscall	src/main/java/decaf/lowlevel/Mips.java	/^    public static class Syscall extends NativeInstr {$/;"	c	class:Mips
T0	src/main/java/decaf/lowlevel/Mips.java	/^    public static final Reg T0 = new Reg(8, "$t0");$/;"	f	class:Mips
T1	src/main/java/decaf/lowlevel/Mips.java	/^    public static final Reg T1 = new Reg(9, "$t1");$/;"	f	class:Mips
T2	src/main/java/decaf/lowlevel/Mips.java	/^    public static final Reg T2 = new Reg(10, "$t2");$/;"	f	class:Mips
T3	src/main/java/decaf/lowlevel/Mips.java	/^    public static final Reg T3 = new Reg(11, "$t3");$/;"	f	class:Mips
T4	src/main/java/decaf/lowlevel/Mips.java	/^    public static final Reg T4 = new Reg(12, "$t4");$/;"	f	class:Mips
T5	src/main/java/decaf/lowlevel/Mips.java	/^    public static final Reg T5 = new Reg(13, "$t5");$/;"	f	class:Mips
T6	src/main/java/decaf/lowlevel/Mips.java	/^    public static final Reg T6 = new Reg(14, "$t6");$/;"	f	class:Mips
T7	src/main/java/decaf/lowlevel/Mips.java	/^    public static final Reg T7 = new Reg(15, "$t7");$/;"	f	class:Mips
T8	src/main/java/decaf/lowlevel/Mips.java	/^    public static final Reg T8 = new Reg(24, "$t8");$/;"	f	class:Mips
T9	src/main/java/decaf/lowlevel/Mips.java	/^    public static final Reg T9 = new Reg(25, "$t9");$/;"	f	class:Mips
TARGET	src/main/java/decaf/driver/OptParser.java	/^    static final String TARGET = "t";$/;"	f	class:OptParser
TARGETS	TestCases/testAll.py	/^TARGETS = {$/;"	v
TArray	src/main/java/decaf/frontend/tree/Tree.java	/^        public TArray(TypeLit elemType, Pos pos) {$/;"	m	class:Tree.TArray
TArray	src/main/java/decaf/frontend/tree/Tree.java	/^    public static class TArray extends TypeLit {$/;"	c	class:Tree
TBool	src/main/java/decaf/frontend/tree/Tree.java	/^        public TBool(Pos pos) {$/;"	m	class:Tree.TBool
TBool	src/main/java/decaf/frontend/tree/Tree.java	/^    public static class TBool extends TypeLit {$/;"	c	class:Tree
TClass	src/main/java/decaf/frontend/tree/Tree.java	/^        public TClass(Id id, Pos pos) {$/;"	m	class:Tree.TClass
TClass	src/main/java/decaf/frontend/tree/Tree.java	/^    public static class TClass extends TypeLit {$/;"	c	class:Tree
TEMP	src/main/java/decaf/lowlevel/label/Label.java	/^        TEMP, VTABLE, FUNC, INTRINSIC$/;"	e	enum:Label.Kind	file:
TEMPORARY	src/main/java/decaf/frontend/parsing/SemValue.java	/^        LVALUE, ID, TEMPORARY, TYPE_LIST$/;"	e	enum:SemValue.Kind	file:
THIS	build/generated-src/jacc/JaccTokens.java	/^    int THIS = 32;$/;"	f	interface:JaccTokens
THIS	build/generated-src/ll1pg/LLTable.java	/^    public static final int THIS = 264; \/\/# line 15$/;"	f	class:LLTable
THIS	src/main/java/decaf/frontend/parsing/Tokens.java	/^    int THIS = 8;$/;"	f	interface:Tokens
THIS	src/main/java/decaf/frontend/tree/Tree.java	/^        THIS, UNARY_EXPR, BINARY_EXPR, READ_INT, READ_LINE, NEW_CLASS, NEW_ARRAY, CLASS_TEST, CL/;"	e	enum:Tree.Kind	file:
TIMEOUT_SECONDS	TestCases/testAll.py	/^TIMEOUT_SECONDS = 5$/;"	v
TInt	src/main/java/decaf/frontend/tree/Tree.java	/^        public TInt(Pos pos) {$/;"	m	class:Tree.TInt
TInt	src/main/java/decaf/frontend/tree/Tree.java	/^    public static class TInt extends TypeLit {$/;"	c	class:Tree
TLambda	src/main/java/decaf/frontend/tree/Tree.java	/^        public TLambda(TypeLit returnType,List<TypeLit> param, Pos pos) {$/;"	m	class:Tree.TLambda
TLambda	src/main/java/decaf/frontend/tree/Tree.java	/^    public static class TLambda extends TypeLit {$/;"	c	class:Tree
TO	build/generated-src/jacc/JaccTokens.java	/^    int TO = 34;$/;"	f	interface:JaccTokens
TO	build/generated-src/ll1pg/LLTable.java	/^    public static final int TO = 288; \/\/# line 21$/;"	f	class:LLTable
TO	src/main/java/decaf/frontend/parsing/Tokens.java	/^    int TO = 202;$/;"	f	interface:Tokens
TOKEN	src/main/java/decaf/frontend/parsing/SemValue.java	/^        TOKEN, CLASS, CLASS_LIST, FIELD, FIELD_LIST, VAR, VAR_LIST, TYPE, STMT, STMT_LIST, BLOCK/;"	e	enum:SemValue.Kind	file:
TOP_LEVEL	src/main/java/decaf/frontend/tree/Tree.java	/^        TOP_LEVEL, CLASS_DEF, VAR_DEF, METHOD_DEF,$/;"	e	enum:Tree.Kind	file:
TString	src/main/java/decaf/frontend/tree/Tree.java	/^        public TString(Pos pos) {$/;"	m	class:Tree.TString
TString	src/main/java/decaf/frontend/tree/Tree.java	/^    public static class TString extends TypeLit {$/;"	c	class:Tree
TVoid	src/main/java/decaf/frontend/tree/Tree.java	/^        public TVoid(Pos pos) {$/;"	m	class:Tree.TVoid
TVoid	src/main/java/decaf/frontend/tree/Tree.java	/^    public static class TVoid extends TypeLit {$/;"	c	class:Tree
TYPE	src/main/java/decaf/frontend/parsing/SemValue.java	/^        TOKEN, CLASS, CLASS_LIST, FIELD, FIELD_LIST, VAR, VAR_LIST, TYPE, STMT, STMT_LIST, BLOCK/;"	e	enum:SemValue.Kind	file:
TYPE_LIST	src/main/java/decaf/frontend/parsing/SemValue.java	/^        LVALUE, ID, TEMPORARY, TYPE_LIST$/;"	e	enum:SemValue.Kind	file:
T_ARRAY	src/main/java/decaf/frontend/tree/Tree.java	/^        T_INT, T_BOOL, T_STRING, T_VOID, T_CLASS, T_ARRAY,$/;"	e	enum:Tree.Kind	file:
T_BOOL	src/main/java/decaf/frontend/tree/Tree.java	/^        T_INT, T_BOOL, T_STRING, T_VOID, T_CLASS, T_ARRAY,$/;"	e	enum:Tree.Kind	file:
T_CLASS	src/main/java/decaf/frontend/tree/Tree.java	/^        T_INT, T_BOOL, T_STRING, T_VOID, T_CLASS, T_ARRAY,$/;"	e	enum:Tree.Kind	file:
T_INT	src/main/java/decaf/frontend/tree/Tree.java	/^        T_INT, T_BOOL, T_STRING, T_VOID, T_CLASS, T_ARRAY,$/;"	e	enum:Tree.Kind	file:
T_LAMBDA	src/main/java/decaf/frontend/tree/Tree.java	/^        T_LAMBDA, LAMBDA$/;"	e	enum:Tree.Kind	file:
T_STRING	src/main/java/decaf/frontend/tree/Tree.java	/^        T_INT, T_BOOL, T_STRING, T_VOID, T_CLASS, T_ARRAY,$/;"	e	enum:Tree.Kind	file:
T_VOID	src/main/java/decaf/frontend/tree/Tree.java	/^        T_INT, T_BOOL, T_STRING, T_VOID, T_CLASS, T_ARRAY,$/;"	e	enum:Tree.Kind	file:
TacEmitter	src/main/java/decaf/frontend/tacgen/TacEmitter.java	/^public interface TacEmitter extends Visitor<FuncVisitor> {$/;"	i
TacFunc	src/main/java/decaf/lowlevel/tac/TacFunc.java	/^    TacFunc(FuncLabel entry, int numArgs) {$/;"	m	class:TacFunc
TacFunc	src/main/java/decaf/lowlevel/tac/TacFunc.java	/^public class TacFunc implements Comparable<TacFunc> {$/;"	c
TacGen	src/main/java/decaf/frontend/tacgen/TacGen.java	/^    public TacGen(Config config) {$/;"	m	class:TacGen
TacGen	src/main/java/decaf/frontend/tacgen/TacGen.java	/^public class TacGen extends Phase<Tree.TopLevel, TacProg> implements TacEmitter {$/;"	c
TacInstr	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^    public TacInstr(Kind kind, Temp[] dsts, Temp[] srcs, Label label) {$/;"	m	class:TacInstr
TacInstr	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^    public TacInstr(Label label) {$/;"	m	class:TacInstr
TacInstr	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^    public TacInstr(Temp[] dsts, Temp[] srcs) {$/;"	m	class:TacInstr
TacInstr	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^public abstract class TacInstr extends PseudoInstr {$/;"	c
TacProg	src/main/java/decaf/lowlevel/tac/TacProg.java	/^    public TacProg(List<VTable> vtables, List<TacFunc> funcs) {$/;"	m	class:TacProg
TacProg	src/main/java/decaf/lowlevel/tac/TacProg.java	/^public class TacProg {$/;"	c
Target	src/main/java/decaf/driver/Config.java	/^    public enum Target {$/;"	g	class:Config
Task	src/main/java/decaf/driver/Task.java	/^public interface Task<T, R> extends Function<T, Optional<R>> {$/;"	i
TaskFactory	src/main/java/decaf/driver/TaskFactory.java	/^    public TaskFactory(Config config) {$/;"	m	class:TaskFactory
TaskFactory	src/main/java/decaf/driver/TaskFactory.java	/^public class TaskFactory {$/;"	c
Temp	src/main/java/decaf/lowlevel/instr/Temp.java	/^    public Temp(int index) {$/;"	m	class:Temp
Temp	src/main/java/decaf/lowlevel/instr/Temp.java	/^public class Temp implements Comparable<Temp> {$/;"	c
Tester	TestCases/testAll.py	/^class Tester:$/;"	c
The New Decaf Compiler	README.md	/^# The New Decaf Compiler$/;"	c
This	src/main/java/decaf/frontend/tree/Tree.java	/^        public This(Pos pos) {$/;"	m	class:Tree.This
This	src/main/java/decaf/frontend/tree/Tree.java	/^    public static class This extends Expr {$/;"	c	class:Tree
ThisInStaticFuncError	src/main/java/decaf/driver/error/ThisInStaticFuncError.java	/^    public ThisInStaticFuncError(Pos pos) {$/;"	m	class:ThisInStaticFuncError
ThisInStaticFuncError	src/main/java/decaf/driver/error/ThisInStaticFuncError.java	/^public class ThisInStaticFuncError extends DecafError {$/;"	c
Tokens	src/main/java/decaf/frontend/parsing/Tokens.java	/^public interface Tokens {$/;"	i
TopLevel	build/generated-src/ll1pg/LLTable.java	/^    public static final int TopLevel = 298;$/;"	f	class:LLTable
TopLevel	src/main/java/decaf/frontend/tree/Tree.java	/^        public TopLevel(List<ClassDef> classes, Pos pos) {$/;"	m	class:Tree.TopLevel
TopLevel	src/main/java/decaf/frontend/tree/Tree.java	/^    public static class TopLevel extends TreeNode {$/;"	c	class:Tree
TopLevel	src/main/ll1pg/Decaf.spec	/^TopLevel        :   ClassDef ClassList$/;"	t
Tree	src/main/java/decaf/frontend/tree/Tree.java	/^public abstract class Tree {$/;"	c
TreeNode	src/main/java/decaf/frontend/tree/TreeNode.java	/^    public TreeNode(Tree.Kind kind, String displayName, Pos pos) {$/;"	m	class:TreeNode
TreeNode	src/main/java/decaf/frontend/tree/TreeNode.java	/^public abstract class TreeNode implements Iterable<Object> {$/;"	c
Type	build/generated-src/ll1pg/LLTable.java	/^    public static final int Type = 318;$/;"	f	class:LLTable
Type	src/main/java/decaf/frontend/type/Type.java	/^public abstract class Type {$/;"	c
Type	src/main/ll1pg/Decaf.spec	/^Type            :   AtomType ArrayType$/;"	t
TypeList	build/generated-src/ll1pg/LLTable.java	/^    public static final int TypeList = 294;$/;"	f	class:LLTable
TypeList	src/main/ll1pg/Decaf.spec	/^TypeList        :   Type TypeList1$/;"	t
TypeList1	build/generated-src/ll1pg/LLTable.java	/^    public static final int TypeList1 = 333;$/;"	f	class:LLTable
TypeList1	src/main/ll1pg/Decaf.spec	/^TypeList1        :    ',' Type TypeList1$/;"	t
TypeLit	src/main/java/decaf/frontend/tree/Tree.java	/^        public TypeLit(Kind kind, String displayName, Pos pos) {$/;"	m	class:Tree.TypeLit
TypeLit	src/main/java/decaf/frontend/tree/Tree.java	/^    public static abstract class TypeLit extends TreeNode {$/;"	c	class:Tree
TypeLitVisited	src/main/java/decaf/frontend/typecheck/TypeLitVisited.java	/^public interface TypeLitVisited extends Visitor<ScopeStack>, ErrorIssuer {$/;"	i
Typer	src/main/java/decaf/frontend/typecheck/Typer.java	/^    public Typer(Config config) {$/;"	m	class:Typer
Typer	src/main/java/decaf/frontend/typecheck/Typer.java	/^public class Typer extends Phase<Tree.TopLevel, Tree.TopLevel> implements TypeLitVisited {$/;"	c
UMINUS	build/generated-src/jacc/JaccTokens.java	/^    int UMINUS = 35;$/;"	f	interface:JaccTokens
UNARY_EXPR	src/main/java/decaf/frontend/tree/Tree.java	/^        THIS, UNARY_EXPR, BINARY_EXPR, READ_INT, READ_LINE, NEW_CLASS, NEW_ARRAY, CLASS_TEST, CL/;"	e	enum:Tree.Kind	file:
Unary	src/main/java/decaf/frontend/tree/Tree.java	/^        public Unary(UnaryOp op, Expr operand, Pos pos) {$/;"	m	class:Tree.Unary
Unary	src/main/java/decaf/frontend/tree/Tree.java	/^    public static class Unary extends Expr {$/;"	c	class:Tree
Unary	src/main/java/decaf/lowlevel/Mips.java	/^        public Unary(UnaryOp op, Temp dst, Temp src) {$/;"	m	class:Mips.Unary
Unary	src/main/java/decaf/lowlevel/Mips.java	/^    public static class Unary extends PseudoInstr {$/;"	c	class:Mips
Unary	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public Unary(Op op, Temp dst, Temp operand) {$/;"	m	class:TacInstr.Unary
Unary	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^    public static class Unary extends TacInstr {$/;"	c	class:TacInstr
UnaryOp	src/main/java/decaf/frontend/tree/Tree.java	/^    public enum UnaryOp {$/;"	g	class:Tree
UnaryOp	src/main/java/decaf/lowlevel/Mips.java	/^    public enum UnaryOp {$/;"	g	class:Mips
UndeclVarError	src/main/java/decaf/driver/error/UndeclVarError.java	/^    public UndeclVarError(Pos pos, String name) {$/;"	m	class:UndeclVarError
UndeclVarError	src/main/java/decaf/driver/error/UndeclVarError.java	/^public class UndeclVarError extends DecafError {$/;"	c
UnrecogCharError	src/main/java/decaf/driver/error/UnrecogCharError.java	/^    public UnrecogCharError(Pos pos, char c) {$/;"	m	class:UnrecogCharError
UnrecogCharError	src/main/java/decaf/driver/error/UnrecogCharError.java	/^public class UnrecogCharError extends DecafError {$/;"	c
UntermStrError	src/main/java/decaf/driver/error/UntermStrError.java	/^    public UntermStrError(Pos pos, String str) {$/;"	m	class:UntermStrError
UntermStrError	src/main/java/decaf/driver/error/UntermStrError.java	/^public class UntermStrError extends DecafError {$/;"	c
UserAction	src/main/java/decaf/frontend/parsing/SemValue.java	/^    private void UserAction(SemValue $$,$/;"	m	class:SemValue	file:
V0	src/main/java/decaf/lowlevel/Mips.java	/^    public static final Reg V0 = new Reg(2, "$v0"); \/\/ return value 0$/;"	f	class:Mips
V1	src/main/java/decaf/lowlevel/Mips.java	/^    public static final Reg V1 = new Reg(3, "$v1"); \/\/ return value 1, but used as an addition/;"	f	class:Mips
VAR	build/generated-src/jacc/JaccTokens.java	/^    int VAR = 36;$/;"	f	interface:JaccTokens
VAR	build/generated-src/ll1pg/LLTable.java	/^    public static final int VAR = 289; \/\/# line 21$/;"	f	class:LLTable
VAR	src/main/java/decaf/frontend/parsing/SemValue.java	/^        TOKEN, CLASS, CLASS_LIST, FIELD, FIELD_LIST, VAR, VAR_LIST, TYPE, STMT, STMT_LIST, BLOCK/;"	e	enum:SemValue.Kind	file:
VAR	src/main/java/decaf/frontend/parsing/Tokens.java	/^    int VAR = 201;$/;"	f	interface:Tokens
VAR_DEF	src/main/java/decaf/frontend/tree/Tree.java	/^        TOP_LEVEL, CLASS_DEF, VAR_DEF, METHOD_DEF,$/;"	e	enum:Tree.Kind	file:
VAR_LIST	src/main/java/decaf/frontend/parsing/SemValue.java	/^        TOKEN, CLASS, CLASS_LIST, FIELD, FIELD_LIST, VAR, VAR_LIST, TYPE, STMT, STMT_LIST, BLOCK/;"	e	enum:SemValue.Kind	file:
VAR_SEL	src/main/java/decaf/frontend/tree/Tree.java	/^        INT_LIT, BOOL_LIT, STRING_LIT, NULL_LIT, VAR_SEL, INDEX_SEL, CALL,$/;"	e	enum:Tree.Kind	file:
VOID	build/generated-src/jacc/JaccTokens.java	/^    int VOID = 38;$/;"	f	interface:JaccTokens
VOID	build/generated-src/ll1pg/LLTable.java	/^    public static final int VOID = 257; \/\/# line 14$/;"	f	class:LLTable
VOID	src/main/java/decaf/frontend/parsing/Tokens.java	/^    int VOID = 1;$/;"	f	interface:Tokens
VOID	src/main/java/decaf/frontend/type/BuiltInType.java	/^    public static final BuiltInType VOID = new BuiltInType("void");$/;"	f	class:BuiltInType
VTABLE	src/main/java/decaf/lowlevel/label/Label.java	/^        TEMP, VTABLE, FUNC, INTRINSIC$/;"	e	enum:Label.Kind	file:
VTable	src/main/java/decaf/lowlevel/tac/VTable.java	/^    VTable(String className, Optional<VTable> parent) {$/;"	m	class:VTable
VTable	src/main/java/decaf/lowlevel/tac/VTable.java	/^public class VTable {$/;"	c
VTableLabel	src/main/java/decaf/lowlevel/label/VTableLabel.java	/^    public VTableLabel(String clazz) {$/;"	m	class:VTableLabel
VTableLabel	src/main/java/decaf/lowlevel/label/VTableLabel.java	/^public class VTableLabel extends Label {$/;"	c
Var	build/generated-src/ll1pg/LLTable.java	/^    public static final int Var = 344;$/;"	f	class:LLTable
Var	src/main/ll1pg/Decaf.spec	/^Var             :   Type Id$/;"	t
VarDef	src/main/java/decaf/frontend/tree/Tree.java	/^        public VarDef(TypeLit typeLit, Id id, Pos pos) {$/;"	m	class:Tree.VarDef
VarDef	src/main/java/decaf/frontend/tree/Tree.java	/^    public static class VarDef extends Field {$/;"	c	class:Tree
VarError	src/main/java/decaf/driver/error/VarError.java	/^    public VarError(Pos pos, String id) {$/;"	m	class:VarError
VarError	src/main/java/decaf/driver/error/VarError.java	/^public class VarError extends DecafError{$/;"	c
VarList	build/generated-src/ll1pg/LLTable.java	/^    public static final int VarList = 300;$/;"	f	class:LLTable
VarList	src/main/ll1pg/Decaf.spec	/^VarList         :   Var VarList1$/;"	t
VarList1	build/generated-src/ll1pg/LLTable.java	/^    public static final int VarList1 = 327;$/;"	f	class:LLTable
VarList1	src/main/ll1pg/Decaf.spec	/^VarList1        :   ',' Var VarList1$/;"	t
VarSel	src/main/java/decaf/frontend/tree/Tree.java	/^        public VarSel(Expr receiver, Id variable, Pos pos) {$/;"	m	class:Tree.VarSel
VarSel	src/main/java/decaf/frontend/tree/Tree.java	/^        public VarSel(Id variable, Pos pos) {$/;"	m	class:Tree.VarSel
VarSel	src/main/java/decaf/frontend/tree/Tree.java	/^        public VarSel(Optional<Expr> receiver, Id variable, Pos pos) {$/;"	m	class:Tree.VarSel
VarSel	src/main/java/decaf/frontend/tree/Tree.java	/^    public static class VarSel extends LValue {$/;"	c	class:Tree
VarSymbol	src/main/java/decaf/frontend/symbol/VarSymbol.java	/^    public VarSymbol(String name, Type type, Pos pos) {$/;"	m	class:VarSymbol
VarSymbol	src/main/java/decaf/frontend/symbol/VarSymbol.java	/^public final class VarSymbol extends Symbol {$/;"	c
Visitor	src/main/java/decaf/frontend/tree/Visitor.java	/^public interface Visitor<C> {$/;"	i
Visitor	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^    public interface Visitor {$/;"	i	class:TacInstr
WHILE	build/generated-src/jacc/JaccTokens.java	/^    int WHILE = 39;$/;"	f	interface:JaccTokens
WHILE	build/generated-src/ll1pg/LLTable.java	/^    public static final int WHILE = 265; \/\/# line 15$/;"	f	class:LLTable
WHILE	src/main/java/decaf/frontend/parsing/Tokens.java	/^    int WHILE = 9;$/;"	f	interface:Tokens
WHILE	src/main/java/decaf/frontend/tree/Tree.java	/^        LOCAL_VAR_DEF, BLOCK, ASSIGN, EXPR_EVAL, SKIP, IF, WHILE, FOR, BREAK, RETURN, PRINT,$/;"	e	enum:Tree.Kind	file:
While	src/main/java/decaf/frontend/tree/Tree.java	/^        public While(Expr cond, Stmt body, Pos pos) {$/;"	m	class:Tree.While
While	src/main/java/decaf/frontend/tree/Tree.java	/^    public static class While extends Stmt {$/;"	c	class:Tree
YYBYACC	src/main/y.tab.c	/^#define YYBYACC /;"	d	file:
YYEMPTY	src/main/y.tab.c	/^#define YYEMPTY /;"	d	file:
YYENOMEM	src/main/y.tab.c	/^#define YYENOMEM /;"	d	file:
YYEOF	build/generated-src/jflex/DecafLexer.java	/^  public static final int YYEOF = -1;$/;"	f	class:DecafLexer
YYEOF	src/main/y.tab.c	/^#define YYEOF /;"	d	file:
YYINITIAL	build/generated-src/jflex/DecafLexer.java	/^  public static final int YYINITIAL = 0;$/;"	f	class:DecafLexer
YYMAJOR	src/main/y.tab.c	/^#define YYMAJOR /;"	d	file:
YYMINOR	src/main/y.tab.c	/^#define YYMINOR /;"	d	file:
YYPATCH	src/main/y.tab.c	/^#define YYPATCH /;"	d	file:
YYRECOVERING	src/main/y.tab.c	/^#define YYRECOVERING(/;"	d	file:
ZERO	src/main/java/decaf/lowlevel/Mips.java	/^    public static final Reg ZERO = new Reg(0, "$zero"); \/\/ always zero (not allocatable)$/;"	f	class:Mips
ZZ_ACTION	build/generated-src/jflex/DecafLexer.java	/^  private static final int [] ZZ_ACTION = zzUnpackAction();$/;"	f	class:DecafLexer	file:
ZZ_ACTION_PACKED_0	build/generated-src/jflex/DecafLexer.java	/^  private static final String ZZ_ACTION_PACKED_0 =$/;"	f	class:DecafLexer	file:
ZZ_ATTRIBUTE	build/generated-src/jflex/DecafLexer.java	/^  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();$/;"	f	class:DecafLexer	file:
ZZ_ATTRIBUTE_PACKED_0	build/generated-src/jflex/DecafLexer.java	/^  private static final String ZZ_ATTRIBUTE_PACKED_0 =$/;"	f	class:DecafLexer	file:
ZZ_BUFFERSIZE	build/generated-src/jflex/DecafLexer.java	/^  private static final int ZZ_BUFFERSIZE = 16384;$/;"	f	class:DecafLexer	file:
ZZ_CMAP	build/generated-src/jflex/DecafLexer.java	/^  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);$/;"	f	class:DecafLexer	file:
ZZ_CMAP_PACKED	build/generated-src/jflex/DecafLexer.java	/^  private static final String ZZ_CMAP_PACKED = $/;"	f	class:DecafLexer	file:
ZZ_ERROR_MSG	build/generated-src/jflex/DecafLexer.java	/^  private static final String ZZ_ERROR_MSG[] = {$/;"	f	class:DecafLexer	file:
ZZ_LEXSTATE	build/generated-src/jflex/DecafLexer.java	/^  private static final int ZZ_LEXSTATE[] = { $/;"	f	class:DecafLexer	file:
ZZ_NO_MATCH	build/generated-src/jflex/DecafLexer.java	/^  private static final int ZZ_NO_MATCH = 1;$/;"	f	class:DecafLexer	file:
ZZ_PUSHBACK_2BIG	build/generated-src/jflex/DecafLexer.java	/^  private static final int ZZ_PUSHBACK_2BIG = 2;$/;"	f	class:DecafLexer	file:
ZZ_ROWMAP	build/generated-src/jflex/DecafLexer.java	/^  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();$/;"	f	class:DecafLexer	file:
ZZ_ROWMAP_PACKED_0	build/generated-src/jflex/DecafLexer.java	/^  private static final String ZZ_ROWMAP_PACKED_0 =$/;"	f	class:DecafLexer	file:
ZZ_TRANS	build/generated-src/jflex/DecafLexer.java	/^  private static final int [] ZZ_TRANS = zzUnpackTrans();$/;"	f	class:DecafLexer	file:
ZZ_TRANS_PACKED_0	build/generated-src/jflex/DecafLexer.java	/^  private static final String ZZ_TRANS_PACKED_0 =$/;"	f	class:DecafLexer	file:
ZZ_UNKNOWN_ERROR	build/generated-src/jflex/DecafLexer.java	/^  private static final int ZZ_UNKNOWN_ERROR = 0;$/;"	f	class:DecafLexer	file:
_SKIP	gradlew.bat	/^set _SKIP=2$/;"	v
__init__	TestCases/testAll.py	/^    def __init__(self, pa: str, test_set: str, exclude: [str]):$/;"	m	class:PATester
__init__	TestCases/testAll.py	/^    def __init__(self, test_set: str, exclude: [str]):$/;"	m	class:JVMTester
__init__	TestCases/testAll.py	/^    def __init__(self, test_set: str, exclude: [str]):$/;"	m	class:MipsTester
__init__	TestCases/testAll.py	/^    def __init__(self, test_set: str, exclude: [str]):$/;"	m	class:PA1ATester
__init__	TestCases/testAll.py	/^    def __init__(self, test_set: str, exclude: [str]):$/;"	m	class:PA1BTester
__init__	TestCases/testAll.py	/^    def __init__(self, test_set: str, exclude: [str]):$/;"	m	class:PA2Tester
__init__	TestCases/testAll.py	/^    def __init__(self, test_set: str, exclude: [str]):$/;"	m	class:PA3Tester
__init__	TestCases/testAll.py	/^    def __init__(self, test_set: str, exclude: [str]):$/;"	m	class:Tester
_actual_args	src/main/java/decaf/lowlevel/tac/Simulator.java	/^    private Vector<Integer> _actual_args;$/;"	f	class:Simulator	file:
_addr_to_function	src/main/java/decaf/lowlevel/tac/Simulator.java	/^    private Map<Integer, TacFunc> _addr_to_function;$/;"	f	class:Simulator	file:
_call_stack	src/main/java/decaf/lowlevel/tac/Simulator.java	/^    private Stack<Frame> _call_stack;$/;"	f	class:Simulator	file:
_halt	src/main/java/decaf/lowlevel/tac/Simulator.java	/^    private boolean _halt;$/;"	f	class:Simulator	file:
_in	src/main/java/decaf/lowlevel/tac/Simulator.java	/^    private final InputStream _in;$/;"	f	class:Simulator	file:
_instrs	src/main/java/decaf/lowlevel/tac/Simulator.java	/^    private Vector<TacInstr> _instrs;$/;"	f	class:Simulator	file:
_label_to_addr	src/main/java/decaf/lowlevel/tac/Simulator.java	/^    private Map<String, Integer> _label_to_addr;$/;"	f	class:Simulator	file:
_label_to_function	src/main/java/decaf/lowlevel/tac/Simulator.java	/^    private Map<String, TacFunc> _label_to_function;$/;"	f	class:Simulator	file:
_memory	src/main/java/decaf/lowlevel/tac/Simulator.java	/^    private Memory _memory;$/;"	f	class:Simulator	file:
_out	src/main/java/decaf/lowlevel/tac/Simulator.java	/^    private final PrintWriter _out;$/;"	f	class:Simulator	file:
_pc	src/main/java/decaf/lowlevel/tac/Simulator.java	/^    private int _pc;$/;"	f	class:Simulator	file:
_string_pool	src/main/java/decaf/lowlevel/tac/Simulator.java	/^    private StringPool _string_pool;$/;"	f	class:Simulator	file:
_vtable_to_addr	src/main/java/decaf/lowlevel/tac/Simulator.java	/^    private Map<String, Integer> _vtable_to_addr;$/;"	f	class:Simulator	file:
accept	src/main/java/decaf/backend/dataflow/LivenessAnalyzer.java	/^    public void accept(CFG<I> graph) {$/;"	m	class:LivenessAnalyzer
accept	src/main/java/decaf/backend/reg/BruteRegAlloc.java	/^    public void accept(CFG<PseudoInstr> graph, SubroutineInfo info) {$/;"	m	class:BruteRegAlloc
accept	src/main/java/decaf/backend/reg/RegAlloc.java	/^    public abstract void accept(CFG<PseudoInstr> graph, SubroutineInfo info);$/;"	m	class:RegAlloc
accept	src/main/java/decaf/frontend/tree/Tree.java	/^        public <C> void accept(Visitor<C> v, C ctx) {$/;"	m	class:Tree.Assign
accept	src/main/java/decaf/frontend/tree/Tree.java	/^        public <C> void accept(Visitor<C> v, C ctx) {$/;"	m	class:Tree.Block
accept	src/main/java/decaf/frontend/tree/Tree.java	/^        public <C> void accept(Visitor<C> v, C ctx) {$/;"	m	class:Tree.BoolLit
accept	src/main/java/decaf/frontend/tree/Tree.java	/^        public <C> void accept(Visitor<C> v, C ctx) {$/;"	m	class:Tree.Break
accept	src/main/java/decaf/frontend/tree/Tree.java	/^        public <C> void accept(Visitor<C> v, C ctx) {$/;"	m	class:Tree.Call
accept	src/main/java/decaf/frontend/tree/Tree.java	/^        public <C> void accept(Visitor<C> v, C ctx) {$/;"	m	class:Tree.ClassCast
accept	src/main/java/decaf/frontend/tree/Tree.java	/^        public <C> void accept(Visitor<C> v, C ctx) {$/;"	m	class:Tree.ClassDef
accept	src/main/java/decaf/frontend/tree/Tree.java	/^        public <C> void accept(Visitor<C> v, C ctx) {$/;"	m	class:Tree.ClassTest
accept	src/main/java/decaf/frontend/tree/Tree.java	/^        public <C> void accept(Visitor<C> v, C ctx) {$/;"	m	class:Tree.ExprEval
accept	src/main/java/decaf/frontend/tree/Tree.java	/^        public <C> void accept(Visitor<C> v, C ctx) {$/;"	m	class:Tree.For
accept	src/main/java/decaf/frontend/tree/Tree.java	/^        public <C> void accept(Visitor<C> v, C ctx) {$/;"	m	class:Tree.If
accept	src/main/java/decaf/frontend/tree/Tree.java	/^        public <C> void accept(Visitor<C> v, C ctx) {$/;"	m	class:Tree.IndexSel
accept	src/main/java/decaf/frontend/tree/Tree.java	/^        public <C> void accept(Visitor<C> v, C ctx) {$/;"	m	class:Tree.IntLit
accept	src/main/java/decaf/frontend/tree/Tree.java	/^        public <C> void accept(Visitor<C> v, C ctx) {$/;"	m	class:Tree.Lambda
accept	src/main/java/decaf/frontend/tree/Tree.java	/^        public <C> void accept(Visitor<C> v, C ctx) {$/;"	m	class:Tree.LocalVarDef
accept	src/main/java/decaf/frontend/tree/Tree.java	/^        public <C> void accept(Visitor<C> v, C ctx) {$/;"	m	class:Tree.MethodDef
accept	src/main/java/decaf/frontend/tree/Tree.java	/^        public <C> void accept(Visitor<C> v, C ctx) {$/;"	m	class:Tree.NewArray
accept	src/main/java/decaf/frontend/tree/Tree.java	/^        public <C> void accept(Visitor<C> v, C ctx) {$/;"	m	class:Tree.NewClass
accept	src/main/java/decaf/frontend/tree/Tree.java	/^        public <C> void accept(Visitor<C> v, C ctx) {$/;"	m	class:Tree.NullLit
accept	src/main/java/decaf/frontend/tree/Tree.java	/^        public <C> void accept(Visitor<C> v, C ctx) {$/;"	m	class:Tree.Print
accept	src/main/java/decaf/frontend/tree/Tree.java	/^        public <C> void accept(Visitor<C> v, C ctx) {$/;"	m	class:Tree.Return
accept	src/main/java/decaf/frontend/tree/Tree.java	/^        public <C> void accept(Visitor<C> v, C ctx) {$/;"	m	class:Tree.Skip
accept	src/main/java/decaf/frontend/tree/Tree.java	/^        public <C> void accept(Visitor<C> v, C ctx) {$/;"	m	class:Tree.StringLit
accept	src/main/java/decaf/frontend/tree/Tree.java	/^        public <C> void accept(Visitor<C> v, C ctx) {$/;"	m	class:Tree.TArray
accept	src/main/java/decaf/frontend/tree/Tree.java	/^        public <C> void accept(Visitor<C> v, C ctx) {$/;"	m	class:Tree.TBool
accept	src/main/java/decaf/frontend/tree/Tree.java	/^        public <C> void accept(Visitor<C> v, C ctx) {$/;"	m	class:Tree.TClass
accept	src/main/java/decaf/frontend/tree/Tree.java	/^        public <C> void accept(Visitor<C> v, C ctx) {$/;"	m	class:Tree.TInt
accept	src/main/java/decaf/frontend/tree/Tree.java	/^        public <C> void accept(Visitor<C> v, C ctx) {$/;"	m	class:Tree.TLambda
accept	src/main/java/decaf/frontend/tree/Tree.java	/^        public <C> void accept(Visitor<C> v, C ctx) {$/;"	m	class:Tree.TString
accept	src/main/java/decaf/frontend/tree/Tree.java	/^        public <C> void accept(Visitor<C> v, C ctx) {$/;"	m	class:Tree.TVoid
accept	src/main/java/decaf/frontend/tree/Tree.java	/^        public <C> void accept(Visitor<C> v, C ctx) {$/;"	m	class:Tree.TopLevel
accept	src/main/java/decaf/frontend/tree/Tree.java	/^        public <C> void accept(Visitor<C> v, C ctx) {$/;"	m	class:Tree.Unary
accept	src/main/java/decaf/frontend/tree/Tree.java	/^        public <C> void accept(Visitor<C> v, C ctx) {$/;"	m	class:Tree.VarDef
accept	src/main/java/decaf/frontend/tree/Tree.java	/^        public <C> void accept(Visitor<C> v, C ctx) {$/;"	m	class:Tree.VarSel
accept	src/main/java/decaf/frontend/tree/Tree.java	/^        public <C> void accept(Visitor<C> v, C ctx) {$/;"	m	class:Tree.While
accept	src/main/java/decaf/frontend/tree/Tree.java	/^        public <C> void accept(Visitor<C> visitor, C ctx) {$/;"	m	class:Tree.Binary
accept	src/main/java/decaf/frontend/tree/Tree.java	/^        public <C> void accept(Visitor<C> visitor, C ctx) {$/;"	m	class:Tree.ReadInt
accept	src/main/java/decaf/frontend/tree/Tree.java	/^        public <C> void accept(Visitor<C> visitor, C ctx) {$/;"	m	class:Tree.ReadLine
accept	src/main/java/decaf/frontend/tree/Tree.java	/^        public <C> void accept(Visitor<C> visitor, C ctx) {$/;"	m	class:Tree.This
accept	src/main/java/decaf/frontend/tree/TreeNode.java	/^    public abstract <C> void accept(Visitor<C> v, C ctx);$/;"	m	class:TreeNode
accept	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public void accept(Visitor v) {$/;"	m	class:TacInstr.Assign
accept	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public void accept(Visitor v) {$/;"	m	class:TacInstr.Binary
accept	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public void accept(Visitor v) {$/;"	m	class:TacInstr.Branch
accept	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public void accept(Visitor v) {$/;"	m	class:TacInstr.CondBranch
accept	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public void accept(Visitor v) {$/;"	m	class:TacInstr.DirectCall
accept	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public void accept(Visitor v) {$/;"	m	class:TacInstr.IndirectCall
accept	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public void accept(Visitor v) {$/;"	m	class:TacInstr.LoadImm4
accept	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public void accept(Visitor v) {$/;"	m	class:TacInstr.LoadStrConst
accept	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public void accept(Visitor v) {$/;"	m	class:TacInstr.LoadVTbl
accept	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public void accept(Visitor v) {$/;"	m	class:TacInstr.Mark
accept	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public void accept(Visitor v) {$/;"	m	class:TacInstr.Memo
accept	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public void accept(Visitor v) {$/;"	m	class:TacInstr.Memory
accept	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public void accept(Visitor v) {$/;"	m	class:TacInstr.Parm
accept	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public void accept(Visitor v) {$/;"	m	class:TacInstr.Return
accept	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public void accept(Visitor v) {$/;"	m	class:TacInstr.Unary
accept	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^    public abstract void accept(Visitor v);$/;"	m	class:TacInstr
act	build/generated-src/ll1pg/LLTable.java	/^    public void act(int id, SemValue[] params) {$/;"	m	class:LLTable
add	src/main/java/decaf/lowlevel/tac/StringPool.java	/^    public int add(String value) {$/;"	m	class:StringPool
add	src/main/java/decaf/lowlevel/tac/TacFunc.java	/^    void add(TacInstr instr) {$/;"	m	class:TacFunc
addMethod	src/main/java/decaf/frontend/tree/Tree.java	/^        public void addMethod(MethodDef methodDef){$/;"	m	class:Tree.ClassDef
allSeq	src/main/java/decaf/backend/dataflow/BasicBlock.java	/^    public List<Loc<I>> allSeq() {$/;"	m	class:BasicBlock
allSymbols	build/generated-src/ll1pg/LLTable.java	/^    private final String[] allSymbols = {$/;"	f	class:LLTable	file:
alloc	src/main/java/decaf/lowlevel/tac/Simulator.java	/^        public int alloc(int size) {$/;"	m	class:Simulator.Memory
allocForLoc	src/main/java/decaf/backend/reg/BruteRegAlloc.java	/^    private void allocForLoc(Loc<PseudoInstr> loc, SubroutineEmitter subEmitter) {$/;"	m	class:BruteRegAlloc	file:
allocRegFor	src/main/java/decaf/backend/reg/BruteRegAlloc.java	/^    private Reg allocRegFor(Temp temp, boolean isRead, Set<Temp> live, SubroutineEmitter subEmit/;"	m	class:BruteRegAlloc	file:
allocatableRegs	src/main/java/decaf/backend/asm/AsmEmitter.java	/^    public final Reg[] allocatableRegs;$/;"	f	class:AsmEmitter
allocatableRegs	src/main/java/decaf/lowlevel/Mips.java	/^    public static final Reg[] allocatableRegs = ArrayUtils.addAll(callerSaved, calleeSaved);$/;"	f	class:Mips
allowClassNameVar	src/main/java/decaf/frontend/typecheck/Typer.java	/^    private boolean allowClassNameVar = false;$/;"	f	class:Typer	file:
analyzeLivenessForEachLocIn	src/main/java/decaf/backend/dataflow/LivenessAnalyzer.java	/^    private void analyzeLivenessForEachLocIn(BasicBlock<I> bb) {$/;"	m	class:LivenessAnalyzer	file:
apply	src/main/java/decaf/driver/Phase.java	/^    public Optional<Out> apply(In in) {$/;"	m	class:Phase
argCount	src/main/java/decaf/backend/asm/mips/MipsAsmEmitter.java	/^        private int argCount = 0;$/;"	f	class:MipsAsmEmitter.MipsInstrSelector	file:
argRegs	src/main/java/decaf/lowlevel/Mips.java	/^    public static final Reg[] argRegs = new Reg[]{$/;"	f	class:Mips
argTypes	src/main/java/decaf/frontend/type/FunType.java	/^    public final List<Type> argTypes;$/;"	f	class:FunType
args	src/main/java/decaf/frontend/tree/Tree.java	/^        public List<Expr> args;$/;"	f	class:Tree.Call
argsSize	src/main/java/decaf/backend/asm/SubroutineInfo.java	/^    public final int argsSize;$/;"	f	class:SubroutineInfo
argsTemps	src/main/java/decaf/lowlevel/tac/FuncVisitor.java	/^    private Temp[] argsTemps;$/;"	f	class:FuncVisitor	file:
arity	src/main/java/decaf/frontend/type/FunType.java	/^    public int arity() {$/;"	m	class:FunType
array	src/main/java/decaf/frontend/tree/Tree.java	/^        public Expr array;$/;"	f	class:Tree.IndexSel
array	src/main/java/decaf/lowlevel/tac/Simulator.java	/^        int[] array;$/;"	f	class:Simulator.Frame
assignPos	src/main/java/decaf/frontend/tree/Tree.java	/^        public Pos assignPos;$/;"	f	class:Tree.LocalVarDef
backwardIterator	src/main/java/decaf/backend/dataflow/BasicBlock.java	/^    public Iterator<Loc<I>> backwardIterator() {$/;"	m	class:BasicBlock
base	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public final Temp base;$/;"	f	class:TacInstr.Memory
bbs	src/main/java/decaf/backend/dataflow/CFGBuilder.java	/^    private List<BasicBlock<I>> bbs = new ArrayList<>();$/;"	f	class:CFGBuilder	file:
begin	build/generated-src/ll1pg/LLTable.java	/^    private ArrayList<Set<Integer>> begin = new ArrayList<Set<Integer>>();$/;"	f	class:LLTable	file:
beginRaw	build/generated-src/ll1pg/LLTable.java	/^    private final Integer[][] beginRaw = {$/;"	f	class:LLTable	file:
beginSet	build/generated-src/ll1pg/LLTable.java	/^    public Set<Integer> beginSet(int symbol) {$/;"	m	class:LLTable
bind	src/main/java/decaf/backend/reg/BruteRegAlloc.java	/^    private void bind(Temp temp, Reg reg) {$/;"	m	class:BruteRegAlloc	file:
bindings	src/main/java/decaf/backend/reg/BruteRegAlloc.java	/^    private Map<Temp, Reg> bindings = new TreeMap<>();$/;"	f	class:BruteRegAlloc	file:
block	src/main/java/decaf/frontend/parsing/SemValue.java	/^    Tree.Block block;$/;"	f	class:SemValue
block	src/main/java/decaf/frontend/scope/LocalScope.java	/^    public Tree.Block block;$/;"	f	class:LocalScope
block	src/main/java/decaf/frontend/tree/Tree.java	/^        public Block block;$/;"	f	class:Tree.Lambda
blocked	src/main/java/decaf/frontend/tree/Tree.java	/^    private static Block blocked(Stmt stmt) {$/;"	m	class:Tree	file:
body	src/main/java/decaf/frontend/tree/Tree.java	/^        public Block body;$/;"	f	class:Tree.For
body	src/main/java/decaf/frontend/tree/Tree.java	/^        public Block body;$/;"	f	class:Tree.While
body	src/main/java/decaf/frontend/tree/Tree.java	/^        public Optional<Block> body;$/;"	f	class:Tree.MethodDef
boolConst	src/main/java/decaf/frontend/parsing/AbstractLexer.java	/^    protected int boolConst(boolean value) {$/;"	m	class:AbstractLexer
boolVal	src/main/java/decaf/frontend/parsing/SemValue.java	/^    boolean boolVal;$/;"	f	class:SemValue
buf	src/main/java/decaf/backend/asm/mips/MipsSubroutineEmitter.java	/^    private List<NativeInstr> buf = new ArrayList<>();$/;"	f	class:MipsSubroutineEmitter	file:
buf	src/main/java/decaf/backend/dataflow/CFGBuilder.java	/^    private List<Loc<I>> buf = new ArrayList<>();$/;"	f	class:CFGBuilder	file:
buffer	build/generated-src/jflex/DecafLexer.java	/^    private StringBuilder buffer = new StringBuilder();$/;"	f	class:DecafLexer	file:
buildBinaryExpr	src/main/java/decaf/frontend/parsing/AbstractParser.java	/^    protected SemValue buildBinaryExpr(SemValue first, List<SemValue> rest) {$/;"	m	class:AbstractParser
buildFrom	src/main/java/decaf/backend/dataflow/CFGBuilder.java	/^    public CFG<I> buildFrom(List<I> seq) {$/;"	m	class:CFGBuilder
buildVTableFor	src/main/java/decaf/lowlevel/tac/ProgramWriter.java	/^    private void buildVTableFor(ClassInfo clazz) {$/;"	m	class:ProgramWriter	file:
c	src/main/java/decaf/driver/error/UnrecogCharError.java	/^    private char c;$/;"	f	class:UnrecogCharError	file:
callIntrinsic	src/main/java/decaf/lowlevel/tac/Simulator.java	/^        private void callIntrinsic(Intrinsic.Opcode opcode) {$/;"	m	class:Simulator.InstrExecutor	file:
calleeSaved	src/main/java/decaf/lowlevel/Mips.java	/^    public static final Reg[] calleeSaved = new Reg[]{$/;"	f	class:Mips
callerRestore	src/main/java/decaf/backend/asm/mips/MipsAsmEmitter.java	/^        private void callerRestore() {$/;"	m	class:MipsAsmEmitter.MipsInstrSelector	file:
callerSave	src/main/java/decaf/backend/asm/mips/MipsAsmEmitter.java	/^        private void callerSave() {$/;"	m	class:MipsAsmEmitter.MipsInstrSelector	file:
callerSaveRegs	src/main/java/decaf/backend/asm/AsmEmitter.java	/^    public final Reg[] callerSaveRegs;$/;"	f	class:AsmEmitter
callerSaved	src/main/java/decaf/lowlevel/Mips.java	/^    public static final Reg[] callerSaved = new Reg[]{$/;"	f	class:Mips
checkCycles	src/main/java/decaf/frontend/typecheck/Namer.java	/^    private void checkCycles(Map<String, Tree.ClassDef> classes) {$/;"	m	class:Namer	file:
checkHeapAccess	src/main/java/decaf/lowlevel/tac/Simulator.java	/^        private Block checkHeapAccess(int base, int offset) {$/;"	m	class:Simulator.Memory	file:
checkTestExpr	src/main/java/decaf/frontend/typecheck/Typer.java	/^    private void checkTestExpr(Tree.Expr expr, ScopeStack ctx) {$/;"	m	class:Typer	file:
classList	src/main/java/decaf/frontend/parsing/SemValue.java	/^    List<Tree.ClassDef> classList;$/;"	f	class:SemValue
className	src/main/java/decaf/driver/error/NewAbstractError.java	/^    private String className;$/;"	f	class:NewAbstractError	file:
className	src/main/java/decaf/driver/error/NotAbstractClassError.java	/^    private String className;$/;"	f	class:NotAbstractClassError	file:
className	src/main/java/decaf/lowlevel/tac/VTable.java	/^    public final String className;$/;"	f	class:VTable
classes	src/main/java/decaf/frontend/tree/Tree.java	/^        public List<ClassDef> classes;$/;"	f	class:Tree.TopLevel
classes	src/main/java/decaf/lowlevel/tac/ProgramWriter.java	/^    private HashMap<String, ClassInfo> classes = new HashMap<>();$/;"	f	class:ProgramWriter	file:
clazz	src/main/java/decaf/frontend/parsing/SemValue.java	/^    Tree.ClassDef clazz;$/;"	f	class:SemValue
clazz	src/main/java/decaf/frontend/tree/Tree.java	/^        public Id clazz;$/;"	f	class:Tree.NewClass
clazz	src/main/java/decaf/lowlevel/label/FuncLabel.java	/^    public final String clazz;$/;"	f	class:FuncLabel
clazz	src/main/java/decaf/lowlevel/label/VTableLabel.java	/^    public final String clazz;$/;"	f	class:VTableLabel
close	src/main/java/decaf/backend/dataflow/CFGBuilder.java	/^    private void close() {$/;"	m	class:CFGBuilder	file:
close	src/main/java/decaf/frontend/scope/ScopeStack.java	/^    public void close() {$/;"	m	class:ScopeStack
close	src/main/java/decaf/lowlevel/AsmCodePrinter.java	/^    public String close() {$/;"	m	class:AsmCodePrinter
code	src/main/java/decaf/frontend/parsing/SemValue.java	/^    int code;$/;"	f	class:SemValue
code	src/main/java/decaf/frontend/tree/Tree.java	/^        public final int code;$/;"	f	class:Tree.Modifiers
color	TestCases/testAll.py	/^    color = '\\033[1;4;32m' if failed == 0 else '\\033[1;4;31m'$/;"	v
column	src/main/java/decaf/frontend/tree/Pos.java	/^    public final int column;$/;"	f	class:Pos
compareTo	src/main/java/decaf/frontend/symbol/Symbol.java	/^    public int compareTo(Symbol that) {$/;"	m	class:Symbol
compareTo	src/main/java/decaf/frontend/tree/Pos.java	/^    public int compareTo(Pos that) {$/;"	m	class:Pos
compareTo	src/main/java/decaf/lowlevel/instr/Temp.java	/^    public int compareTo(Temp that) {$/;"	m	class:Temp
compareTo	src/main/java/decaf/lowlevel/label/Label.java	/^    public int compareTo(Label that) {$/;"	m	class:Label
compareTo	src/main/java/decaf/lowlevel/tac/Simulator.java	/^            public int compareTo(Block o) {$/;"	m	class:Simulator.Memory.Block
compareTo	src/main/java/decaf/lowlevel/tac/TacFunc.java	/^    public int compareTo(TacFunc that) {$/;"	m	class:TacFunc
compatible	src/main/java/decaf/frontend/typecheck/Typer.java	/^    public boolean compatible(Tree.BinaryOp op, Type lhs, Type rhs) {$/;"	m	class:Typer
compatible	src/main/java/decaf/frontend/typecheck/Typer.java	/^    public boolean compatible(Tree.UnaryOp op, Type operand) {$/;"	m	class:Typer
computeDefAndLiveUseFor	src/main/java/decaf/backend/dataflow/LivenessAnalyzer.java	/^    private void computeDefAndLiveUseFor(BasicBlock<I> bb) {$/;"	m	class:LivenessAnalyzer	file:
cond	src/main/java/decaf/frontend/tree/Tree.java	/^        public Expr cond;$/;"	f	class:Tree.For
cond	src/main/java/decaf/frontend/tree/Tree.java	/^        public Expr cond;$/;"	f	class:Tree.If
cond	src/main/java/decaf/frontend/tree/Tree.java	/^        public Expr cond;$/;"	f	class:Tree.While
cond	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public final Temp cond;$/;"	f	class:TacInstr.CondBranch
config	src/main/java/decaf/driver/Phase.java	/^    protected final Config config;$/;"	f	class:Phase
config	src/main/java/decaf/driver/TaskFactory.java	/^    private final Config config;$/;"	f	class:TaskFactory	file:
config	src/main/java/decaf/lowlevel/log/Log.java	/^    public static void config(String fmt, Object... args) {$/;"	m	class:Log
containsClass	src/main/java/decaf/frontend/scope/ScopeStack.java	/^    public boolean containsClass(String key) {$/;"	m	class:ScopeStack
containsKey	src/main/java/decaf/frontend/scope/Scope.java	/^    public boolean containsKey(String key) {$/;"	m	class:Scope
count	src/main/java/decaf/driver/error/BadArgCountError.java	/^    private int count;$/;"	f	class:BadArgCountError	file:
count	src/main/java/decaf/driver/error/BadArgTypeError.java	/^    private int count;$/;"	f	class:BadArgTypeError	file:
count	src/main/java/decaf/driver/error/BadLambdaArgCountError.java	/^    private int count;$/;"	f	class:BadLambdaArgCountError	file:
count	src/main/java/decaf/driver/error/BadLengthArgError.java	/^    private int count;$/;"	f	class:BadLengthArgError	file:
count	src/main/java/decaf/driver/error/BadPrintArgError.java	/^    private String count;$/;"	f	class:BadPrintArgError	file:
createClassSymbol	src/main/java/decaf/frontend/typecheck/Namer.java	/^    private void createClassSymbol(Tree.ClassDef clazz, GlobalScope global) {$/;"	m	class:Namer	file:
createConstructorFor	src/main/java/decaf/lowlevel/tac/ProgramWriter.java	/^    private void createConstructorFor(String clazz) {$/;"	m	class:ProgramWriter	file:
ctx	src/main/java/decaf/lowlevel/tac/FuncVisitor.java	/^    private ProgramWriter.Context ctx;$/;"	f	class:FuncVisitor	file:
ctx	src/main/java/decaf/lowlevel/tac/ProgramWriter.java	/^    private Context ctx = new Context();$/;"	f	class:ProgramWriter	file:
currClass	src/main/java/decaf/frontend/scope/ScopeStack.java	/^    private ClassSymbol currClass;$/;"	f	class:ScopeStack	file:
currLambda	src/main/java/decaf/frontend/scope/ScopeStack.java	/^    private LambdaSymbol currLambda;$/;"	f	class:ScopeStack	file:
currMethod	src/main/java/decaf/frontend/scope/ScopeStack.java	/^    private MethodSymbol currMethod;$/;"	f	class:ScopeStack	file:
currentBBLabel	src/main/java/decaf/backend/dataflow/CFGBuilder.java	/^    private Optional<Label> currentBBLabel = Optional.empty();$/;"	f	class:CFGBuilder	file:
currentClass	src/main/java/decaf/frontend/scope/ScopeStack.java	/^    public ClassSymbol currentClass() {$/;"	m	class:ScopeStack
currentLambda	src/main/java/decaf/frontend/scope/ScopeStack.java	/^    public LambdaSymbol currentLambda() {$/;"	m	class:ScopeStack
currentMethod	src/main/java/decaf/frontend/scope/ScopeStack.java	/^    public MethodSymbol currentMethod() {$/;"	m	class:ScopeStack
currentScope	src/main/java/decaf/frontend/scope/ScopeStack.java	/^    public Scope currentScope() {$/;"	m	class:ScopeStack
currentSize	src/main/java/decaf/lowlevel/tac/Simulator.java	/^        private int currentSize = 4;$/;"	f	class:Simulator.Memory	file:
decIndent	src/main/java/decaf/lowlevel/log/IndentPrinter.java	/^    public void decIndent() {$/;"	m	class:IndentPrinter
decaf	src/main/java/decaf/Main.java	/^package decaf;$/;"	p
decaf	src/main/ll1pg/Decaf.spec	/^%package decaf.frontend.parsing$/;"	p
decaf-2019-TestCases	TestCases/README.md	/^# decaf-2019-TestCases$/;"	c
decaf.backend.asm	src/main/java/decaf/backend/asm/Asm.java	/^package decaf.backend.asm;$/;"	p
decaf.backend.asm	src/main/java/decaf/backend/asm/AsmEmitter.java	/^package decaf.backend.asm;$/;"	p
decaf.backend.asm	src/main/java/decaf/backend/asm/HoleInstr.java	/^package decaf.backend.asm;$/;"	p
decaf.backend.asm	src/main/java/decaf/backend/asm/SubroutineEmitter.java	/^package decaf.backend.asm;$/;"	p
decaf.backend.asm	src/main/java/decaf/backend/asm/SubroutineInfo.java	/^package decaf.backend.asm;$/;"	p
decaf.backend.asm.mips	src/main/java/decaf/backend/asm/mips/MipsAsmEmitter.java	/^package decaf.backend.asm.mips;$/;"	p
decaf.backend.asm.mips	src/main/java/decaf/backend/asm/mips/MipsSubroutineEmitter.java	/^package decaf.backend.asm.mips;$/;"	p
decaf.backend.dataflow	src/main/java/decaf/backend/dataflow/BasicBlock.java	/^package decaf.backend.dataflow;$/;"	p
decaf.backend.dataflow	src/main/java/decaf/backend/dataflow/CFG.java	/^package decaf.backend.dataflow;$/;"	p
decaf.backend.dataflow	src/main/java/decaf/backend/dataflow/CFGBuilder.java	/^package decaf.backend.dataflow;$/;"	p
decaf.backend.dataflow	src/main/java/decaf/backend/dataflow/LivenessAnalyzer.java	/^package decaf.backend.dataflow;$/;"	p
decaf.backend.dataflow	src/main/java/decaf/backend/dataflow/Loc.java	/^package decaf.backend.dataflow;$/;"	p
decaf.backend.opt	src/main/java/decaf/backend/opt/Optimizer.java	/^package decaf.backend.opt;$/;"	p
decaf.backend.reg	src/main/java/decaf/backend/reg/BruteRegAlloc.java	/^package decaf.backend.reg;$/;"	p
decaf.backend.reg	src/main/java/decaf/backend/reg/RegAlloc.java	/^package decaf.backend.reg;$/;"	p
decaf.driver	src/main/java/decaf/driver/Config.java	/^package decaf.driver;$/;"	p
decaf.driver	src/main/java/decaf/driver/ErrorIssuer.java	/^package decaf.driver;$/;"	p
decaf.driver	src/main/java/decaf/driver/Launcher.java	/^package decaf.driver;$/;"	p
decaf.driver	src/main/java/decaf/driver/OptParser.java	/^package decaf.driver;$/;"	p
decaf.driver	src/main/java/decaf/driver/Phase.java	/^package decaf.driver;$/;"	p
decaf.driver	src/main/java/decaf/driver/Task.java	/^package decaf.driver;$/;"	p
decaf.driver	src/main/java/decaf/driver/TaskFactory.java	/^package decaf.driver;$/;"	p
decaf.driver.error	src/main/java/decaf/driver/error/AssignMethodMemberError.java	/^package decaf.driver.error;$/;"	p
decaf.driver.error	src/main/java/decaf/driver/error/BadArgCountError.java	/^package decaf.driver.error;$/;"	p
decaf.driver.error	src/main/java/decaf/driver/error/BadArgTypeError.java	/^package decaf.driver.error;$/;"	p
decaf.driver.error	src/main/java/decaf/driver/error/BadArrElementError.java	/^package decaf.driver.error;$/;"	p
decaf.driver.error	src/main/java/decaf/driver/error/BadEscCharError.java	/^package decaf.driver.error;$/;"	p
decaf.driver.error	src/main/java/decaf/driver/error/BadInheritanceError.java	/^package decaf.driver.error;$/;"	p
decaf.driver.error	src/main/java/decaf/driver/error/BadLambdaArgCountError.java	/^package decaf.driver.error;$/;"	p
decaf.driver.error	src/main/java/decaf/driver/error/BadLengthArgError.java	/^package decaf.driver.error;$/;"	p
decaf.driver.error	src/main/java/decaf/driver/error/BadLengthError.java	/^package decaf.driver.error;$/;"	p
decaf.driver.error	src/main/java/decaf/driver/error/BadNewArrayLength.java	/^package decaf.driver.error;$/;"	p
decaf.driver.error	src/main/java/decaf/driver/error/BadOverrideError.java	/^package decaf.driver.error;$/;"	p
decaf.driver.error	src/main/java/decaf/driver/error/BadPrintArgError.java	/^package decaf.driver.error;$/;"	p
decaf.driver.error	src/main/java/decaf/driver/error/BadReturnTypeError.java	/^package decaf.driver.error;$/;"	p
decaf.driver.error	src/main/java/decaf/driver/error/BadTestExpr.java	/^package decaf.driver.error;$/;"	p
decaf.driver.error	src/main/java/decaf/driver/error/BadVarTypeError.java	/^package decaf.driver.error;$/;"	p
decaf.driver.error	src/main/java/decaf/driver/error/BreakOutOfLoopError.java	/^package decaf.driver.error;$/;"	p
decaf.driver.error	src/main/java/decaf/driver/error/ClassNotFoundError.java	/^package decaf.driver.error;$/;"	p
decaf.driver.error	src/main/java/decaf/driver/error/DecafError.java	/^package decaf.driver.error;$/;"	p
decaf.driver.error	src/main/java/decaf/driver/error/DeclConflictError.java	/^package decaf.driver.error;$/;"	p
decaf.driver.error	src/main/java/decaf/driver/error/FieldNotAccessError.java	/^package decaf.driver.error;$/;"	p
decaf.driver.error	src/main/java/decaf/driver/error/FieldNotFoundError.java	/^package decaf.driver.error;$/;"	p
decaf.driver.error	src/main/java/decaf/driver/error/IncompatBinOpError.java	/^package decaf.driver.error;$/;"	p
decaf.driver.error	src/main/java/decaf/driver/error/IncompatReturnTypesError.java	/^package decaf.driver.error;$/;"	p
decaf.driver.error	src/main/java/decaf/driver/error/IncompatUnOpError.java	/^package decaf.driver.error;$/;"	p
decaf.driver.error	src/main/java/decaf/driver/error/IntTooLargeError.java	/^package decaf.driver.error;$/;"	p
decaf.driver.error	src/main/java/decaf/driver/error/LambdaAssignVarOutOfScopeError.java	/^package decaf.driver.error;$/;"	p
decaf.driver.error	src/main/java/decaf/driver/error/MissingReturnError.java	/^package decaf.driver.error;$/;"	p
decaf.driver.error	src/main/java/decaf/driver/error/MsgError.java	/^package decaf.driver.error;$/;"	p
decaf.driver.error	src/main/java/decaf/driver/error/NewAbstractError.java	/^package decaf.driver.error;$/;"	p
decaf.driver.error	src/main/java/decaf/driver/error/NewlineInStrError.java	/^package decaf.driver.error;$/;"	p
decaf.driver.error	src/main/java/decaf/driver/error/NoMainClassError.java	/^package decaf.driver.error;$/;"	p
decaf.driver.error	src/main/java/decaf/driver/error/NotAbstractClassError.java	/^package decaf.driver.error;$/;"	p
decaf.driver.error	src/main/java/decaf/driver/error/NotArrayError.java	/^package decaf.driver.error;$/;"	p
decaf.driver.error	src/main/java/decaf/driver/error/NotCallableTypeError.java	/^package decaf.driver.error;$/;"	p
decaf.driver.error	src/main/java/decaf/driver/error/NotClassError.java	/^package decaf.driver.error;$/;"	p
decaf.driver.error	src/main/java/decaf/driver/error/NotClassFieldError.java	/^package decaf.driver.error;$/;"	p
decaf.driver.error	src/main/java/decaf/driver/error/NotClassMethodError.java	/^package decaf.driver.error;$/;"	p
decaf.driver.error	src/main/java/decaf/driver/error/OverridingVarError.java	/^package decaf.driver.error;$/;"	p
decaf.driver.error	src/main/java/decaf/driver/error/ParamVoidError.java	/^package decaf.driver.error;$/;"	p
decaf.driver.error	src/main/java/decaf/driver/error/RefNonStaticError.java	/^package decaf.driver.error;$/;"	p
decaf.driver.error	src/main/java/decaf/driver/error/SubNotIntError.java	/^package decaf.driver.error;$/;"	p
decaf.driver.error	src/main/java/decaf/driver/error/ThisInStaticFuncError.java	/^package decaf.driver.error;$/;"	p
decaf.driver.error	src/main/java/decaf/driver/error/UndeclVarError.java	/^package decaf.driver.error;$/;"	p
decaf.driver.error	src/main/java/decaf/driver/error/UnrecogCharError.java	/^package decaf.driver.error;$/;"	p
decaf.driver.error	src/main/java/decaf/driver/error/UntermStrError.java	/^package decaf.driver.error;$/;"	p
decaf.driver.error	src/main/java/decaf/driver/error/VarError.java	/^package decaf.driver.error;$/;"	p
decaf.frontend.parsing	build/generated-src/jacc/DecafJaccParser.java	/^package decaf.frontend.parsing;$/;"	p
decaf.frontend.parsing	build/generated-src/jacc/JaccTokens.java	/^package decaf.frontend.parsing;$/;"	p
decaf.frontend.parsing	build/generated-src/jflex/DecafLexer.java	/^package decaf.frontend.parsing;$/;"	p
decaf.frontend.parsing	build/generated-src/ll1pg/LLTable.java	/^package decaf.frontend.parsing;$/;"	p
decaf.frontend.parsing	src/main/java/decaf/frontend/parsing/AbstractLexer.java	/^package decaf.frontend.parsing;$/;"	p
decaf.frontend.parsing	src/main/java/decaf/frontend/parsing/AbstractParser.java	/^package decaf.frontend.parsing;$/;"	p
decaf.frontend.parsing	src/main/java/decaf/frontend/parsing/JaccParser.java	/^package decaf.frontend.parsing;$/;"	p
decaf.frontend.parsing	src/main/java/decaf/frontend/parsing/SemValue.java	/^package decaf.frontend.parsing;$/;"	p
decaf.frontend.parsing	src/main/java/decaf/frontend/parsing/Tokens.java	/^package decaf.frontend.parsing;$/;"	p
decaf.frontend.scope	src/main/java/decaf/frontend/scope/ClassScope.java	/^package decaf.frontend.scope;$/;"	p
decaf.frontend.scope	src/main/java/decaf/frontend/scope/FormalScope.java	/^package decaf.frontend.scope;$/;"	p
decaf.frontend.scope	src/main/java/decaf/frontend/scope/GlobalScope.java	/^package decaf.frontend.scope;$/;"	p
decaf.frontend.scope	src/main/java/decaf/frontend/scope/LambdaScope.java	/^package decaf.frontend.scope;$/;"	p
decaf.frontend.scope	src/main/java/decaf/frontend/scope/LocalScope.java	/^package decaf.frontend.scope;$/;"	p
decaf.frontend.scope	src/main/java/decaf/frontend/scope/Scope.java	/^package decaf.frontend.scope;$/;"	p
decaf.frontend.scope	src/main/java/decaf/frontend/scope/ScopeStack.java	/^package decaf.frontend.scope;$/;"	p
decaf.frontend.symbol	src/main/java/decaf/frontend/symbol/ClassSymbol.java	/^package decaf.frontend.symbol;$/;"	p
decaf.frontend.symbol	src/main/java/decaf/frontend/symbol/LambdaSymbol.java	/^package decaf.frontend.symbol;$/;"	p
decaf.frontend.symbol	src/main/java/decaf/frontend/symbol/MethodSymbol.java	/^package decaf.frontend.symbol;$/;"	p
decaf.frontend.symbol	src/main/java/decaf/frontend/symbol/Symbol.java	/^package decaf.frontend.symbol;$/;"	p
decaf.frontend.symbol	src/main/java/decaf/frontend/symbol/VarSymbol.java	/^package decaf.frontend.symbol;$/;"	p
decaf.frontend.tacgen	src/main/java/decaf/frontend/tacgen/TacEmitter.java	/^package decaf.frontend.tacgen;$/;"	p
decaf.frontend.tacgen	src/main/java/decaf/frontend/tacgen/TacGen.java	/^package decaf.frontend.tacgen;$/;"	p
decaf.frontend.tree	src/main/java/decaf/frontend/tree/Pos.java	/^package decaf.frontend.tree;$/;"	p
decaf.frontend.tree	src/main/java/decaf/frontend/tree/Tree.java	/^package decaf.frontend.tree;$/;"	p
decaf.frontend.tree	src/main/java/decaf/frontend/tree/TreeNode.java	/^package decaf.frontend.tree;$/;"	p
decaf.frontend.tree	src/main/java/decaf/frontend/tree/Visitor.java	/^package decaf.frontend.tree;$/;"	p
decaf.frontend.type	src/main/java/decaf/frontend/type/ArrayType.java	/^package decaf.frontend.type;$/;"	p
decaf.frontend.type	src/main/java/decaf/frontend/type/BuiltInType.java	/^package decaf.frontend.type;$/;"	p
decaf.frontend.type	src/main/java/decaf/frontend/type/ClassType.java	/^package decaf.frontend.type;$/;"	p
decaf.frontend.type	src/main/java/decaf/frontend/type/FunType.java	/^package decaf.frontend.type;$/;"	p
decaf.frontend.type	src/main/java/decaf/frontend/type/Type.java	/^package decaf.frontend.type;$/;"	p
decaf.frontend.typecheck	src/main/java/decaf/frontend/typecheck/Namer.java	/^package decaf.frontend.typecheck;$/;"	p
decaf.frontend.typecheck	src/main/java/decaf/frontend/typecheck/TypeLitVisited.java	/^package decaf.frontend.typecheck;$/;"	p
decaf.frontend.typecheck	src/main/java/decaf/frontend/typecheck/Typer.java	/^package decaf.frontend.typecheck;$/;"	p
decaf.lowlevel	src/main/java/decaf/lowlevel/AsmCodePrinter.java	/^package decaf.lowlevel;$/;"	p
decaf.lowlevel	src/main/java/decaf/lowlevel/Mips.java	/^package decaf.lowlevel;$/;"	p
decaf.lowlevel	src/main/java/decaf/lowlevel/StringUtils.java	/^package decaf.lowlevel;$/;"	p
decaf.lowlevel.instr	src/main/java/decaf/lowlevel/instr/NativeInstr.java	/^package decaf.lowlevel.instr;$/;"	p
decaf.lowlevel.instr	src/main/java/decaf/lowlevel/instr/PseudoInstr.java	/^package decaf.lowlevel.instr;$/;"	p
decaf.lowlevel.instr	src/main/java/decaf/lowlevel/instr/Reg.java	/^package decaf.lowlevel.instr;$/;"	p
decaf.lowlevel.instr	src/main/java/decaf/lowlevel/instr/Temp.java	/^package decaf.lowlevel.instr;$/;"	p
decaf.lowlevel.label	src/main/java/decaf/lowlevel/label/FuncLabel.java	/^package decaf.lowlevel.label;$/;"	p
decaf.lowlevel.label	src/main/java/decaf/lowlevel/label/IntrinsicLabel.java	/^package decaf.lowlevel.label;$/;"	p
decaf.lowlevel.label	src/main/java/decaf/lowlevel/label/Label.java	/^package decaf.lowlevel.label;$/;"	p
decaf.lowlevel.label	src/main/java/decaf/lowlevel/label/VTableLabel.java	/^package decaf.lowlevel.label;$/;"	p
decaf.lowlevel.log	src/main/java/decaf/lowlevel/log/ColorConsoleHandler.java	/^package decaf.lowlevel.log;$/;"	p
decaf.lowlevel.log	src/main/java/decaf/lowlevel/log/IndentPrinter.java	/^package decaf.lowlevel.log;$/;"	p
decaf.lowlevel.log	src/main/java/decaf/lowlevel/log/Log.java	/^package decaf.lowlevel.log;$/;"	p
decaf.lowlevel.tac	src/main/java/decaf/lowlevel/tac/ClassInfo.java	/^package decaf.lowlevel.tac;$/;"	p
decaf.lowlevel.tac	src/main/java/decaf/lowlevel/tac/FuncVisitor.java	/^package decaf.lowlevel.tac;$/;"	p
decaf.lowlevel.tac	src/main/java/decaf/lowlevel/tac/Intrinsic.java	/^package decaf.lowlevel.tac;$/;"	p
decaf.lowlevel.tac	src/main/java/decaf/lowlevel/tac/Opcodes.java	/^package decaf.lowlevel.tac;$/;"	p
decaf.lowlevel.tac	src/main/java/decaf/lowlevel/tac/ProgramWriter.java	/^package decaf.lowlevel.tac;$/;"	p
decaf.lowlevel.tac	src/main/java/decaf/lowlevel/tac/RuntimeError.java	/^package decaf.lowlevel.tac;$/;"	p
decaf.lowlevel.tac	src/main/java/decaf/lowlevel/tac/Simulator.java	/^package decaf.lowlevel.tac;$/;"	p
decaf.lowlevel.tac	src/main/java/decaf/lowlevel/tac/StringPool.java	/^package decaf.lowlevel.tac;$/;"	p
decaf.lowlevel.tac	src/main/java/decaf/lowlevel/tac/TacFunc.java	/^package decaf.lowlevel.tac;$/;"	p
decaf.lowlevel.tac	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^package decaf.lowlevel.tac;$/;"	p
decaf.lowlevel.tac	src/main/java/decaf/lowlevel/tac/TacProg.java	/^package decaf.lowlevel.tac;$/;"	p
decaf.lowlevel.tac	src/main/java/decaf/lowlevel/tac/VTable.java	/^package decaf.lowlevel.tac;$/;"	p
decaf.printing	src/main/java/decaf/printing/PrettyCFG.java	/^package decaf.printing;$/;"	p
decaf.printing	src/main/java/decaf/printing/PrettyPrinter.java	/^package decaf.printing;$/;"	p
decaf.printing	src/main/java/decaf/printing/PrettyScope.java	/^package decaf.printing;$/;"	p
decaf.printing	src/main/java/decaf/printing/PrettyTree.java	/^package decaf.printing;$/;"	p
declare	src/main/java/decaf/frontend/scope/Scope.java	/^    public void declare(Symbol symbol) {$/;"	m	class:Scope
declare	src/main/java/decaf/frontend/scope/ScopeStack.java	/^    public void declare(Symbol symbol) {$/;"	m	class:ScopeStack
def	src/main/java/decaf/backend/dataflow/BasicBlock.java	/^    public Set<Temp> def;$/;"	f	class:BasicBlock
definedIn	src/main/java/decaf/frontend/symbol/Symbol.java	/^    Scope definedIn;$/;"	f	class:Symbol
die	gradlew	/^die () {$/;"	f
diff	TestCases/testAll.py	/^diff = difflib.Differ()$/;"	v
displayName	src/main/java/decaf/frontend/tree/TreeNode.java	/^    public final String displayName;$/;"	f	class:TreeNode
distributionBase	gradle/wrapper/gradle-wrapper.properties	/^distributionBase=GRADLE_USER_HOME$/;"	k
distributionPath	gradle/wrapper/gradle-wrapper.properties	/^distributionPath=wrapper\/dists$/;"	k
distributionUrl	gradle/wrapper/gradle-wrapper.properties	/^distributionUrl=https\\:\/\/services.gradle.org\/distributions\/gradle-5.2.1-all.zip$/;"	k
domain	src/main/java/decaf/frontend/symbol/ClassSymbol.java	/^    public GlobalScope domain() {$/;"	m	class:ClassSymbol
domain	src/main/java/decaf/frontend/symbol/LambdaSymbol.java	/^    public ClassScope domain() {$/;"	m	class:LambdaSymbol
domain	src/main/java/decaf/frontend/symbol/MethodSymbol.java	/^    public ClassScope domain() {$/;"	m	class:MethodSymbol
domain	src/main/java/decaf/frontend/symbol/Symbol.java	/^    public Scope domain() {$/;"	m	class:Symbol
dst	src/main/java/decaf/driver/OptParser.java	/^    final Option dst = Option$/;"	f	class:OptParser
dst	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public final Optional<Temp> dst;$/;"	f	class:TacInstr.DirectCall
dst	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public final Optional<Temp> dst;$/;"	f	class:TacInstr.IndirectCall
dst	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public final Temp dst;$/;"	f	class:TacInstr.Assign
dst	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public final Temp dst;$/;"	f	class:TacInstr.Binary
dst	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public final Temp dst;$/;"	f	class:TacInstr.LoadImm4
dst	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public final Temp dst;$/;"	f	class:TacInstr.LoadStrConst
dst	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public final Temp dst;$/;"	f	class:TacInstr.LoadVTbl
dst	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public final Temp dst;$/;"	f	class:TacInstr.Memory
dst	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public final Temp dst;$/;"	f	class:TacInstr.Unary
dstPath	src/main/java/decaf/driver/Config.java	/^    public final Path dstPath;$/;"	f	class:Config
dsts	src/main/java/decaf/lowlevel/instr/PseudoInstr.java	/^    public Temp[] dsts;$/;"	f	class:PseudoInstr
earlier	src/main/java/decaf/driver/error/DeclConflictError.java	/^    private Pos earlier;$/;"	f	class:DeclConflictError	file:
edges	src/main/java/decaf/backend/dataflow/CFG.java	/^    public final List<Pair<Integer, Integer>> edges;$/;"	f	class:CFG
elemType	src/main/java/decaf/frontend/tree/Tree.java	/^        public TypeLit elemType;$/;"	f	class:Tree.NewArray
elemType	src/main/java/decaf/frontend/tree/Tree.java	/^        public TypeLit elemType;$/;"	f	class:Tree.TArray
elementType	src/main/java/decaf/frontend/type/ArrayType.java	/^    public final Type elementType;$/;"	f	class:ArrayType
emitArrayElementAddress	src/main/java/decaf/frontend/tacgen/TacEmitter.java	/^    private Temp emitArrayElementAddress(Temp array, Temp index, FuncVisitor mv) {$/;"	m	interface:TacEmitter	file:
emitArrayInit	src/main/java/decaf/frontend/tacgen/TacEmitter.java	/^    private Temp emitArrayInit(Temp length, FuncVisitor mv) {$/;"	m	interface:TacEmitter	file:
emitClassTest	src/main/java/decaf/frontend/tacgen/TacEmitter.java	/^    private Temp emitClassTest(Temp object, String clazz, FuncVisitor mv) {$/;"	m	interface:TacEmitter	file:
emitDivideOrModZero	src/main/java/decaf/frontend/tacgen/TacEmitter.java	/^    private Temp emitDivideOrModZero(TacInstr.Binary.Op op, Tree.Binary expr, FuncVisitor mv){$/;"	m	interface:TacEmitter	file:
emitEnd	src/main/java/decaf/backend/asm/AsmEmitter.java	/^    public abstract String emitEnd();$/;"	m	class:AsmEmitter
emitEnd	src/main/java/decaf/backend/asm/SubroutineEmitter.java	/^    public abstract void emitEnd();$/;"	m	class:SubroutineEmitter
emitEnd	src/main/java/decaf/backend/asm/mips/MipsAsmEmitter.java	/^    public String emitEnd() {$/;"	m	class:MipsAsmEmitter
emitEnd	src/main/java/decaf/backend/asm/mips/MipsSubroutineEmitter.java	/^    public void emitEnd() {$/;"	m	class:MipsSubroutineEmitter
emitIfThen	src/main/java/decaf/frontend/tacgen/TacEmitter.java	/^    private void emitIfThen(Temp cond, Consumer<FuncVisitor> action, FuncVisitor mv) {$/;"	m	interface:TacEmitter	file:
emitIfThenElse	src/main/java/decaf/frontend/tacgen/TacEmitter.java	/^    private void emitIfThenElse(Temp cond, Consumer<FuncVisitor> trueBranch, Consumer<FuncVisito/;"	m	interface:TacEmitter	file:
emitLabel	src/main/java/decaf/backend/asm/SubroutineEmitter.java	/^    public abstract void emitLabel(Label label);$/;"	m	class:SubroutineEmitter
emitLabel	src/main/java/decaf/backend/asm/mips/MipsSubroutineEmitter.java	/^    public void emitLabel(Label label) {$/;"	m	class:MipsSubroutineEmitter
emitLoadFromStack	src/main/java/decaf/backend/asm/SubroutineEmitter.java	/^    public abstract void emitLoadFromStack(Reg dst, Temp src);$/;"	m	class:SubroutineEmitter
emitLoadFromStack	src/main/java/decaf/backend/asm/mips/MipsSubroutineEmitter.java	/^    public void emitLoadFromStack(Reg dst, Temp src) {$/;"	m	class:MipsSubroutineEmitter
emitMove	src/main/java/decaf/backend/asm/SubroutineEmitter.java	/^    public abstract void emitMove(Reg dst, Reg src);$/;"	m	class:SubroutineEmitter
emitMove	src/main/java/decaf/backend/asm/mips/MipsSubroutineEmitter.java	/^    public void emitMove(Reg dst, Reg src) {$/;"	m	class:MipsSubroutineEmitter
emitNative	src/main/java/decaf/backend/asm/SubroutineEmitter.java	/^    public abstract void emitNative(NativeInstr instr);$/;"	m	class:SubroutineEmitter
emitNative	src/main/java/decaf/backend/asm/mips/MipsSubroutineEmitter.java	/^    public void emitNative(NativeInstr instr) {$/;"	m	class:MipsSubroutineEmitter
emitStoreToStack	src/main/java/decaf/backend/asm/SubroutineEmitter.java	/^    public abstract void emitStoreToStack(Reg src);$/;"	m	class:SubroutineEmitter
emitStoreToStack	src/main/java/decaf/backend/asm/mips/MipsSubroutineEmitter.java	/^    public void emitStoreToStack(Reg src) {$/;"	m	class:MipsSubroutineEmitter
emitSubroutine	src/main/java/decaf/backend/asm/AsmEmitter.java	/^    public abstract SubroutineEmitter emitSubroutine(SubroutineInfo info);$/;"	m	class:AsmEmitter
emitSubroutine	src/main/java/decaf/backend/asm/mips/MipsAsmEmitter.java	/^    public SubroutineEmitter emitSubroutine(SubroutineInfo info) {$/;"	m	class:MipsAsmEmitter
emitSubroutineBegin	src/main/java/decaf/backend/asm/AsmEmitter.java	/^    public abstract void emitSubroutineBegin();$/;"	m	class:AsmEmitter
emitSubroutineBegin	src/main/java/decaf/backend/asm/mips/MipsAsmEmitter.java	/^    public void emitSubroutineBegin() {$/;"	m	class:MipsAsmEmitter
emitVTable	src/main/java/decaf/backend/asm/AsmEmitter.java	/^    public abstract void emitVTable(VTable vtbl);$/;"	m	class:AsmEmitter
emitVTable	src/main/java/decaf/backend/asm/mips/MipsAsmEmitter.java	/^    public void emitVTable(VTable vtbl) {$/;"	m	class:MipsAsmEmitter
emitWhile	src/main/java/decaf/frontend/tacgen/TacEmitter.java	/^    private void emitWhile(Function<FuncVisitor, Temp> test, Consumer<FuncVisitor> block,$/;"	m	interface:TacEmitter	file:
emitter	src/main/java/decaf/backend/asm/Asm.java	/^    protected final AsmEmitter emitter;$/;"	f	class:Asm
emitter	src/main/java/decaf/backend/reg/RegAlloc.java	/^    protected AsmEmitter emitter;$/;"	f	class:RegAlloc
end	gradlew.bat	/^:end$/;"	l
entry	src/main/java/decaf/backend/asm/mips/MipsAsmEmitter.java	/^        Label entry;$/;"	f	class:MipsAsmEmitter.MipsInstrSelector
entry	src/main/java/decaf/lowlevel/tac/Intrinsic.java	/^    public final IntrinsicLabel entry;$/;"	f	class:Intrinsic
entry	src/main/java/decaf/lowlevel/tac/Simulator.java	/^        final Label entry;$/;"	f	class:Simulator.Frame
entry	src/main/java/decaf/lowlevel/tac/TacFunc.java	/^    public final FuncLabel entry;$/;"	f	class:TacFunc
entry	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public final Label entry;$/;"	f	class:TacInstr.DirectCall
entry	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public final Temp entry;$/;"	f	class:TacInstr.IndirectCall
eof	build/generated-src/ll1pg/LLTable.java	/^    public static final int eof = -1;$/;"	f	class:LLTable
eos	build/generated-src/ll1pg/LLTable.java	/^    public static final int eos = 0;$/;"	f	class:LLTable
eq	TestCases/testAll.py	/^def eq(expected: str, actual: str) -> bool:$/;"	f
eq	src/main/java/decaf/frontend/type/ArrayType.java	/^    public boolean eq(Type that) {$/;"	m	class:ArrayType
eq	src/main/java/decaf/frontend/type/BuiltInType.java	/^    public boolean eq(Type that) {$/;"	m	class:BuiltInType
eq	src/main/java/decaf/frontend/type/ClassType.java	/^    public boolean eq(Type that) {$/;"	m	class:ClassType
eq	src/main/java/decaf/frontend/type/FunType.java	/^    public boolean eq(Type type) {$/;"	m	class:FunType
eq	src/main/java/decaf/frontend/type/Type.java	/^    public abstract boolean eq(Type that);$/;"	m	class:Type
error	build/generated-src/jacc/JaccTokens.java	/^    int error = 48;$/;"	f	interface:JaccTokens
errors	src/main/java/decaf/driver/ErrorIssuer.java	/^    ArrayList<DecafError> errors = new ArrayList<>();$/;"	f	interface:ErrorIssuer
execute	gradlew.bat	/^:execute$/;"	l
execute	src/main/java/decaf/lowlevel/tac/Simulator.java	/^    public void execute(TacProg program) {$/;"	m	class:Simulator
expect	src/main/java/decaf/driver/error/BadArgCountError.java	/^    private int expect;$/;"	f	class:BadArgCountError	file:
expect	src/main/java/decaf/driver/error/BadArgTypeError.java	/^    private String expect;$/;"	f	class:BadArgTypeError	file:
expect	src/main/java/decaf/driver/error/BadLambdaArgCountError.java	/^    private int expect;$/;"	f	class:BadLambdaArgCountError	file:
expect	src/main/java/decaf/driver/error/BadReturnTypeError.java	/^    private String expect;$/;"	f	class:BadReturnTypeError	file:
expr	src/main/java/decaf/driver/error/IncompatUnOpError.java	/^    private String expr;$/;"	f	class:IncompatUnOpError	file:
expr	src/main/java/decaf/frontend/parsing/SemValue.java	/^    Tree.Expr expr;$/;"	f	class:SemValue
expr	src/main/java/decaf/frontend/tree/Tree.java	/^        public Expr expr;$/;"	f	class:Tree.Call
expr	src/main/java/decaf/frontend/tree/Tree.java	/^        public Expr expr;$/;"	f	class:Tree.ExprEval
expr	src/main/java/decaf/frontend/tree/Tree.java	/^        public Expr expr;$/;"	f	class:Tree.Lambda
expr	src/main/java/decaf/frontend/tree/Tree.java	/^        public Optional<Expr> expr;$/;"	f	class:Tree.Return
exprList	src/main/java/decaf/frontend/parsing/SemValue.java	/^    List<Tree.Expr> exprList;$/;"	f	class:SemValue
exprs	src/main/java/decaf/frontend/tree/Tree.java	/^        public List<Expr> exprs;$/;"	f	class:Tree.Print
fail	gradlew.bat	/^:fail$/;"	l
failed	TestCases/testAll.py	/^    failed = results.count(False)$/;"	v
falseBranch	src/main/java/decaf/frontend/tree/Tree.java	/^        public Optional<Block> falseBranch;$/;"	f	class:Tree.If
field	src/main/java/decaf/frontend/parsing/SemValue.java	/^    Tree.Field field;$/;"	f	class:SemValue
fieldList	src/main/java/decaf/frontend/parsing/SemValue.java	/^    List<Tree.Field> fieldList;$/;"	f	class:SemValue
fields	src/main/java/decaf/frontend/tree/Tree.java	/^        public final List<Field> fields;$/;"	f	class:Tree.ClassDef
find	src/main/java/decaf/frontend/scope/Scope.java	/^    public Optional<Symbol> find(String key) {$/;"	m	class:Scope
find	src/main/java/decaf/lowlevel/tac/StringPool.java	/^    public int find(String value) {$/;"	m	class:StringPool
findConflict	src/main/java/decaf/frontend/scope/ScopeStack.java	/^    public Optional<Symbol> findConflict(String key) {$/;"	m	class:ScopeStack
findJavaFromJavaHome	gradlew.bat	/^:findJavaFromJavaHome$/;"	l
findWhile	src/main/java/decaf/frontend/scope/ScopeStack.java	/^    private Optional<Symbol> findWhile(String key, Predicate<Scope> cond, Predicate<Symbol> vali/;"	m	class:ScopeStack	file:
fine	src/main/java/decaf/lowlevel/log/Log.java	/^    public static void fine(String fmt, Object... args) {$/;"	m	class:Log
finer	src/main/java/decaf/lowlevel/log/Log.java	/^    public static void finer(String fmt, Object... args) {$/;"	m	class:Log
finest	src/main/java/decaf/lowlevel/log/Log.java	/^    public static void finest(String fmt, Object... args) {$/;"	m	class:Log
flags	src/main/java/decaf/frontend/tree/Tree.java	/^        private List<String> flags;$/;"	f	class:Tree.Modifiers	file:
flatten	TestCases/testAll.py	/^def flatten(l):$/;"	f
flush	src/main/java/decaf/lowlevel/log/IndentPrinter.java	/^    public void flush() {$/;"	m	class:IndentPrinter
flush	src/main/java/decaf/printing/PrettyPrinter.java	/^    public void flush() {$/;"	m	class:PrettyPrinter
follow	build/generated-src/ll1pg/LLTable.java	/^    private ArrayList<Set<Integer>> follow = new ArrayList<Set<Integer>>();$/;"	f	class:LLTable	file:
followRaw	build/generated-src/ll1pg/LLTable.java	/^    private final Integer[][] followRaw = {$/;"	f	class:LLTable	file:
followSet	build/generated-src/ll1pg/LLTable.java	/^    public Set<Integer> followSet(int symbol) {$/;"	m	class:LLTable
format	src/main/java/decaf/lowlevel/Mips.java	/^    private static String format(String op, String fmt, Object... args) {$/;"	m	class:Mips	file:
format	src/main/java/decaf/lowlevel/log/IndentPrinter.java	/^    private String format(Collection<?> c) {$/;"	m	class:IndentPrinter	file:
format	src/main/java/decaf/lowlevel/log/IndentPrinter.java	/^    public void format(String fmt, Object... args) {$/;"	m	class:IndentPrinter
format	src/main/java/decaf/lowlevel/log/Log.java	/^    public static void format(Level level, String fmt, Object... args) {$/;"	m	class:Log
formatLn	src/main/java/decaf/lowlevel/log/IndentPrinter.java	/^    public void formatLn(String fmt, Object... args) {$/;"	m	class:IndentPrinter
freshLabel	src/main/java/decaf/lowlevel/tac/FuncVisitor.java	/^    public Label freshLabel() {$/;"	m	class:FuncVisitor
freshLabel	src/main/java/decaf/lowlevel/tac/ProgramWriter.java	/^        Label freshLabel() {$/;"	m	class:ProgramWriter.Context
freshTemp	src/main/java/decaf/lowlevel/tac/FuncVisitor.java	/^    public Temp freshTemp() {$/;"	m	class:FuncVisitor
from	src/main/java/decaf/driver/error/RefNonStaticError.java	/^    private String from;$/;"	f	class:RefNonStaticError	file:
fromCLI	src/main/java/decaf/driver/Config.java	/^    public static Config fromCLI(CommandLine cli) throws ParseException, FileNotFoundException {$/;"	m	class:Config
func	src/main/java/decaf/lowlevel/tac/FuncVisitor.java	/^    private TacFunc func;$/;"	f	class:FuncVisitor	file:
funcLabel	src/main/java/decaf/backend/asm/SubroutineInfo.java	/^    public final FuncLabel funcLabel;$/;"	f	class:SubroutineInfo
funcName	src/main/java/decaf/driver/error/BadOverrideError.java	/^    private String funcName;$/;"	f	class:BadOverrideError	file:
funcs	src/main/java/decaf/lowlevel/tac/ProgramWriter.java	/^        List<TacFunc> funcs = new ArrayList<>();$/;"	f	class:ProgramWriter.Context
funcs	src/main/java/decaf/lowlevel/tac/TacProg.java	/^    public final List<TacFunc> funcs;$/;"	f	class:TacProg
get	src/main/java/decaf/frontend/scope/Scope.java	/^    public Symbol get(String key) {$/;"	m	class:Scope
get	src/main/java/decaf/lowlevel/tac/StringPool.java	/^    public String get(int index) {$/;"	m	class:StringPool
getArgTemp	src/main/java/decaf/lowlevel/tac/FuncVisitor.java	/^    public Temp getArgTemp(int index) {$/;"	m	class:FuncVisitor
getBlock	src/main/java/decaf/backend/dataflow/CFG.java	/^    public BasicBlock<I> getBlock(int id) {$/;"	m	class:CFG
getClass	src/main/java/decaf/frontend/scope/GlobalScope.java	/^    public ClassSymbol getClass(String symbol) {$/;"	m	class:GlobalScope
getClass	src/main/java/decaf/frontend/scope/ScopeStack.java	/^    public ClassSymbol getClass(String key) {$/;"	m	class:ScopeStack
getColor	src/main/java/decaf/lowlevel/log/ColorConsoleHandler.java	/^    private String getColor(Level level) {$/;"	m	class:ColorConsoleHandler	file:
getConstructorLabel	src/main/java/decaf/lowlevel/tac/ProgramWriter.java	/^        FuncLabel getConstructorLabel(String clazz) {$/;"	m	class:ProgramWriter.Context
getErrMsg	src/main/java/decaf/driver/error/AssignMethodMemberError.java	/^    protected String getErrMsg() {$/;"	m	class:AssignMethodMemberError
getErrMsg	src/main/java/decaf/driver/error/BadArgCountError.java	/^    protected String getErrMsg() {$/;"	m	class:BadArgCountError
getErrMsg	src/main/java/decaf/driver/error/BadArgTypeError.java	/^    protected String getErrMsg() {$/;"	m	class:BadArgTypeError
getErrMsg	src/main/java/decaf/driver/error/BadArrElementError.java	/^    protected String getErrMsg() {$/;"	m	class:BadArrElementError
getErrMsg	src/main/java/decaf/driver/error/BadEscCharError.java	/^    protected String getErrMsg() {$/;"	m	class:BadEscCharError
getErrMsg	src/main/java/decaf/driver/error/BadInheritanceError.java	/^    protected String getErrMsg() {$/;"	m	class:BadInheritanceError
getErrMsg	src/main/java/decaf/driver/error/BadLambdaArgCountError.java	/^    protected String getErrMsg() {$/;"	m	class:BadLambdaArgCountError
getErrMsg	src/main/java/decaf/driver/error/BadLengthArgError.java	/^    protected String getErrMsg() {$/;"	m	class:BadLengthArgError
getErrMsg	src/main/java/decaf/driver/error/BadLengthError.java	/^    protected String getErrMsg() {$/;"	m	class:BadLengthError
getErrMsg	src/main/java/decaf/driver/error/BadNewArrayLength.java	/^    protected String getErrMsg() {$/;"	m	class:BadNewArrayLength
getErrMsg	src/main/java/decaf/driver/error/BadOverrideError.java	/^    protected String getErrMsg() {$/;"	m	class:BadOverrideError
getErrMsg	src/main/java/decaf/driver/error/BadPrintArgError.java	/^    protected String getErrMsg() {$/;"	m	class:BadPrintArgError
getErrMsg	src/main/java/decaf/driver/error/BadReturnTypeError.java	/^    protected String getErrMsg() {$/;"	m	class:BadReturnTypeError
getErrMsg	src/main/java/decaf/driver/error/BadTestExpr.java	/^    protected String getErrMsg() {$/;"	m	class:BadTestExpr
getErrMsg	src/main/java/decaf/driver/error/BadVarTypeError.java	/^    protected String getErrMsg() {$/;"	m	class:BadVarTypeError
getErrMsg	src/main/java/decaf/driver/error/BreakOutOfLoopError.java	/^    protected String getErrMsg() {$/;"	m	class:BreakOutOfLoopError
getErrMsg	src/main/java/decaf/driver/error/ClassNotFoundError.java	/^    protected String getErrMsg() {$/;"	m	class:ClassNotFoundError
getErrMsg	src/main/java/decaf/driver/error/DecafError.java	/^    protected abstract String getErrMsg();$/;"	m	class:DecafError
getErrMsg	src/main/java/decaf/driver/error/DeclConflictError.java	/^    protected String getErrMsg() {$/;"	m	class:DeclConflictError
getErrMsg	src/main/java/decaf/driver/error/FieldNotAccessError.java	/^    protected String getErrMsg() {$/;"	m	class:FieldNotAccessError
getErrMsg	src/main/java/decaf/driver/error/FieldNotFoundError.java	/^    protected String getErrMsg() {$/;"	m	class:FieldNotFoundError
getErrMsg	src/main/java/decaf/driver/error/IncompatBinOpError.java	/^    protected String getErrMsg() {$/;"	m	class:IncompatBinOpError
getErrMsg	src/main/java/decaf/driver/error/IncompatReturnTypesError.java	/^    public String getErrMsg() {$/;"	m	class:IncompatReturnTypesError
getErrMsg	src/main/java/decaf/driver/error/IncompatUnOpError.java	/^    protected String getErrMsg() {$/;"	m	class:IncompatUnOpError
getErrMsg	src/main/java/decaf/driver/error/IntTooLargeError.java	/^    protected String getErrMsg() {$/;"	m	class:IntTooLargeError
getErrMsg	src/main/java/decaf/driver/error/LambdaAssignVarOutOfScopeError.java	/^    protected String getErrMsg() {$/;"	m	class:LambdaAssignVarOutOfScopeError
getErrMsg	src/main/java/decaf/driver/error/MissingReturnError.java	/^    protected String getErrMsg() {$/;"	m	class:MissingReturnError
getErrMsg	src/main/java/decaf/driver/error/MsgError.java	/^    protected String getErrMsg() {$/;"	m	class:MsgError
getErrMsg	src/main/java/decaf/driver/error/NewAbstractError.java	/^    protected String getErrMsg() {$/;"	m	class:NewAbstractError
getErrMsg	src/main/java/decaf/driver/error/NewlineInStrError.java	/^    protected String getErrMsg() {$/;"	m	class:NewlineInStrError
getErrMsg	src/main/java/decaf/driver/error/NoMainClassError.java	/^    protected String getErrMsg() {$/;"	m	class:NoMainClassError
getErrMsg	src/main/java/decaf/driver/error/NotAbstractClassError.java	/^    protected String getErrMsg() {$/;"	m	class:NotAbstractClassError
getErrMsg	src/main/java/decaf/driver/error/NotArrayError.java	/^    protected String getErrMsg() {$/;"	m	class:NotArrayError
getErrMsg	src/main/java/decaf/driver/error/NotCallableTypeError.java	/^    protected String getErrMsg() {$/;"	m	class:NotCallableTypeError
getErrMsg	src/main/java/decaf/driver/error/NotClassError.java	/^    protected String getErrMsg() {$/;"	m	class:NotClassError
getErrMsg	src/main/java/decaf/driver/error/NotClassFieldError.java	/^    protected String getErrMsg() {$/;"	m	class:NotClassFieldError
getErrMsg	src/main/java/decaf/driver/error/NotClassMethodError.java	/^    protected String getErrMsg() {$/;"	m	class:NotClassMethodError
getErrMsg	src/main/java/decaf/driver/error/OverridingVarError.java	/^    protected String getErrMsg() {$/;"	m	class:OverridingVarError
getErrMsg	src/main/java/decaf/driver/error/ParamVoidError.java	/^    protected String getErrMsg() {$/;"	m	class:ParamVoidError
getErrMsg	src/main/java/decaf/driver/error/RefNonStaticError.java	/^    protected String getErrMsg() {$/;"	m	class:RefNonStaticError
getErrMsg	src/main/java/decaf/driver/error/SubNotIntError.java	/^    protected String getErrMsg() {$/;"	m	class:SubNotIntError
getErrMsg	src/main/java/decaf/driver/error/ThisInStaticFuncError.java	/^    protected String getErrMsg() {$/;"	m	class:ThisInStaticFuncError
getErrMsg	src/main/java/decaf/driver/error/UndeclVarError.java	/^    protected String getErrMsg() {$/;"	m	class:UndeclVarError
getErrMsg	src/main/java/decaf/driver/error/UnrecogCharError.java	/^    protected String getErrMsg() {$/;"	m	class:UnrecogCharError
getErrMsg	src/main/java/decaf/driver/error/UntermStrError.java	/^    protected String getErrMsg() {$/;"	m	class:UntermStrError
getErrMsg	src/main/java/decaf/driver/error/VarError.java	/^    protected String getErrMsg() {$/;"	m	class:VarError
getFuncLabel	src/main/java/decaf/lowlevel/tac/ProgramWriter.java	/^        FuncLabel getFuncLabel(String clazz, String method) {$/;"	m	class:ProgramWriter.Context
getInDegree	src/main/java/decaf/backend/dataflow/CFG.java	/^    public int getInDegree(int id) {$/;"	m	class:CFG
getInfo	src/main/java/decaf/frontend/symbol/ClassSymbol.java	/^    public ClassInfo getInfo() {$/;"	m	class:ClassSymbol
getInstrSeq	src/main/java/decaf/lowlevel/tac/TacFunc.java	/^    public List<TacInstr> getInstrSeq() {$/;"	m	class:TacFunc
getItems	src/main/java/decaf/lowlevel/tac/VTable.java	/^    public List<FuncLabel> getItems() {$/;"	m	class:VTable
getLastInstr	src/main/java/decaf/backend/dataflow/BasicBlock.java	/^    public I getLastInstr() {$/;"	m	class:BasicBlock
getLogger	src/main/java/decaf/lowlevel/log/Log.java	/^    public Logger getLogger() {$/;"	m	class:Log
getObjectSize	src/main/java/decaf/lowlevel/tac/VTable.java	/^    int getObjectSize() {$/;"	m	class:VTable
getOffset	src/main/java/decaf/lowlevel/tac/ProgramWriter.java	/^        int getOffset(String clazz, String member) {$/;"	m	class:ProgramWriter.Context
getOutDegree	src/main/java/decaf/backend/dataflow/CFG.java	/^    public int getOutDegree(int id) {$/;"	m	class:CFG
getOwner	src/main/java/decaf/frontend/scope/ClassScope.java	/^    public ClassSymbol getOwner() {$/;"	m	class:ClassScope
getOwner	src/main/java/decaf/frontend/scope/FormalScope.java	/^    public MethodSymbol getOwner() {$/;"	m	class:FormalScope
getOwner	src/main/java/decaf/frontend/scope/LambdaScope.java	/^    public LambdaSymbol getOwner(){$/;"	m	class:LambdaScope
getOwner	src/main/java/decaf/frontend/symbol/VarSymbol.java	/^    public ClassSymbol getOwner() {$/;"	m	class:VarSymbol
getPos	build/generated-src/jflex/DecafLexer.java	/^    public Pos getPos() {$/;"	m	class:DecafLexer
getPos	src/main/java/decaf/driver/error/DecafError.java	/^    public Pos getPos() {$/;"	m	class:DecafError
getPos	src/main/java/decaf/frontend/parsing/AbstractLexer.java	/^    abstract Pos getPos();$/;"	m	class:AbstractLexer
getPrev	src/main/java/decaf/backend/dataflow/CFG.java	/^    public Set<Integer> getPrev(int id) {$/;"	m	class:CFG
getRead	src/main/java/decaf/lowlevel/instr/PseudoInstr.java	/^    public List<Temp> getRead() {$/;"	m	class:PseudoInstr
getSize	src/main/java/decaf/lowlevel/tac/VTable.java	/^    public int getSize() {$/;"	m	class:VTable
getSourceBaseName	src/main/java/decaf/driver/Config.java	/^    public String getSourceBaseName() {$/;"	m	class:Config
getSucc	src/main/java/decaf/backend/dataflow/CFG.java	/^    public Set<Integer> getSucc(int id) {$/;"	m	class:CFG
getUsedTemp	src/main/java/decaf/lowlevel/tac/FuncVisitor.java	/^    public int getUsedTemp() {$/;"	m	class:FuncVisitor
getUsedTempCount	src/main/java/decaf/lowlevel/tac/TacFunc.java	/^    public int getUsedTempCount() {$/;"	m	class:TacFunc
getVTable	src/main/java/decaf/lowlevel/tac/ProgramWriter.java	/^        VTable getVTable(String clazz) {$/;"	m	class:ProgramWriter.Context
getVTables	src/main/java/decaf/lowlevel/tac/ProgramWriter.java	/^        List<VTable> getVTables() {$/;"	m	class:ProgramWriter.Context
getWritten	src/main/java/decaf/lowlevel/instr/PseudoInstr.java	/^    public List<Temp> getWritten() {$/;"	m	class:PseudoInstr
get_intermediate_output	TestCases/testAll.py	/^    def get_intermediate_output(self, test_case_name: str, ext: str) -> str:$/;"	m	class:Tester
get_output	TestCases/testAll.py	/^    def get_output(self, test_case_name: str) -> str:$/;"	m	class:Tester
get_output_dir	TestCases/testAll.py	/^    def get_output_dir(self, test_case_name: str) -> str:$/;"	m	class:Tester
get_result	TestCases/testAll.py	/^    def get_result(self, test_case_name: str) -> str:$/;"	m	class:Tester
get_test_case	TestCases/testAll.py	/^    def get_test_case(self, test_case_name: str) -> str:$/;"	m	class:Tester
given	src/main/java/decaf/driver/error/BadArgTypeError.java	/^    private String given;$/;"	f	class:BadArgTypeError	file:
given	src/main/java/decaf/driver/error/BadReturnTypeError.java	/^    private String given;$/;"	f	class:BadReturnTypeError	file:
global	src/main/java/decaf/frontend/scope/ScopeStack.java	/^    public final GlobalScope global;$/;"	f	class:ScopeStack
globalScope	src/main/java/decaf/frontend/tree/Tree.java	/^        public GlobalScope globalScope;$/;"	f	class:Tree.TopLevel
gradle.version	.gradle/buildOutputCleanup/cache.properties	/^gradle.version=5.2.1$/;"	k
hasCall	src/main/java/decaf/backend/asm/mips/MipsAsmEmitter.java	/^        boolean hasCall = false;$/;"	f	class:MipsAsmEmitter.MipsInstrSelector
hasCalls	src/main/java/decaf/backend/asm/SubroutineInfo.java	/^    public final boolean hasCalls;$/;"	f	class:SubroutineInfo
hasError	src/main/java/decaf/driver/ErrorIssuer.java	/^    default boolean hasError() {$/;"	m	interface:ErrorIssuer
hasError	src/main/java/decaf/frontend/type/Type.java	/^    public boolean hasError() {$/;"	m	class:Type
hasParent	src/main/java/decaf/frontend/tree/Tree.java	/^        public boolean hasParent() {$/;"	m	class:Tree.ClassDef
hasVTable	src/main/java/decaf/lowlevel/tac/ProgramWriter.java	/^        boolean hasVTable(String clazz) {$/;"	m	class:ProgramWriter.Context
have	src/main/java/decaf/frontend/scope/FormalScope.java	/^    public boolean have(String key){$/;"	m	class:FormalScope
have	src/main/java/decaf/frontend/scope/LambdaScope.java	/^    public boolean have(String key){$/;"	m	class:LambdaScope
have	src/main/java/decaf/frontend/scope/LocalScope.java	/^    public boolean have(String key){$/;"	m	class:LocalScope
heap	src/main/java/decaf/lowlevel/tac/Simulator.java	/^        private List<Block> heap = new ArrayList<>();$/;"	f	class:Simulator.Memory	file:
help	src/main/java/decaf/driver/OptParser.java	/^    final Option help = Option$/;"	f	class:OptParser
id	src/main/java/decaf/backend/dataflow/BasicBlock.java	/^    public final int id;$/;"	f	class:BasicBlock
id	src/main/java/decaf/driver/error/VarError.java	/^    private String id;$/;"	f	class:VarError	file:
id	src/main/java/decaf/frontend/parsing/SemValue.java	/^    Tree.Id id;$/;"	f	class:SemValue
id	src/main/java/decaf/frontend/tree/Tree.java	/^        public Id id;$/;"	f	class:Tree.LocalVarDef
id	src/main/java/decaf/frontend/tree/Tree.java	/^        public Id id;$/;"	f	class:Tree.MethodDef
id	src/main/java/decaf/frontend/tree/Tree.java	/^        public Id id;$/;"	f	class:Tree.TClass
id	src/main/java/decaf/frontend/tree/Tree.java	/^        public Id id;$/;"	f	class:Tree.VarDef
id	src/main/java/decaf/frontend/tree/Tree.java	/^        public final Id id;$/;"	f	class:Tree.ClassDef
id	src/main/java/decaf/lowlevel/instr/Reg.java	/^    public final int id;$/;"	f	class:Reg
identifier	src/main/java/decaf/frontend/parsing/AbstractLexer.java	/^    protected int identifier(String name) {$/;"	m	class:AbstractLexer
ifLoggable	src/main/java/decaf/lowlevel/log/Log.java	/^    public static void ifLoggable(Level level, Consumer<IndentPrinter> action) {$/;"	m	class:Log
incIndent	src/main/java/decaf/lowlevel/log/IndentPrinter.java	/^    public void incIndent() {$/;"	m	class:IndentPrinter
indents	src/main/java/decaf/lowlevel/log/IndentPrinter.java	/^    private int indents;$/;"	f	class:IndentPrinter	file:
index	src/main/java/decaf/frontend/tree/Tree.java	/^        public Expr index;$/;"	f	class:Tree.IndexSel
index	src/main/java/decaf/lowlevel/instr/Temp.java	/^    public final int index;$/;"	f	class:Temp
info	src/main/java/decaf/backend/asm/SubroutineEmitter.java	/^    protected SubroutineInfo info;$/;"	f	class:SubroutineEmitter
info	src/main/java/decaf/lowlevel/log/Log.java	/^    public static void info(String fmt, Object... args) {$/;"	m	class:Log
init	gradlew.bat	/^:init$/;"	l
init	src/main/java/decaf/frontend/tree/Tree.java	/^        public Stmt init; \/\/ In syntax, this is limited to a simple statement.$/;"	f	class:Tree.For
initMethodArray	src/main/java/decaf/frontend/tree/Tree.java	/^        public void initMethodArray(){$/;"	m	class:Tree.ClassDef
initVal	src/main/java/decaf/frontend/tree/Tree.java	/^        public Optional<Expr> initVal;$/;"	f	class:Tree.LocalVarDef
initVal	src/main/java/decaf/frontend/tree/Tree.java	/^        public final Optional<Expr> initVal = Optional.empty();$/;"	f	class:Tree.VarDef
instr	src/main/java/decaf/backend/dataflow/Loc.java	/^    public final I instr;$/;"	f	class:Loc
instrSeq	src/main/java/decaf/lowlevel/tac/TacFunc.java	/^    List<TacInstr> instrSeq = new ArrayList<>();$/;"	f	class:TacFunc
intConst	src/main/java/decaf/frontend/parsing/AbstractLexer.java	/^    protected int intConst(String value) {$/;"	m	class:AbstractLexer
intVal	src/main/java/decaf/frontend/parsing/SemValue.java	/^    int intVal;$/;"	f	class:SemValue
is	src/main/java/decaf/frontend/tree/Tree.java	/^        public Id is;$/;"	f	class:Tree.ClassTest
isAbstract	src/main/java/decaf/frontend/symbol/ClassSymbol.java	/^    public boolean isAbstract() {$/;"	m	class:ClassSymbol
isAbstract	src/main/java/decaf/frontend/symbol/MethodSymbol.java	/^    public boolean isAbstract( ) {$/;"	m	class:MethodSymbol
isAbstract	src/main/java/decaf/frontend/tree/Tree.java	/^        public boolean isAbstract() {$/;"	m	class:Tree.MethodDef
isAbstract	src/main/java/decaf/frontend/tree/Tree.java	/^        public boolean isAbstract() {$/;"	m	class:Tree.Modifiers
isAbstract	src/main/java/decaf/frontend/tree/Tree.java	/^        public boolean isAbstract() {return modifiers.isAbstract();}$/;"	m	class:Tree.ClassDef
isArrayLength	src/main/java/decaf/frontend/tree/Tree.java	/^        public boolean isArrayLength = false;$/;"	f	class:Tree.Call
isArrayType	src/main/java/decaf/frontend/type/ArrayType.java	/^    public boolean isArrayType() {$/;"	m	class:ArrayType
isArrayType	src/main/java/decaf/frontend/type/Type.java	/^    public boolean isArrayType() {$/;"	m	class:Type
isBaseType	src/main/java/decaf/frontend/type/BuiltInType.java	/^    public boolean isBaseType() {$/;"	m	class:BuiltInType
isBaseType	src/main/java/decaf/frontend/type/Type.java	/^    public boolean isBaseType() {$/;"	m	class:Type
isBlock	src/main/java/decaf/frontend/tree/Tree.java	/^        public boolean isBlock() {$/;"	m	class:Tree.Block
isBlock	src/main/java/decaf/frontend/tree/Tree.java	/^        public boolean isBlock() {$/;"	m	class:Tree.Stmt
isClassName	src/main/java/decaf/frontend/tree/Tree.java	/^        public boolean isClassName = false;$/;"	f	class:Tree.VarSel
isClassScope	src/main/java/decaf/frontend/scope/ClassScope.java	/^    public boolean isClassScope() {$/;"	m	class:ClassScope
isClassScope	src/main/java/decaf/frontend/scope/Scope.java	/^    public boolean isClassScope() {$/;"	m	class:Scope
isClassSymbol	src/main/java/decaf/frontend/symbol/ClassSymbol.java	/^    public boolean isClassSymbol() {$/;"	m	class:ClassSymbol
isClassSymbol	src/main/java/decaf/frontend/symbol/Symbol.java	/^    public boolean isClassSymbol() {$/;"	m	class:Symbol
isClassType	src/main/java/decaf/frontend/type/ClassType.java	/^    public boolean isClassType() {$/;"	m	class:ClassType
isClassType	src/main/java/decaf/frontend/type/Type.java	/^    public boolean isClassType() {$/;"	m	class:Type
isConcrete	src/main/java/decaf/frontend/tree/Tree.java	/^        public boolean isConcrete(){$/;"	m	class:Tree.ClassDef
isEmpty	src/main/java/decaf/backend/dataflow/BasicBlock.java	/^    public boolean isEmpty() {$/;"	m	class:BasicBlock
isEmpty	src/main/java/decaf/frontend/scope/Scope.java	/^    public boolean isEmpty() {$/;"	m	class:Scope
isFormalOrLocalOrLambdaScope	src/main/java/decaf/frontend/scope/Scope.java	/^    public boolean isFormalOrLocalOrLambdaScope() {$/;"	m	class:Scope
isFormalOrLocalScope	src/main/java/decaf/frontend/scope/Scope.java	/^    public boolean isFormalOrLocalScope() {$/;"	m	class:Scope
isFormalScope	src/main/java/decaf/frontend/scope/FormalScope.java	/^    public boolean isFormalScope() {$/;"	m	class:FormalScope
isFormalScope	src/main/java/decaf/frontend/scope/Scope.java	/^    public boolean isFormalScope() {$/;"	m	class:Scope
isFunc	src/main/java/decaf/lowlevel/label/FuncLabel.java	/^    public boolean isFunc() {$/;"	m	class:FuncLabel
isFunc	src/main/java/decaf/lowlevel/label/Label.java	/^    public boolean isFunc() {$/;"	m	class:Label
isFuncType	src/main/java/decaf/frontend/type/FunType.java	/^    public boolean isFuncType() {$/;"	m	class:FunType
isFuncType	src/main/java/decaf/frontend/type/Type.java	/^    public boolean isFuncType() {$/;"	m	class:Type
isGlobalScope	src/main/java/decaf/frontend/scope/GlobalScope.java	/^    public boolean isGlobalScope() {$/;"	m	class:GlobalScope
isGlobalScope	src/main/java/decaf/frontend/scope/Scope.java	/^    public boolean isGlobalScope() {$/;"	m	class:Scope
isIntrinsic	src/main/java/decaf/lowlevel/label/IntrinsicLabel.java	/^    public boolean isIntrinsic() {$/;"	m	class:IntrinsicLabel
isIntrinsic	src/main/java/decaf/lowlevel/label/Label.java	/^    public boolean isIntrinsic() {$/;"	m	class:Label
isLabel	src/main/java/decaf/lowlevel/instr/PseudoInstr.java	/^    public boolean isLabel() {$/;"	m	class:PseudoInstr
isLambdaScope	src/main/java/decaf/frontend/scope/LambdaScope.java	/^    public boolean isLambdaScope() {$/;"	m	class:LambdaScope
isLambdaScope	src/main/java/decaf/frontend/scope/Scope.java	/^    public boolean isLambdaScope() {$/;"	m	class:Scope
isLambdaSymbol	src/main/java/decaf/frontend/symbol/LambdaSymbol.java	/^    public boolean isLambdaSymbol() {$/;"	m	class:LambdaSymbol
isLambdaSymbol	src/main/java/decaf/frontend/symbol/Symbol.java	/^    public boolean isLambdaSymbol() {$/;"	m	class:Symbol
isLambdaType	src/main/java/decaf/frontend/type/Type.java	/^    public boolean isLambdaType() {$/;"	m	class:Type
isLocalScope	src/main/java/decaf/frontend/scope/LocalScope.java	/^    public boolean isLocalScope() {$/;"	m	class:LocalScope
isLocalScope	src/main/java/decaf/frontend/scope/Scope.java	/^    public boolean isLocalScope() {$/;"	m	class:Scope
isLocalVar	src/main/java/decaf/frontend/symbol/VarSymbol.java	/^    public boolean isLocalVar() {$/;"	m	class:VarSymbol
isMain	src/main/java/decaf/frontend/symbol/MethodSymbol.java	/^    public boolean isMain() {$/;"	m	class:MethodSymbol
isMainClass	src/main/java/decaf/frontend/symbol/ClassSymbol.java	/^    public boolean isMainClass() {$/;"	m	class:ClassSymbol
isMainClass	src/main/java/decaf/lowlevel/tac/ClassInfo.java	/^    public final boolean isMainClass;$/;"	f	class:ClassInfo
isMemberVar	src/main/java/decaf/frontend/symbol/VarSymbol.java	/^    public boolean isMemberVar() {$/;"	m	class:VarSymbol
isMethodSymbol	src/main/java/decaf/frontend/symbol/MethodSymbol.java	/^    public boolean isMethodSymbol() {$/;"	m	class:MethodSymbol
isMethodSymbol	src/main/java/decaf/frontend/symbol/Symbol.java	/^    public boolean isMethodSymbol() {$/;"	m	class:Symbol
isNewLine	src/main/java/decaf/lowlevel/log/IndentPrinter.java	/^    private boolean isNewLine = true;$/;"	f	class:IndentPrinter	file:
isNonTerminal	build/generated-src/ll1pg/LLTable.java	/^    public boolean isNonTerminal(int symbol) {$/;"	m	class:LLTable
isParam	src/main/java/decaf/frontend/symbol/VarSymbol.java	/^    public boolean isParam() {$/;"	m	class:VarSymbol
isReturn	src/main/java/decaf/lowlevel/instr/PseudoInstr.java	/^    public boolean isReturn() {$/;"	m	class:PseudoInstr
isSequential	src/main/java/decaf/lowlevel/instr/PseudoInstr.java	/^    public boolean isSequential() {$/;"	m	class:PseudoInstr
isStatic	src/main/java/decaf/frontend/symbol/MethodSymbol.java	/^    public boolean isStatic() {$/;"	m	class:MethodSymbol
isStatic	src/main/java/decaf/frontend/tree/Tree.java	/^        public boolean isStatic() {$/;"	m	class:Tree.MethodDef
isStatic	src/main/java/decaf/frontend/tree/Tree.java	/^        public boolean isStatic() {$/;"	m	class:Tree.Modifiers
isUsed	src/main/java/decaf/lowlevel/instr/Reg.java	/^    public boolean isUsed() {$/;"	m	class:Reg
isVTable	src/main/java/decaf/lowlevel/label/Label.java	/^    public boolean isVTable() {$/;"	m	class:Label
isVTable	src/main/java/decaf/lowlevel/label/VTableLabel.java	/^    public boolean isVTable() {$/;"	m	class:VTableLabel
isVarSymbol	src/main/java/decaf/frontend/symbol/Symbol.java	/^    public boolean isVarSymbol() {$/;"	m	class:Symbol
isVarSymbol	src/main/java/decaf/frontend/symbol/VarSymbol.java	/^    public boolean isVarSymbol() {$/;"	m	class:VarSymbol
isVoidType	src/main/java/decaf/frontend/type/BuiltInType.java	/^    public boolean isVoidType() {$/;"	m	class:BuiltInType
isVoidType	src/main/java/decaf/frontend/type/Type.java	/^    public boolean isVoidType() {$/;"	m	class:Type
issue	src/main/java/decaf/driver/ErrorIssuer.java	/^    default void issue(DecafError error) {$/;"	m	interface:ErrorIssuer
issueError	src/main/java/decaf/frontend/parsing/AbstractLexer.java	/^    protected void issueError(DecafError error) {$/;"	m	class:AbstractLexer
issuer	src/main/java/decaf/frontend/parsing/AbstractLexer.java	/^    private ErrorIssuer issuer;$/;"	f	class:AbstractLexer	file:
issuer	src/main/java/decaf/frontend/parsing/AbstractParser.java	/^    private ErrorIssuer issuer;$/;"	f	class:AbstractParser	file:
iterator	src/main/java/decaf/backend/dataflow/BasicBlock.java	/^    public Iterator<Loc<I>> iterator() {$/;"	m	class:BasicBlock
iterator	src/main/java/decaf/backend/dataflow/CFG.java	/^    public Iterator<BasicBlock<I>> iterator() {$/;"	m	class:CFG
iterator	src/main/java/decaf/frontend/scope/Scope.java	/^    public Iterator<Symbol> iterator() {$/;"	m	class:Scope
iterator	src/main/java/decaf/frontend/tree/TreeNode.java	/^    public Iterator<Object> iterator() {$/;"	m	class:TreeNode
iterator	src/main/java/decaf/lowlevel/tac/StringPool.java	/^    public Iterator<String> iterator() {$/;"	m	class:StringPool
keyword	src/main/java/decaf/frontend/parsing/AbstractLexer.java	/^    protected int keyword(int code) {$/;"	m	class:AbstractLexer
kind	src/main/java/decaf/backend/dataflow/BasicBlock.java	/^    public final Kind kind;$/;"	f	class:BasicBlock
kind	src/main/java/decaf/frontend/parsing/SemValue.java	/^    final Kind kind;$/;"	f	class:SemValue
kind	src/main/java/decaf/frontend/scope/Scope.java	/^    public final Kind kind;$/;"	f	class:Scope
kind	src/main/java/decaf/frontend/tree/TreeNode.java	/^    public final Tree.Kind kind;$/;"	f	class:TreeNode
kind	src/main/java/decaf/lowlevel/instr/PseudoInstr.java	/^    public final Kind kind;$/;"	f	class:PseudoInstr
kind	src/main/java/decaf/lowlevel/label/Label.java	/^    public final Kind kind;$/;"	f	class:Label
kind	src/main/java/decaf/lowlevel/tac/Intrinsic.java	/^    public final Opcode kind;$/;"	f	class:Intrinsic
lValue	src/main/java/decaf/frontend/parsing/SemValue.java	/^    Tree.LValue lValue;$/;"	f	class:SemValue
label	src/main/java/decaf/backend/dataflow/BasicBlock.java	/^    public final Optional<Label> label;$/;"	f	class:BasicBlock
label	src/main/java/decaf/lowlevel/instr/PseudoInstr.java	/^    public final Label label;$/;"	f	class:PseudoInstr
label	src/main/java/decaf/lowlevel/tac/VTable.java	/^    public final VTableLabel label;$/;"	f	class:VTable
labels	src/main/java/decaf/lowlevel/tac/ProgramWriter.java	/^        private Map<String, FuncLabel> labels = new TreeMap<>();$/;"	f	class:ProgramWriter.Context	file:
labelsToBBs	src/main/java/decaf/backend/dataflow/CFGBuilder.java	/^    private Map<Label, Integer> labelsToBBs = new TreeMap<>();$/;"	f	class:CFGBuilder	file:
lambdaStack	src/main/java/decaf/frontend/scope/ScopeStack.java	/^    private Stack<LambdaScope> lambdaStack = new Stack<>();$/;"	f	class:ScopeStack	file:
lambdaStack	src/main/java/decaf/frontend/typecheck/Namer.java	/^    public Stack<String> lambdaStack = new Stack<>();$/;"	f	class:Namer
left	src/main/java/decaf/driver/error/IncompatBinOpError.java	/^    private String left;$/;"	f	class:IncompatBinOpError	file:
length	src/main/java/decaf/frontend/tree/Tree.java	/^        public Expr length;$/;"	f	class:Tree.NewArray
lexer	src/main/java/decaf/frontend/parsing/AbstractParser.java	/^    private AbstractLexer lexer;$/;"	f	class:AbstractParser	file:
lhs	src/main/java/decaf/frontend/tree/Tree.java	/^        public Expr lhs;$/;"	f	class:Tree.Binary
lhs	src/main/java/decaf/frontend/tree/Tree.java	/^        public LValue lhs;$/;"	f	class:Tree.Assign
lhs	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public final Temp lhs;$/;"	f	class:TacInstr.Binary
line	src/main/java/decaf/frontend/tree/Pos.java	/^    public final int line;$/;"	f	class:Pos
links	src/main/java/decaf/backend/dataflow/CFG.java	/^    private List<Pair<Set<Integer>, Set<Integer>>> links;$/;"	f	class:CFG	file:
liveIn	src/main/java/decaf/backend/dataflow/BasicBlock.java	/^    public Set<Temp> liveIn;$/;"	f	class:BasicBlock
liveIn	src/main/java/decaf/backend/dataflow/Loc.java	/^    public Set<Temp> liveIn;$/;"	f	class:Loc
liveOut	src/main/java/decaf/backend/dataflow/BasicBlock.java	/^    public Set<Temp> liveOut;$/;"	f	class:BasicBlock
liveOut	src/main/java/decaf/backend/dataflow/Loc.java	/^    public Set<Temp> liveOut;$/;"	f	class:Loc
liveUse	src/main/java/decaf/backend/dataflow/BasicBlock.java	/^    public Set<Temp> liveUse;$/;"	f	class:BasicBlock
load	src/main/java/decaf/lowlevel/tac/Simulator.java	/^        public int load(int base, int offset) {$/;"	m	class:Simulator.Memory
loadPrintBool	src/main/java/decaf/backend/asm/mips/MipsAsmEmitter.java	/^    private void loadPrintBool() {$/;"	m	class:MipsAsmEmitter	file:
loadReadLine	src/main/java/decaf/backend/asm/mips/MipsAsmEmitter.java	/^    private void loadReadLine() {$/;"	m	class:MipsAsmEmitter	file:
loadStringEqual	src/main/java/decaf/backend/asm/mips/MipsAsmEmitter.java	/^    private void loadStringEqual() {$/;"	m	class:MipsAsmEmitter	file:
localAlloc	src/main/java/decaf/backend/reg/BruteRegAlloc.java	/^    private void localAlloc(BasicBlock<PseudoInstr> bb, SubroutineEmitter subEmitter) {$/;"	m	class:BruteRegAlloc	file:
localVarDefPos	src/main/java/decaf/frontend/typecheck/Typer.java	/^    private Optional<Pos> localVarDefPos = Optional.empty();$/;"	f	class:Typer	file:
locs	src/main/java/decaf/backend/dataflow/BasicBlock.java	/^    public final List<Loc<I>> locs;$/;"	f	class:BasicBlock
logColorful	src/main/java/decaf/driver/OptParser.java	/^    final Option logColorful = Option$/;"	f	class:OptParser
logFile	src/main/java/decaf/driver/OptParser.java	/^    final Option logFile = Option$/;"	f	class:OptParser
logLevel	src/main/java/decaf/driver/OptParser.java	/^    final Option logLevel = Option$/;"	f	class:OptParser
lookup	src/main/java/decaf/frontend/scope/ClassScope.java	/^    public Optional<Symbol> lookup(String key) {$/;"	m	class:ClassScope
lookup	src/main/java/decaf/frontend/scope/ScopeStack.java	/^    public Optional<Symbol> lookup(String key) {$/;"	m	class:ScopeStack
lookupBefore	src/main/java/decaf/frontend/scope/ScopeStack.java	/^    public Optional<Symbol> lookupBefore(String key, Pos pos) {$/;"	m	class:ScopeStack
lookupClass	src/main/java/decaf/frontend/scope/ScopeStack.java	/^    public Optional<ClassSymbol> lookupClass(String key) {$/;"	m	class:ScopeStack
loopExits	src/main/java/decaf/frontend/tacgen/TacEmitter.java	/^    Stack<Label> loopExits = new Stack<>();$/;"	f	interface:TacEmitter
loopLevel	src/main/java/decaf/frontend/typecheck/Typer.java	/^    private int loopLevel = 0;$/;"	f	class:Typer	file:
main	src/main/java/decaf/Main.java	/^    public static void main(String[] args) {$/;"	m	class:Main
main	src/main/java/decaf/frontend/symbol/ClassSymbol.java	/^    private boolean main;$/;"	f	class:ClassSymbol	file:
main	src/main/java/decaf/frontend/symbol/MethodSymbol.java	/^    private boolean main = false;$/;"	f	class:MethodSymbol	file:
mainClass	src/main/java/decaf/frontend/tree/Tree.java	/^        public ClassSymbol mainClass;$/;"	f	class:Tree.TopLevel
mainEnd	gradlew.bat	/^:mainEnd$/;"	l
maxArgs	src/main/java/decaf/backend/asm/mips/MipsAsmEmitter.java	/^        int maxArgs = 0;$/;"	f	class:MipsAsmEmitter.MipsInstrSelector
mem	src/main/java/decaf/lowlevel/tac/Simulator.java	/^            public int[] mem;$/;"	f	class:Simulator.Memory.Block
memberMethods	src/main/java/decaf/lowlevel/tac/ClassInfo.java	/^    public final Set<String> memberMethods;$/;"	f	class:ClassInfo
memberMethods	src/main/java/decaf/lowlevel/tac/VTable.java	/^    List<FuncLabel> memberMethods = new ArrayList<>();$/;"	f	class:VTable
memberVariables	src/main/java/decaf/lowlevel/tac/ClassInfo.java	/^    public final Set<String> memberVariables;$/;"	f	class:ClassInfo
memberVariables	src/main/java/decaf/lowlevel/tac/VTable.java	/^    List<String> memberVariables = new ArrayList<>();$/;"	f	class:VTable
method	src/main/java/decaf/driver/error/AssignMethodMemberError.java	/^    String method;$/;"	f	class:AssignMethodMemberError
method	src/main/java/decaf/driver/error/BadArgCountError.java	/^    private String method;$/;"	f	class:BadArgCountError	file:
method	src/main/java/decaf/lowlevel/label/FuncLabel.java	/^    public final String method;$/;"	f	class:FuncLabel
methodDefs	src/main/java/decaf/frontend/tree/Tree.java	/^        public ArrayList<MethodDef> methodDefs;$/;"	f	class:Tree.ClassDef
methodNames	src/main/java/decaf/frontend/tree/Tree.java	/^        public ArrayList<String> methodNames;$/;"	f	class:Tree.ClassDef
methods	src/main/java/decaf/frontend/tree/Tree.java	/^        public List<MethodDef> methods() {$/;"	m	class:Tree.ClassDef
methods	src/main/java/decaf/lowlevel/tac/ClassInfo.java	/^    public final Set<String> methods;$/;"	f	class:ClassInfo
modifiers	src/main/java/decaf/frontend/symbol/ClassSymbol.java	/^    public final Tree.Modifiers modifiers;$/;"	f	class:ClassSymbol
modifiers	src/main/java/decaf/frontend/symbol/MethodSymbol.java	/^    public final Tree.Modifiers modifiers;$/;"	f	class:MethodSymbol
modifiers	src/main/java/decaf/frontend/tree/Tree.java	/^        public Modifiers modifiers;$/;"	f	class:Tree.MethodDef
modifiers	src/main/java/decaf/frontend/tree/Tree.java	/^        public final Modifiers modifiers;$/;"	f	class:Tree.ClassDef
msg	src/main/java/decaf/driver/error/MsgError.java	/^    private String msg;$/;"	f	class:MsgError	file:
msg	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        final String msg;$/;"	f	class:TacInstr.Memo
name	TestCases/testAll.py	/^    name = sys.argv[1]$/;"	v
name	build/generated-src/ll1pg/LLTable.java	/^    public String name(int symbol) {$/;"	m	class:LLTable
name	src/main/java/decaf/driver/Phase.java	/^    public final String name;$/;"	f	class:Phase
name	src/main/java/decaf/driver/error/BadVarTypeError.java	/^    private String name;$/;"	f	class:BadVarTypeError	file:
name	src/main/java/decaf/driver/error/ClassNotFoundError.java	/^    private String name;$/;"	f	class:ClassNotFoundError	file:
name	src/main/java/decaf/driver/error/DeclConflictError.java	/^    private String name;$/;"	f	class:DeclConflictError	file:
name	src/main/java/decaf/driver/error/FieldNotAccessError.java	/^    private String name;$/;"	f	class:FieldNotAccessError	file:
name	src/main/java/decaf/driver/error/FieldNotFoundError.java	/^    private String name;$/;"	f	class:FieldNotFoundError	file:
name	src/main/java/decaf/driver/error/NotClassFieldError.java	/^    private String name;$/;"	f	class:NotClassFieldError	file:
name	src/main/java/decaf/driver/error/NotClassMethodError.java	/^    private String name;$/;"	f	class:NotClassMethodError	file:
name	src/main/java/decaf/driver/error/OverridingVarError.java	/^    private String name;$/;"	f	class:OverridingVarError	file:
name	src/main/java/decaf/driver/error/UndeclVarError.java	/^    private String name;$/;"	f	class:UndeclVarError	file:
name	src/main/java/decaf/frontend/symbol/Symbol.java	/^    public final String name;$/;"	f	class:Symbol
name	src/main/java/decaf/frontend/tree/Tree.java	/^        public String name;$/;"	f	class:Tree.LocalVarDef
name	src/main/java/decaf/frontend/tree/Tree.java	/^        public String name;$/;"	f	class:Tree.MethodDef
name	src/main/java/decaf/frontend/tree/Tree.java	/^        public String name;$/;"	f	class:Tree.VarDef
name	src/main/java/decaf/frontend/tree/Tree.java	/^        public String name;$/;"	f	class:Tree.VarSel
name	src/main/java/decaf/frontend/tree/Tree.java	/^        public final String name;$/;"	f	class:Tree.ClassDef
name	src/main/java/decaf/frontend/tree/Tree.java	/^        public final String name;$/;"	f	class:Tree.Id
name	src/main/java/decaf/frontend/type/BuiltInType.java	/^    private final String name;$/;"	f	class:BuiltInType	file:
name	src/main/java/decaf/frontend/type/ClassType.java	/^    public final String name;$/;"	f	class:ClassType
name	src/main/java/decaf/lowlevel/instr/Reg.java	/^    public final String name;$/;"	f	class:Reg
name	src/main/java/decaf/lowlevel/label/Label.java	/^    public final String name;$/;"	f	class:Label
name	src/main/java/decaf/lowlevel/tac/ClassInfo.java	/^    public final String name;$/;"	f	class:ClassInfo
name	src/main/java/decaf/lowlevel/tac/Intrinsic.java	/^    public final String name;$/;"	f	class:Intrinsic
nested	src/main/java/decaf/frontend/scope/FormalScope.java	/^    private LocalScope nested;$/;"	f	class:FormalScope	file:
nested	src/main/java/decaf/frontend/scope/LambdaScope.java	/^    private LocalScope nested = new LocalScope(this);$/;"	f	class:LambdaScope	file:
nested	src/main/java/decaf/frontend/scope/LocalScope.java	/^    public List<Scope> nested = new ArrayList<>();$/;"	f	class:LocalScope
nestedClassScopes	src/main/java/decaf/frontend/scope/GlobalScope.java	/^    public List<ClassScope> nestedClassScopes() {$/;"	m	class:GlobalScope
nestedFormalScopes	src/main/java/decaf/frontend/scope/ClassScope.java	/^    public List<FormalScope> nestedFormalScopes() {$/;"	m	class:ClassScope
nestedLocalScope	src/main/java/decaf/frontend/scope/FormalScope.java	/^    public LocalScope nestedLocalScope() {$/;"	m	class:FormalScope
nestedLocalScope	src/main/java/decaf/frontend/scope/LambdaScope.java	/^    public LocalScope nestedLocalScope() {$/;"	m	class:LambdaScope
nestedLocalScopes	src/main/java/decaf/frontend/scope/LocalScope.java	/^    public List<Scope> nestedLocalScopes() {$/;"	m	class:LocalScope
nextLocalOffset	src/main/java/decaf/backend/asm/mips/MipsSubroutineEmitter.java	/^    private int nextLocalOffset;$/;"	f	class:MipsSubroutineEmitter	file:
nextTempId	src/main/java/decaf/lowlevel/tac/FuncVisitor.java	/^    private int nextTempId = 0;$/;"	f	class:FuncVisitor	file:
nextTempLabelId	src/main/java/decaf/lowlevel/tac/ProgramWriter.java	/^        private int nextTempLabelId = 1;$/;"	f	class:ProgramWriter.Context	file:
nextToken	src/main/java/decaf/frontend/parsing/AbstractParser.java	/^    protected int nextToken() {$/;"	m	class:AbstractParser
noError	src/main/java/decaf/frontend/type/BuiltInType.java	/^    public boolean noError() {$/;"	m	class:BuiltInType
noError	src/main/java/decaf/frontend/type/Type.java	/^    public boolean noError() {$/;"	m	class:Type
nodes	src/main/java/decaf/backend/dataflow/CFG.java	/^    public final List<BasicBlock<I>> nodes;$/;"	f	class:CFG
numArg	src/main/java/decaf/backend/asm/SubroutineInfo.java	/^    public final int numArg;$/;"	f	class:SubroutineInfo
numArgs	src/main/java/decaf/lowlevel/tac/Intrinsic.java	/^    public final int numArgs;$/;"	f	class:Intrinsic
numArgs	src/main/java/decaf/lowlevel/tac/TacFunc.java	/^    public final int numArgs;$/;"	f	class:TacFunc
obj	src/main/java/decaf/frontend/tree/Tree.java	/^        public Expr obj;$/;"	f	class:Tree.ClassCast
obj	src/main/java/decaf/frontend/tree/Tree.java	/^        public Expr obj;$/;"	f	class:Tree.ClassTest
occupied	src/main/java/decaf/lowlevel/instr/Reg.java	/^    public boolean occupied = false;$/;"	f	class:Reg
offset	src/main/java/decaf/lowlevel/Mips.java	/^        private int offset;$/;"	f	class:Mips.LoadWord	file:
offset	src/main/java/decaf/lowlevel/Mips.java	/^        private int offset;$/;"	f	class:Mips.NativeLoadWord	file:
offset	src/main/java/decaf/lowlevel/Mips.java	/^        private int offset;$/;"	f	class:Mips.NativeStoreWord	file:
offset	src/main/java/decaf/lowlevel/Mips.java	/^        private int offset;$/;"	f	class:Mips.SPAdd	file:
offset	src/main/java/decaf/lowlevel/Mips.java	/^        private int offset;$/;"	f	class:Mips.StoreWord	file:
offset	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public final int offset;$/;"	f	class:TacInstr.Memory
offsets	src/main/java/decaf/backend/asm/mips/MipsSubroutineEmitter.java	/^    private Map<Temp, Integer> offsets = new TreeMap<>();$/;"	f	class:MipsSubroutineEmitter	file:
offsets	src/main/java/decaf/lowlevel/tac/ProgramWriter.java	/^        private Map<String, Integer> offsets = new TreeMap<>();$/;"	f	class:ProgramWriter.Context	file:
omega	gradlew.bat	/^:omega$/;"	l
onSucceed	src/main/java/decaf/backend/asm/Asm.java	/^    public void onSucceed(String code) {$/;"	m	class:Asm
onSucceed	src/main/java/decaf/backend/opt/Optimizer.java	/^    public void onSucceed(TacProg program) {$/;"	m	class:Optimizer
onSucceed	src/main/java/decaf/driver/Phase.java	/^    public void onSucceed(Out output) {$/;"	m	class:Phase
onSucceed	src/main/java/decaf/frontend/parsing/JaccParser.java	/^    public void onSucceed(Tree.TopLevel tree) {$/;"	m	class:JaccParser
onSucceed	src/main/java/decaf/frontend/tacgen/TacGen.java	/^    public void onSucceed(TacProg program) {$/;"	m	class:TacGen
onSucceed	src/main/java/decaf/frontend/typecheck/Typer.java	/^    public void onSucceed(Tree.TopLevel tree) {$/;"	m	class:Typer
op	src/main/java/decaf/driver/error/IncompatBinOpError.java	/^    private String op;$/;"	f	class:IncompatBinOpError	file:
op	src/main/java/decaf/driver/error/IncompatUnOpError.java	/^    private String op;$/;"	f	class:IncompatUnOpError	file:
op	src/main/java/decaf/frontend/tree/Tree.java	/^        public BinaryOp op;$/;"	f	class:Tree.Binary
op	src/main/java/decaf/frontend/tree/Tree.java	/^        public UnaryOp op;$/;"	f	class:Tree.Unary
op	src/main/java/decaf/lowlevel/Mips.java	/^        private String op;$/;"	f	class:Mips.Binary	file:
op	src/main/java/decaf/lowlevel/Mips.java	/^        private String op;$/;"	f	class:Mips.Branch	file:
op	src/main/java/decaf/lowlevel/Mips.java	/^        private String op;$/;"	f	class:Mips.Unary	file:
op	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public final Op op;$/;"	f	class:TacInstr.Binary
op	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public final Op op;$/;"	f	class:TacInstr.CondBranch
op	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public final Op op;$/;"	f	class:TacInstr.Memory
op	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public final Op op;$/;"	f	class:TacInstr.Unary
opStr	src/main/java/decaf/frontend/tree/Tree.java	/^    public static String opStr(BinaryOp op) {$/;"	m	class:Tree
opStr	src/main/java/decaf/frontend/tree/Tree.java	/^    public static String opStr(UnaryOp op) {$/;"	m	class:Tree
opcode	src/main/java/decaf/lowlevel/label/IntrinsicLabel.java	/^    public final Intrinsic.Opcode opcode;$/;"	f	class:IntrinsicLabel
open	src/main/java/decaf/frontend/scope/ScopeStack.java	/^    public void open(Scope scope) {$/;"	m	class:ScopeStack
operand	src/main/java/decaf/frontend/tree/Tree.java	/^        public Expr operand;$/;"	f	class:Tree.Unary
operand	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public final Temp operand;$/;"	f	class:TacInstr.Unary
operator	src/main/java/decaf/frontend/parsing/AbstractLexer.java	/^    protected int operator(int code) {$/;"	m	class:AbstractLexer
options	src/main/java/decaf/driver/OptParser.java	/^    Options options;$/;"	f	class:OptParser
output	src/main/java/decaf/driver/Config.java	/^    public final OutputStream output;$/;"	f	class:Config
output	src/main/java/decaf/driver/OptParser.java	/^    final Option output = Option$/;"	f	class:OptParser
outs	src/main/java/decaf/lowlevel/log/Log.java	/^    private static List<OutputStream> outs = new ArrayList<>();$/;"	f	class:Log	file:
overrideTypeOf	src/main/java/decaf/frontend/type/FunType.java	/^    public boolean overrideTypeOf(Type type) {$/;"	m	class:FunType
owner	src/main/java/decaf/driver/error/FieldNotAccessError.java	/^    private String owner;$/;"	f	class:FieldNotAccessError	file:
owner	src/main/java/decaf/driver/error/FieldNotFoundError.java	/^    private String owner;$/;"	f	class:FieldNotFoundError	file:
owner	src/main/java/decaf/driver/error/NotClassFieldError.java	/^    private String owner;$/;"	f	class:NotClassFieldError	file:
owner	src/main/java/decaf/driver/error/NotClassMethodError.java	/^    private String owner;$/;"	f	class:NotClassMethodError	file:
owner	src/main/java/decaf/frontend/scope/ClassScope.java	/^    private ClassSymbol owner;$/;"	f	class:ClassScope	file:
owner	src/main/java/decaf/frontend/scope/FormalScope.java	/^    private MethodSymbol owner;$/;"	f	class:FormalScope	file:
owner	src/main/java/decaf/frontend/scope/LambdaScope.java	/^    private LambdaSymbol owner;$/;"	f	class:LambdaScope	file:
owner	src/main/java/decaf/frontend/symbol/MethodSymbol.java	/^    public final ClassSymbol owner;$/;"	f	class:MethodSymbol
param	src/main/java/decaf/frontend/tree/Tree.java	/^        public List<TypeLit> param;$/;"	f	class:Tree.TLambda
params	src/main/java/decaf/frontend/tree/Tree.java	/^        public List<LocalVarDef> params;$/;"	f	class:Tree.MethodDef
parent	src/main/java/decaf/frontend/scope/LocalScope.java	/^    private Scope parent;$/;"	f	class:LocalScope	file:
parent	src/main/java/decaf/frontend/tree/Tree.java	/^        public Optional<Id> parent;$/;"	f	class:Tree.ClassDef
parent	src/main/java/decaf/lowlevel/tac/ClassInfo.java	/^    public final Optional<String> parent;$/;"	f	class:ClassInfo
parent	src/main/java/decaf/lowlevel/tac/VTable.java	/^    public final Optional<VTable> parent;$/;"	f	class:VTable
parentName	src/main/java/decaf/driver/error/BadOverrideError.java	/^    private String parentName;$/;"	f	class:BadOverrideError	file:
parentScope	src/main/java/decaf/frontend/scope/ClassScope.java	/^    public final Optional<ClassScope> parentScope;$/;"	f	class:ClassScope
parentSymbol	src/main/java/decaf/frontend/symbol/ClassSymbol.java	/^    public final Optional<ClassSymbol> parentSymbol;$/;"	f	class:ClassSymbol
parse	build/generated-src/jacc/DecafJaccParser.java	/^    public boolean parse() {$/;"	m	class:DecafJaccParser
parse	src/main/java/decaf/driver/OptParser.java	/^    public Optional<Config> parse(String[] args) {$/;"	m	class:OptParser
parse	src/main/java/decaf/driver/TaskFactory.java	/^    public Task<InputStream, Tree.TopLevel> parse() {$/;"	m	class:TaskFactory
parse	src/main/java/decaf/frontend/parsing/AbstractParser.java	/^    abstract boolean parse();$/;"	m	class:AbstractParser
parseTarget	src/main/java/decaf/driver/Config.java	/^    private static Target parseTarget(String target) throws ParseException {$/;"	m	class:Config	file:
parser	src/main/java/decaf/frontend/parsing/AbstractLexer.java	/^    private P parser;$/;"	f	class:AbstractLexer	file:
pcNext	src/main/java/decaf/lowlevel/tac/Simulator.java	/^        int pcNext;$/;"	f	class:Simulator.Frame
platformName	src/main/java/decaf/backend/asm/AsmEmitter.java	/^    public final String platformName;$/;"	f	class:AsmEmitter
pool	src/main/java/decaf/backend/asm/mips/MipsAsmEmitter.java	/^    private StringPool pool = new StringPool();$/;"	f	class:MipsAsmEmitter	file:
pool	src/main/java/decaf/lowlevel/tac/StringPool.java	/^    private Vector<String> pool = new Vector<>();$/;"	f	class:StringPool	file:
pos	src/main/java/decaf/driver/error/DecafError.java	/^    public Pos pos;$/;"	f	class:DecafError
pos	src/main/java/decaf/frontend/parsing/SemValue.java	/^    Pos pos;$/;"	f	class:SemValue
pos	src/main/java/decaf/frontend/symbol/Symbol.java	/^    public final Pos pos;$/;"	f	class:Symbol
pos	src/main/java/decaf/frontend/tree/Tree.java	/^        public final Pos pos;$/;"	f	class:Tree.Id
pos	src/main/java/decaf/frontend/tree/Tree.java	/^        public final Pos pos;$/;"	f	class:Tree.Modifiers
pos	src/main/java/decaf/frontend/tree/TreeNode.java	/^    public final Pos pos;$/;"	f	class:TreeNode
pos2	src/main/java/decaf/frontend/parsing/SemValue.java	/^    Pos pos2;$/;"	f	class:SemValue
pretty	src/main/java/decaf/printing/PrettyCFG.java	/^    private void pretty(BasicBlock<I> bb) {$/;"	m	class:PrettyCFG	file:
pretty	src/main/java/decaf/printing/PrettyCFG.java	/^    public void pretty(CFG<I> graph) {$/;"	m	class:PrettyCFG
pretty	src/main/java/decaf/printing/PrettyPrinter.java	/^    public abstract void pretty(T t);$/;"	m	class:PrettyPrinter
pretty	src/main/java/decaf/printing/PrettyScope.java	/^    public void pretty(Scope scope) {$/;"	m	class:PrettyScope
pretty	src/main/java/decaf/printing/PrettyTree.java	/^    public void pretty(TreeNode node) {$/;"	m	class:PrettyTree
prettyElement	src/main/java/decaf/printing/PrettyTree.java	/^    private void prettyElement(Object element) {$/;"	m	class:PrettyTree	file:
prettyFormat	src/main/java/decaf/lowlevel/log/IndentPrinter.java	/^    public void prettyFormat(String fmt, Object... args) {$/;"	m	class:IndentPrinter
prettyFormatLn	src/main/java/decaf/lowlevel/log/IndentPrinter.java	/^    public void prettyFormatLn(String fmt, Object... args) {$/;"	m	class:IndentPrinter
prettyString	src/main/java/decaf/lowlevel/label/FuncLabel.java	/^    public String prettyString() {$/;"	m	class:FuncLabel
prettyString	src/main/java/decaf/lowlevel/label/Label.java	/^    public String prettyString() {$/;"	m	class:Label
prettyString	src/main/java/decaf/lowlevel/label/VTableLabel.java	/^    public String prettyString() {$/;"	m	class:VTableLabel
print	src/main/java/decaf/lowlevel/AsmCodePrinter.java	/^    public void print(String fmt, Object... args) {$/;"	m	class:AsmCodePrinter
print	src/main/java/decaf/lowlevel/log/IndentPrinter.java	/^    public void print(Object o) {$/;"	m	class:IndentPrinter
print	src/main/java/decaf/lowlevel/log/IndentPrinter.java	/^    public void print(String s) {$/;"	m	class:IndentPrinter
printComment	src/main/java/decaf/lowlevel/AsmCodePrinter.java	/^    public void printComment(String comment) {$/;"	m	class:AsmCodePrinter
printErrors	src/main/java/decaf/driver/ErrorIssuer.java	/^    default void printErrors(PrintStream to) {$/;"	m	interface:ErrorIssuer
printHelp	src/main/java/decaf/driver/OptParser.java	/^    public void printHelp() {$/;"	m	class:OptParser
printInstr	src/main/java/decaf/lowlevel/AsmCodePrinter.java	/^    public void printInstr(NativeInstr instr) {$/;"	m	class:AsmCodePrinter
printInstr	src/main/java/decaf/lowlevel/AsmCodePrinter.java	/^    public void printInstr(NativeInstr instr, String comment) {$/;"	m	class:AsmCodePrinter
printLabel	src/main/java/decaf/lowlevel/AsmCodePrinter.java	/^    public void printLabel(Label label) {$/;"	m	class:AsmCodePrinter
printLabel	src/main/java/decaf/lowlevel/AsmCodePrinter.java	/^    public void printLabel(Label label, String comment) {$/;"	m	class:AsmCodePrinter
printTo	src/main/java/decaf/lowlevel/tac/TacFunc.java	/^    public void printTo(PrintWriter pw) {$/;"	m	class:TacFunc
printTo	src/main/java/decaf/lowlevel/tac/TacProg.java	/^    public void printTo(PrintWriter pw) {$/;"	m	class:TacProg
printTo	src/main/java/decaf/lowlevel/tac/VTable.java	/^    public void printTo(PrintWriter pw) {$/;"	m	class:VTable
printer	src/main/java/decaf/backend/asm/AsmEmitter.java	/^    protected final AsmCodePrinter printer = new AsmCodePrinter();$/;"	f	class:AsmEmitter
printer	src/main/java/decaf/backend/asm/SubroutineEmitter.java	/^    protected AsmCodePrinter printer;$/;"	f	class:SubroutineEmitter
printer	src/main/java/decaf/printing/PrettyPrinter.java	/^    protected final IndentPrinter printer;$/;"	f	class:PrettyPrinter
println	src/main/java/decaf/lowlevel/AsmCodePrinter.java	/^    public void println() {$/;"	m	class:AsmCodePrinter
println	src/main/java/decaf/lowlevel/AsmCodePrinter.java	/^    public void println(String fmt, Object... args) {$/;"	m	class:AsmCodePrinter
println	src/main/java/decaf/lowlevel/log/IndentPrinter.java	/^    public void println() {$/;"	m	class:IndentPrinter
println	src/main/java/decaf/lowlevel/log/IndentPrinter.java	/^    public void println(Object o) {$/;"	m	class:IndentPrinter
println	src/main/java/decaf/lowlevel/log/IndentPrinter.java	/^    public void println(String s) {$/;"	m	class:IndentPrinter
publish	src/main/java/decaf/lowlevel/log/ColorConsoleHandler.java	/^    public void publish(LogRecord record) {$/;"	m	class:ColorConsoleHandler
putConstructorLabel	src/main/java/decaf/lowlevel/tac/ProgramWriter.java	/^        void putConstructorLabel(String clazz) {$/;"	m	class:ProgramWriter.Context
putFuncLabel	src/main/java/decaf/lowlevel/tac/ProgramWriter.java	/^        void putFuncLabel(String clazz, String method) {$/;"	m	class:ProgramWriter.Context
putOffsets	src/main/java/decaf/lowlevel/tac/ProgramWriter.java	/^        void putOffsets(VTable vtbl) {$/;"	m	class:ProgramWriter.Context
putVTable	src/main/java/decaf/lowlevel/tac/ProgramWriter.java	/^        void putVTable(VTable vtbl) {$/;"	m	class:ProgramWriter.Context
query	build/generated-src/ll1pg/LLTable.java	/^    public Map.Entry<Integer, List<Integer>> query(int nonTerminal, int lookahead) {$/;"	m	class:LLTable
quote	src/main/java/decaf/lowlevel/StringUtils.java	/^    public static String quote(String str) {$/;"	m	class:StringUtils
random	src/main/java/decaf/backend/reg/BruteRegAlloc.java	/^    private Random random = new Random();$/;"	f	class:BruteRegAlloc	file:
receiver	src/main/java/decaf/frontend/tree/Tree.java	/^        public Optional<Expr> receiver;$/;"	f	class:Tree.VarSel
ref	src/main/java/decaf/driver/error/RefNonStaticError.java	/^    private String ref;$/;"	f	class:RefNonStaticError	file:
regAlloc	src/main/java/decaf/backend/asm/Asm.java	/^    protected final RegAlloc regAlloc;$/;"	f	class:Asm
removeMethod	src/main/java/decaf/frontend/tree/Tree.java	/^        public void removeMethod(MethodDef methodDef){$/;"	m	class:Tree.ClassDef
resolved	src/main/java/decaf/frontend/tree/Tree.java	/^        public boolean resolved = false;$/;"	f	class:Tree.ClassDef
resultTypeOf	src/main/java/decaf/frontend/typecheck/Typer.java	/^    public Type resultTypeOf(Tree.BinaryOp op) {$/;"	m	class:Typer
resultTypeOf	src/main/java/decaf/frontend/typecheck/Typer.java	/^    public Type resultTypeOf(Tree.UnaryOp op) {$/;"	m	class:Typer
results	TestCases/testAll.py	/^    results = list(flatten([tester(test_set, exclude).test() for test_set in test_sets]))$/;"	v
retValDst	src/main/java/decaf/lowlevel/tac/Simulator.java	/^        Temp retValDst;$/;"	f	class:Simulator.Frame
returnType	src/main/java/decaf/frontend/tree/Tree.java	/^        public TypeLit returnType;$/;"	f	class:Tree.MethodDef
returnType	src/main/java/decaf/frontend/tree/Tree.java	/^        public TypeLit returnType;$/;"	f	class:Tree.TLambda
returnType	src/main/java/decaf/frontend/type/FunType.java	/^    public final Type returnType;$/;"	f	class:FunType
returnTypes	src/main/java/decaf/frontend/tree/Tree.java	/^        public ArrayList<Type> returnTypes = new ArrayList<>();$/;"	f	class:Tree.Stmt
returnWith	src/main/java/decaf/lowlevel/tac/Simulator.java	/^        private void returnWith(Optional<Integer> value) {$/;"	m	class:Simulator.InstrExecutor	file:
returns	src/main/java/decaf/frontend/tree/Tree.java	/^        public boolean returns = false;$/;"	f	class:Tree.Stmt
rhs	src/main/java/decaf/frontend/tree/Tree.java	/^        public Expr rhs;$/;"	f	class:Tree.Assign
rhs	src/main/java/decaf/frontend/tree/Tree.java	/^        public Expr rhs;$/;"	f	class:Tree.Binary
rhs	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public final Temp rhs;$/;"	f	class:TacInstr.Binary
right	src/main/java/decaf/driver/error/IncompatBinOpError.java	/^    private String right;$/;"	f	class:IncompatBinOpError	file:
run	TestCases/testAll.py	/^def run(cmd: [str], output_name: str = '', ignore_error: bool = False) -> bool:$/;"	f
run_decaf	TestCases/testAll.py	/^def run_decaf(args: [str]) -> bool:$/;"	f
run_jvm	TestCases/testAll.py	/^def run_jvm(bytecode_dir: str, output: str) -> bool:$/;"	f
run_spim	TestCases/testAll.py	/^def run_spim(asm_file: str, output: str) -> bool:$/;"	f
s	TestCases/testAll.py	/^    s = 'Summary: {} succeeded, {} failed'.format(succeeded, failed)$/;"	v
save	gradlew	/^save () {$/;"	f
save	src/main/java/decaf/backend/dataflow/CFGBuilder.java	/^    private void save(BasicBlock<I> bb) {$/;"	m	class:CFGBuilder	file:
sb	src/main/java/decaf/lowlevel/AsmCodePrinter.java	/^    private StringBuilder sb = new StringBuilder();$/;"	f	class:AsmCodePrinter	file:
scope	src/main/java/decaf/frontend/symbol/ClassSymbol.java	/^    public final ClassScope scope;$/;"	f	class:ClassSymbol
scope	src/main/java/decaf/frontend/symbol/LambdaSymbol.java	/^    public final LambdaScope scope;$/;"	f	class:LambdaSymbol
scope	src/main/java/decaf/frontend/symbol/MethodSymbol.java	/^    public final FormalScope scope;$/;"	f	class:MethodSymbol
scope	src/main/java/decaf/frontend/tree/Tree.java	/^        public LocalScope scope;$/;"	f	class:Tree.Block
scope	src/main/java/decaf/frontend/tree/Tree.java	/^        public LocalScope scope;$/;"	f	class:Tree.For
scopeStack	src/main/java/decaf/frontend/scope/ScopeStack.java	/^    private Stack<Scope> scopeStack = new Stack<>();$/;"	f	class:ScopeStack	file:
selectInstr	src/main/java/decaf/backend/asm/AsmEmitter.java	/^    public abstract Pair<List<PseudoInstr>, SubroutineInfo> selectInstr(TacFunc func);$/;"	m	class:AsmEmitter
selectInstr	src/main/java/decaf/backend/asm/mips/MipsAsmEmitter.java	/^    public Pair<List<PseudoInstr>, SubroutineInfo> selectInstr(TacFunc func) {$/;"	m	class:MipsAsmEmitter
semValue	src/main/java/decaf/frontend/parsing/AbstractParser.java	/^    protected SemValue semValue;$/;"	f	class:AbstractParser
seq	src/main/java/decaf/backend/asm/mips/MipsAsmEmitter.java	/^        List<PseudoInstr> seq = new ArrayList<>();$/;"	f	class:MipsAsmEmitter.MipsInstrSelector
setDomain	src/main/java/decaf/frontend/symbol/Symbol.java	/^    public void setDomain(Scope scope) {$/;"	m	class:Symbol
setMain	src/main/java/decaf/frontend/symbol/MethodSymbol.java	/^    public void setMain() {$/;"	m	class:MethodSymbol
setMainClass	src/main/java/decaf/frontend/symbol/ClassSymbol.java	/^    public void setMainClass() {$/;"	m	class:ClassSymbol
setNested	src/main/java/decaf/frontend/scope/FormalScope.java	/^    void setNested(LocalScope scope) {$/;"	m	class:FormalScope
setNested	src/main/java/decaf/frontend/scope/LambdaScope.java	/^    public void setNested(LocalScope scope){nested = scope;}$/;"	m	class:LambdaScope
setOwner	src/main/java/decaf/frontend/scope/ClassScope.java	/^    public void setOwner(ClassSymbol owner) {$/;"	m	class:ClassScope
setOwner	src/main/java/decaf/frontend/scope/FormalScope.java	/^    public void setOwner(MethodSymbol owner) {$/;"	m	class:FormalScope
setOwner	src/main/java/decaf/frontend/scope/LambdaScope.java	/^    public void setOwner(LambdaSymbol owner){$/;"	m	class:LambdaScope
setThis	src/main/java/decaf/frontend/tree/Tree.java	/^        public void setThis() {$/;"	m	class:Tree.Call
setThis	src/main/java/decaf/frontend/tree/Tree.java	/^        public void setThis() {$/;"	m	class:Tree.VarSel
setup	src/main/java/decaf/frontend/parsing/AbstractLexer.java	/^    void setup(P parser, ErrorIssuer issuer) {$/;"	m	class:AbstractLexer
setup	src/main/java/decaf/frontend/parsing/AbstractParser.java	/^    void setup(AbstractLexer lexer, ErrorIssuer issuer) {$/;"	m	class:AbstractParser
setup	src/main/java/decaf/lowlevel/log/Log.java	/^    public static void setup(Level level, boolean showColor, String... files) throws IOException/;"	m	class:Log
severe	src/main/java/decaf/lowlevel/log/Log.java	/^    public static void severe(String fmt, Object... args) {$/;"	m	class:Log
simpleFormatter	src/main/java/decaf/lowlevel/log/Log.java	/^    private static Formatter simpleFormatter = new Formatter() {$/;"	f	class:Log	file:
source	src/main/java/decaf/driver/Config.java	/^    public final FileInputStream source;$/;"	f	class:Config
sourcePath	src/main/java/decaf/driver/Config.java	/^    public final Path sourcePath;$/;"	f	class:Config
spaces	src/main/java/decaf/lowlevel/log/IndentPrinter.java	/^    private StringBuilder spaces = new StringBuilder();$/;"	f	class:IndentPrinter	file:
src	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public final Temp src;$/;"	f	class:TacInstr.Assign
srcs	src/main/java/decaf/lowlevel/instr/PseudoInstr.java	/^    public Temp[] srcs;$/;"	f	class:PseudoInstr
start	build/generated-src/ll1pg/LLTable.java	/^    public final int start = TopLevel;$/;"	f	class:LLTable
start	src/main/java/decaf/lowlevel/tac/Simulator.java	/^            public int start;$/;"	f	class:Simulator.Memory.Block
startPos	build/generated-src/jflex/DecafLexer.java	/^    private Pos startPos = null;$/;"	f	class:DecafLexer	file:
staticMethods	src/main/java/decaf/lowlevel/tac/ClassInfo.java	/^    public final Set<String> staticMethods;$/;"	f	class:ClassInfo
stk	src/main/java/decaf/frontend/typecheck/Typer.java	/^    private Stack<String> stk = new Stack<>();$/;"	f	class:Typer	file:
stmt	src/main/java/decaf/frontend/parsing/SemValue.java	/^    Tree.Stmt stmt;$/;"	f	class:SemValue
stmtList	src/main/java/decaf/frontend/parsing/SemValue.java	/^    List<Tree.Stmt> stmtList;$/;"	f	class:SemValue
stmts	src/main/java/decaf/frontend/tree/Tree.java	/^        public List<Stmt> stmts;$/;"	f	class:Tree.Block
store	src/main/java/decaf/lowlevel/tac/Simulator.java	/^        public void store(int value, int base, int offset) {$/;"	m	class:Simulator.Memory
str	src/main/java/decaf/backend/asm/HoleInstr.java	/^    private String str;$/;"	f	class:HoleInstr	file:
str	src/main/java/decaf/driver/error/NewlineInStrError.java	/^    private String str;$/;"	f	class:NewlineInStrError	file:
str	src/main/java/decaf/driver/error/UntermStrError.java	/^    private String str;$/;"	f	class:UntermStrError	file:
str	src/main/java/decaf/frontend/symbol/ClassSymbol.java	/^    protected String str() {$/;"	m	class:ClassSymbol
str	src/main/java/decaf/frontend/symbol/LambdaSymbol.java	/^    protected String str() {$/;"	m	class:LambdaSymbol
str	src/main/java/decaf/frontend/symbol/MethodSymbol.java	/^    protected String str() {$/;"	m	class:MethodSymbol
str	src/main/java/decaf/frontend/symbol/Symbol.java	/^    protected abstract String str();$/;"	m	class:Symbol
str	src/main/java/decaf/frontend/symbol/VarSymbol.java	/^    protected String str() {$/;"	m	class:VarSymbol
strVal	src/main/java/decaf/frontend/parsing/SemValue.java	/^    String strVal;$/;"	f	class:SemValue
stringConst	src/main/java/decaf/frontend/parsing/AbstractLexer.java	/^    protected int stringConst(String value, Pos pos) {$/;"	m	class:AbstractLexer
subtypeOf	src/main/java/decaf/frontend/type/ArrayType.java	/^    public boolean subtypeOf(Type that) {$/;"	m	class:ArrayType
subtypeOf	src/main/java/decaf/frontend/type/BuiltInType.java	/^    public boolean subtypeOf(Type that) {$/;"	m	class:BuiltInType
subtypeOf	src/main/java/decaf/frontend/type/ClassType.java	/^    public boolean subtypeOf(Type that) {$/;"	m	class:ClassType
subtypeOf	src/main/java/decaf/frontend/type/FunType.java	/^    public boolean subtypeOf(Type type) {$/;"	m	class:FunType
subtypeOf	src/main/java/decaf/frontend/type/Type.java	/^    public abstract boolean subtypeOf(Type that);$/;"	m	class:Type
succeeded	TestCases/testAll.py	/^    succeeded = results.count(True)$/;"	v
superClass	src/main/java/decaf/frontend/tree/Tree.java	/^        public ClassDef superClass;$/;"	f	class:Tree.ClassDef
superType	src/main/java/decaf/frontend/type/ClassType.java	/^    public final Optional<ClassType> superType;$/;"	f	class:ClassType
svBlock	src/main/java/decaf/frontend/parsing/AbstractParser.java	/^    protected SemValue svBlock(Tree.Block block) {$/;"	m	class:AbstractParser
svClass	src/main/java/decaf/frontend/parsing/AbstractParser.java	/^    protected SemValue svClass(Tree.ClassDef clazz) {$/;"	m	class:AbstractParser
svClasses	src/main/java/decaf/frontend/parsing/AbstractParser.java	/^    protected SemValue svClasses(Tree.ClassDef... classes) {$/;"	m	class:AbstractParser
svExpr	src/main/java/decaf/frontend/parsing/AbstractParser.java	/^    protected SemValue svExpr(Tree.Expr expr) {$/;"	m	class:AbstractParser
svExprs	src/main/java/decaf/frontend/parsing/AbstractParser.java	/^    protected SemValue svExprs(Tree.Expr... exprs) {$/;"	m	class:AbstractParser
svField	src/main/java/decaf/frontend/parsing/AbstractParser.java	/^    protected SemValue svField(Tree.Field field) {$/;"	m	class:AbstractParser
svFields	src/main/java/decaf/frontend/parsing/AbstractParser.java	/^    protected SemValue svFields(Tree.Field... fields) {$/;"	m	class:AbstractParser
svId	src/main/java/decaf/frontend/parsing/AbstractParser.java	/^    protected SemValue svId(Tree.Id id) {$/;"	m	class:AbstractParser
svLValue	src/main/java/decaf/frontend/parsing/AbstractParser.java	/^    protected SemValue svLValue(Tree.LValue lValue) {$/;"	m	class:AbstractParser
svStmt	src/main/java/decaf/frontend/parsing/AbstractParser.java	/^    protected SemValue svStmt(Tree.Stmt stmt) {$/;"	m	class:AbstractParser
svStmts	src/main/java/decaf/frontend/parsing/AbstractParser.java	/^    protected SemValue svStmts(Tree.Stmt... stmts) {$/;"	m	class:AbstractParser
svType	src/main/java/decaf/frontend/parsing/AbstractParser.java	/^    protected SemValue svType(Tree.TypeLit type) {$/;"	m	class:AbstractParser
svTypes	src/main/java/decaf/frontend/parsing/AbstractParser.java	/^    protected SemValue svTypes(Tree.TypeLit... types) {$/;"	m	class:AbstractParser
svVar	src/main/java/decaf/frontend/parsing/AbstractParser.java	/^    protected SemValue svVar(Tree.TypeLit type, Tree.Id id, Pos pos) {$/;"	m	class:AbstractParser
svVarLocal	src/main/java/decaf/frontend/parsing/AbstractParser.java	/^    protected SemValue svVarLocal(Tree.TypeLit type, Tree.Id id, Pos assignPos, Tree.Expr initVa/;"	m	class:AbstractParser
svVars	src/main/java/decaf/frontend/parsing/AbstractParser.java	/^    protected SemValue svVars(Tree.LocalVarDef... vars) {$/;"	m	class:AbstractParser
symbol	src/main/java/decaf/frontend/tree/Tree.java	/^        public ClassSymbol symbol;$/;"	f	class:Tree.ClassCast
symbol	src/main/java/decaf/frontend/tree/Tree.java	/^        public ClassSymbol symbol;$/;"	f	class:Tree.ClassDef
symbol	src/main/java/decaf/frontend/tree/Tree.java	/^        public ClassSymbol symbol;$/;"	f	class:Tree.ClassTest
symbol	src/main/java/decaf/frontend/tree/Tree.java	/^        public ClassSymbol symbol;$/;"	f	class:Tree.NewClass
symbol	src/main/java/decaf/frontend/tree/Tree.java	/^        public LambdaSymbol symbol;$/;"	f	class:Tree.Lambda
symbol	src/main/java/decaf/frontend/tree/Tree.java	/^        public MethodSymbol symbol;$/;"	f	class:Tree.MethodDef
symbol	src/main/java/decaf/frontend/tree/Tree.java	/^        public Symbol symbol;$/;"	f	class:Tree.Call
symbol	src/main/java/decaf/frontend/tree/Tree.java	/^        public Symbol symbol;$/;"	f	class:Tree.VarSel
symbol	src/main/java/decaf/frontend/tree/Tree.java	/^        public VarSymbol symbol;$/;"	f	class:Tree.LocalVarDef
symbol	src/main/java/decaf/frontend/tree/Tree.java	/^        public VarSymbol symbol;$/;"	f	class:Tree.VarDef
symbols	src/main/java/decaf/frontend/scope/Scope.java	/^    protected Map<String, Symbol> symbols = new TreeMap<>();$/;"	f	class:Scope
tacGen	src/main/java/decaf/driver/TaskFactory.java	/^    public Task<InputStream, TacProg> tacGen() {$/;"	m	class:TaskFactory
target	src/main/java/decaf/driver/Config.java	/^    public final Target target;$/;"	f	class:Config
target	src/main/java/decaf/driver/OptParser.java	/^    final Option target = Option$/;"	f	class:OptParser
target	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public final Label target;$/;"	f	class:TacInstr.Branch
target	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public final Label target;$/;"	f	class:TacInstr.CondBranch
temp	src/main/java/decaf/frontend/symbol/MethodSymbol.java	/^    public Temp temp;$/;"	f	class:MethodSymbol
temp	src/main/java/decaf/frontend/symbol/VarSymbol.java	/^    public Temp temp;$/;"	f	class:VarSymbol
temp	src/main/java/decaf/lowlevel/instr/Reg.java	/^    public Temp temp;$/;"	f	class:Reg
tempUsed	src/main/java/decaf/lowlevel/tac/TacFunc.java	/^    int tempUsed;$/;"	f	class:TacFunc
test	TestCases/testAll.py	/^    def test(self) -> [bool]:$/;"	m	class:Tester
test_one	TestCases/testAll.py	/^    def test_one(self, test_case_name: str) -> bool:$/;"	m	class:JVMTester
test_one	TestCases/testAll.py	/^    def test_one(self, test_case_name: str) -> bool:$/;"	m	class:MipsTester
test_one	TestCases/testAll.py	/^    def test_one(self, test_case_name: str) -> bool:$/;"	m	class:PATester
test_one	TestCases/testAll.py	/^    def test_one(self, test_case_name: str) -> bool:$/;"	m	class:Tester
then	src/main/java/decaf/driver/Task.java	/^    default <V> Task<T, V> then(Task<R, V> next) {$/;"	m	interface:Task
thisVar	src/main/java/decaf/frontend/symbol/VarSymbol.java	/^    public static VarSymbol thisVar(ClassType type, Pos pos) {$/;"	m	class:VarSymbol
thunkList	src/main/java/decaf/frontend/parsing/SemValue.java	/^    List<SemValue> thunkList;$/;"	f	class:SemValue
to	src/main/java/decaf/frontend/tree/Tree.java	/^        public Id to;$/;"	f	class:Tree.ClassCast
toNative	src/main/java/decaf/lowlevel/instr/PseudoInstr.java	/^    public NativeInstr toNative(Reg[] dstRegs, Reg[] srcRegs) {$/;"	m	class:PseudoInstr
toString	src/main/java/decaf/backend/asm/HoleInstr.java	/^    public String toString() {$/;"	m	class:HoleInstr
toString	src/main/java/decaf/driver/error/DecafError.java	/^    public String toString() {$/;"	m	class:DecafError
toString	src/main/java/decaf/frontend/parsing/SemValue.java	/^    public String toString() {$/;"	m	class:SemValue
toString	src/main/java/decaf/frontend/symbol/Symbol.java	/^    public String toString() {$/;"	m	class:Symbol
toString	src/main/java/decaf/frontend/tree/Pos.java	/^    public String toString() {$/;"	m	class:Pos
toString	src/main/java/decaf/frontend/tree/Tree.java	/^        public String toString() {$/;"	m	class:Tree.Id
toString	src/main/java/decaf/frontend/tree/Tree.java	/^        public String toString() {$/;"	m	class:Tree.Modifiers
toString	src/main/java/decaf/frontend/tree/TreeNode.java	/^    public String toString() {$/;"	m	class:TreeNode
toString	src/main/java/decaf/frontend/type/ArrayType.java	/^    public String toString() {$/;"	m	class:ArrayType
toString	src/main/java/decaf/frontend/type/BuiltInType.java	/^    public String toString() {$/;"	m	class:BuiltInType
toString	src/main/java/decaf/frontend/type/ClassType.java	/^    public String toString() {$/;"	m	class:ClassType
toString	src/main/java/decaf/frontend/type/FunType.java	/^    public String toString() {$/;"	m	class:FunType
toString	src/main/java/decaf/frontend/type/Type.java	/^    public abstract String toString();$/;"	m	class:Type
toString	src/main/java/decaf/lowlevel/Mips.java	/^        public String toString() {$/;"	m	class:Mips.Binary
toString	src/main/java/decaf/lowlevel/Mips.java	/^        public String toString() {$/;"	m	class:Mips.Branch
toString	src/main/java/decaf/lowlevel/Mips.java	/^        public String toString() {$/;"	m	class:Mips.Jump
toString	src/main/java/decaf/lowlevel/Mips.java	/^        public String toString() {$/;"	m	class:Mips.JumpAndLink
toString	src/main/java/decaf/lowlevel/Mips.java	/^        public String toString() {$/;"	m	class:Mips.JumpAndLinkReg
toString	src/main/java/decaf/lowlevel/Mips.java	/^        public String toString() {$/;"	m	class:Mips.JumpToEpilogue
toString	src/main/java/decaf/lowlevel/Mips.java	/^        public String toString() {$/;"	m	class:Mips.LoadAddr
toString	src/main/java/decaf/lowlevel/Mips.java	/^        public String toString() {$/;"	m	class:Mips.LoadImm
toString	src/main/java/decaf/lowlevel/Mips.java	/^        public String toString() {$/;"	m	class:Mips.LoadWord
toString	src/main/java/decaf/lowlevel/Mips.java	/^        public String toString() {$/;"	m	class:Mips.MipsLabel
toString	src/main/java/decaf/lowlevel/Mips.java	/^        public String toString() {$/;"	m	class:Mips.Move
toString	src/main/java/decaf/lowlevel/Mips.java	/^        public String toString() {$/;"	m	class:Mips.NativeLoadWord
toString	src/main/java/decaf/lowlevel/Mips.java	/^        public String toString() {$/;"	m	class:Mips.NativeMove
toString	src/main/java/decaf/lowlevel/Mips.java	/^        public String toString() {$/;"	m	class:Mips.NativeReturn
toString	src/main/java/decaf/lowlevel/Mips.java	/^        public String toString() {$/;"	m	class:Mips.NativeStoreWord
toString	src/main/java/decaf/lowlevel/Mips.java	/^        public String toString() {$/;"	m	class:Mips.SPAdd
toString	src/main/java/decaf/lowlevel/Mips.java	/^        public String toString() {$/;"	m	class:Mips.StoreWord
toString	src/main/java/decaf/lowlevel/Mips.java	/^        public String toString() {$/;"	m	class:Mips.Syscall
toString	src/main/java/decaf/lowlevel/Mips.java	/^        public String toString() {$/;"	m	class:Mips.Unary
toString	src/main/java/decaf/lowlevel/instr/PseudoInstr.java	/^    public abstract String toString();$/;"	m	class:PseudoInstr
toString	src/main/java/decaf/lowlevel/instr/Reg.java	/^    public String toString() {$/;"	m	class:Reg
toString	src/main/java/decaf/lowlevel/instr/Temp.java	/^    public String toString() {$/;"	m	class:Temp
toString	src/main/java/decaf/lowlevel/label/Label.java	/^    public String toString() {$/;"	m	class:Label
toString	src/main/java/decaf/lowlevel/tac/Intrinsic.java	/^    public String toString() {$/;"	m	class:Intrinsic
toString	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public String toString() {$/;"	m	class:TacInstr.Assign
toString	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public String toString() {$/;"	m	class:TacInstr.Binary
toString	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public String toString() {$/;"	m	class:TacInstr.Branch
toString	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public String toString() {$/;"	m	class:TacInstr.CondBranch
toString	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public String toString() {$/;"	m	class:TacInstr.DirectCall
toString	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public String toString() {$/;"	m	class:TacInstr.IndirectCall
toString	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public String toString() {$/;"	m	class:TacInstr.LoadImm4
toString	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public String toString() {$/;"	m	class:TacInstr.LoadStrConst
toString	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public String toString() {$/;"	m	class:TacInstr.LoadVTbl
toString	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public String toString() {$/;"	m	class:TacInstr.Mark
toString	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public String toString() {$/;"	m	class:TacInstr.Memo
toString	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public String toString() {$/;"	m	class:TacInstr.Memory
toString	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public String toString() {$/;"	m	class:TacInstr.Parm
toString	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public String toString() {$/;"	m	class:TacInstr.Return
toString	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public String toString() {$/;"	m	class:TacInstr.Unary
token	src/main/java/decaf/frontend/parsing/AbstractParser.java	/^    protected int token;$/;"	f	class:AbstractParser
tokenOf	src/main/java/decaf/frontend/parsing/AbstractParser.java	/^    public abstract int tokenOf(int code);$/;"	m	class:AbstractParser
tokenOf	src/main/java/decaf/frontend/parsing/JaccParser.java	/^        public int tokenOf(int code) {$/;"	m	class:JaccParser.BaseParser
transform	src/main/java/decaf/backend/asm/Asm.java	/^    public String transform(TacProg prog) {$/;"	m	class:Asm
transform	src/main/java/decaf/backend/opt/Optimizer.java	/^    public TacProg transform(TacProg input) {$/;"	m	class:Optimizer
transform	src/main/java/decaf/driver/Phase.java	/^    public abstract Out transform(In input);$/;"	m	class:Phase
transform	src/main/java/decaf/frontend/parsing/JaccParser.java	/^    public Tree.TopLevel transform(InputStream input) {$/;"	m	class:JaccParser
transform	src/main/java/decaf/frontend/tacgen/TacGen.java	/^    public TacProg transform(Tree.TopLevel tree) {$/;"	m	class:TacGen
transform	src/main/java/decaf/frontend/typecheck/Namer.java	/^    public Tree.TopLevel transform(Tree.TopLevel tree) {$/;"	m	class:Namer
transform	src/main/java/decaf/frontend/typecheck/Typer.java	/^    public Tree.TopLevel transform(Tree.TopLevel tree) {$/;"	m	class:Typer
tree	src/main/java/decaf/frontend/parsing/AbstractParser.java	/^    Tree.TopLevel tree;$/;"	f	class:AbstractParser
treeArity	src/main/java/decaf/frontend/tree/Tree.java	/^        public int treeArity() {$/;"	m	class:Tree.Assign
treeArity	src/main/java/decaf/frontend/tree/Tree.java	/^        public int treeArity() {$/;"	m	class:Tree.Binary
treeArity	src/main/java/decaf/frontend/tree/Tree.java	/^        public int treeArity() {$/;"	m	class:Tree.Block
treeArity	src/main/java/decaf/frontend/tree/Tree.java	/^        public int treeArity() {$/;"	m	class:Tree.BoolLit
treeArity	src/main/java/decaf/frontend/tree/Tree.java	/^        public int treeArity() {$/;"	m	class:Tree.Break
treeArity	src/main/java/decaf/frontend/tree/Tree.java	/^        public int treeArity() {$/;"	m	class:Tree.ClassCast
treeArity	src/main/java/decaf/frontend/tree/Tree.java	/^        public int treeArity() {$/;"	m	class:Tree.ClassDef
treeArity	src/main/java/decaf/frontend/tree/Tree.java	/^        public int treeArity() {$/;"	m	class:Tree.ClassTest
treeArity	src/main/java/decaf/frontend/tree/Tree.java	/^        public int treeArity() {$/;"	m	class:Tree.ExprEval
treeArity	src/main/java/decaf/frontend/tree/Tree.java	/^        public int treeArity() {$/;"	m	class:Tree.For
treeArity	src/main/java/decaf/frontend/tree/Tree.java	/^        public int treeArity() {$/;"	m	class:Tree.If
treeArity	src/main/java/decaf/frontend/tree/Tree.java	/^        public int treeArity() {$/;"	m	class:Tree.IndexSel
treeArity	src/main/java/decaf/frontend/tree/Tree.java	/^        public int treeArity() {$/;"	m	class:Tree.IntLit
treeArity	src/main/java/decaf/frontend/tree/Tree.java	/^        public int treeArity() {$/;"	m	class:Tree.Lambda
treeArity	src/main/java/decaf/frontend/tree/Tree.java	/^        public int treeArity() {$/;"	m	class:Tree.LocalVarDef
treeArity	src/main/java/decaf/frontend/tree/Tree.java	/^        public int treeArity() {$/;"	m	class:Tree.MethodDef
treeArity	src/main/java/decaf/frontend/tree/Tree.java	/^        public int treeArity() {$/;"	m	class:Tree.NewArray
treeArity	src/main/java/decaf/frontend/tree/Tree.java	/^        public int treeArity() {$/;"	m	class:Tree.NewClass
treeArity	src/main/java/decaf/frontend/tree/Tree.java	/^        public int treeArity() {$/;"	m	class:Tree.NullLit
treeArity	src/main/java/decaf/frontend/tree/Tree.java	/^        public int treeArity() {$/;"	m	class:Tree.Print
treeArity	src/main/java/decaf/frontend/tree/Tree.java	/^        public int treeArity() {$/;"	m	class:Tree.ReadInt
treeArity	src/main/java/decaf/frontend/tree/Tree.java	/^        public int treeArity() {$/;"	m	class:Tree.ReadLine
treeArity	src/main/java/decaf/frontend/tree/Tree.java	/^        public int treeArity() {$/;"	m	class:Tree.Return
treeArity	src/main/java/decaf/frontend/tree/Tree.java	/^        public int treeArity() {$/;"	m	class:Tree.Skip
treeArity	src/main/java/decaf/frontend/tree/Tree.java	/^        public int treeArity() {$/;"	m	class:Tree.StringLit
treeArity	src/main/java/decaf/frontend/tree/Tree.java	/^        public int treeArity() {$/;"	m	class:Tree.TArray
treeArity	src/main/java/decaf/frontend/tree/Tree.java	/^        public int treeArity() {$/;"	m	class:Tree.TBool
treeArity	src/main/java/decaf/frontend/tree/Tree.java	/^        public int treeArity() {$/;"	m	class:Tree.TClass
treeArity	src/main/java/decaf/frontend/tree/Tree.java	/^        public int treeArity() {$/;"	m	class:Tree.TInt
treeArity	src/main/java/decaf/frontend/tree/Tree.java	/^        public int treeArity() {$/;"	m	class:Tree.TLambda
treeArity	src/main/java/decaf/frontend/tree/Tree.java	/^        public int treeArity() {$/;"	m	class:Tree.TString
treeArity	src/main/java/decaf/frontend/tree/Tree.java	/^        public int treeArity() {$/;"	m	class:Tree.TVoid
treeArity	src/main/java/decaf/frontend/tree/Tree.java	/^        public int treeArity() {$/;"	m	class:Tree.This
treeArity	src/main/java/decaf/frontend/tree/Tree.java	/^        public int treeArity() {$/;"	m	class:Tree.TopLevel
treeArity	src/main/java/decaf/frontend/tree/Tree.java	/^        public int treeArity() {$/;"	m	class:Tree.Unary
treeArity	src/main/java/decaf/frontend/tree/Tree.java	/^        public int treeArity() {$/;"	m	class:Tree.VarDef
treeArity	src/main/java/decaf/frontend/tree/Tree.java	/^        public int treeArity() {$/;"	m	class:Tree.VarSel
treeArity	src/main/java/decaf/frontend/tree/Tree.java	/^        public int treeArity() {$/;"	m	class:Tree.While
treeArity	src/main/java/decaf/frontend/tree/Tree.java	/^        public int treeArity()$/;"	m	class:Tree.Call
treeArity	src/main/java/decaf/frontend/tree/TreeNode.java	/^    public abstract int treeArity();$/;"	m	class:TreeNode
treeElementAt	src/main/java/decaf/frontend/tree/Tree.java	/^        public Object treeElementAt(int index) {$/;"	m	class:Tree.Assign
treeElementAt	src/main/java/decaf/frontend/tree/Tree.java	/^        public Object treeElementAt(int index) {$/;"	m	class:Tree.Binary
treeElementAt	src/main/java/decaf/frontend/tree/Tree.java	/^        public Object treeElementAt(int index) {$/;"	m	class:Tree.Block
treeElementAt	src/main/java/decaf/frontend/tree/Tree.java	/^        public Object treeElementAt(int index) {$/;"	m	class:Tree.BoolLit
treeElementAt	src/main/java/decaf/frontend/tree/Tree.java	/^        public Object treeElementAt(int index) {$/;"	m	class:Tree.Break
treeElementAt	src/main/java/decaf/frontend/tree/Tree.java	/^        public Object treeElementAt(int index) {$/;"	m	class:Tree.Call
treeElementAt	src/main/java/decaf/frontend/tree/Tree.java	/^        public Object treeElementAt(int index) {$/;"	m	class:Tree.ClassCast
treeElementAt	src/main/java/decaf/frontend/tree/Tree.java	/^        public Object treeElementAt(int index) {$/;"	m	class:Tree.ClassDef
treeElementAt	src/main/java/decaf/frontend/tree/Tree.java	/^        public Object treeElementAt(int index) {$/;"	m	class:Tree.ClassTest
treeElementAt	src/main/java/decaf/frontend/tree/Tree.java	/^        public Object treeElementAt(int index) {$/;"	m	class:Tree.ExprEval
treeElementAt	src/main/java/decaf/frontend/tree/Tree.java	/^        public Object treeElementAt(int index) {$/;"	m	class:Tree.For
treeElementAt	src/main/java/decaf/frontend/tree/Tree.java	/^        public Object treeElementAt(int index) {$/;"	m	class:Tree.If
treeElementAt	src/main/java/decaf/frontend/tree/Tree.java	/^        public Object treeElementAt(int index) {$/;"	m	class:Tree.IndexSel
treeElementAt	src/main/java/decaf/frontend/tree/Tree.java	/^        public Object treeElementAt(int index) {$/;"	m	class:Tree.IntLit
treeElementAt	src/main/java/decaf/frontend/tree/Tree.java	/^        public Object treeElementAt(int index) {$/;"	m	class:Tree.Lambda
treeElementAt	src/main/java/decaf/frontend/tree/Tree.java	/^        public Object treeElementAt(int index) {$/;"	m	class:Tree.LocalVarDef
treeElementAt	src/main/java/decaf/frontend/tree/Tree.java	/^        public Object treeElementAt(int index) {$/;"	m	class:Tree.MethodDef
treeElementAt	src/main/java/decaf/frontend/tree/Tree.java	/^        public Object treeElementAt(int index) {$/;"	m	class:Tree.NewArray
treeElementAt	src/main/java/decaf/frontend/tree/Tree.java	/^        public Object treeElementAt(int index) {$/;"	m	class:Tree.NewClass
treeElementAt	src/main/java/decaf/frontend/tree/Tree.java	/^        public Object treeElementAt(int index) {$/;"	m	class:Tree.NullLit
treeElementAt	src/main/java/decaf/frontend/tree/Tree.java	/^        public Object treeElementAt(int index) {$/;"	m	class:Tree.Print
treeElementAt	src/main/java/decaf/frontend/tree/Tree.java	/^        public Object treeElementAt(int index) {$/;"	m	class:Tree.ReadInt
treeElementAt	src/main/java/decaf/frontend/tree/Tree.java	/^        public Object treeElementAt(int index) {$/;"	m	class:Tree.ReadLine
treeElementAt	src/main/java/decaf/frontend/tree/Tree.java	/^        public Object treeElementAt(int index) {$/;"	m	class:Tree.Return
treeElementAt	src/main/java/decaf/frontend/tree/Tree.java	/^        public Object treeElementAt(int index) {$/;"	m	class:Tree.Skip
treeElementAt	src/main/java/decaf/frontend/tree/Tree.java	/^        public Object treeElementAt(int index) {$/;"	m	class:Tree.StringLit
treeElementAt	src/main/java/decaf/frontend/tree/Tree.java	/^        public Object treeElementAt(int index) {$/;"	m	class:Tree.TArray
treeElementAt	src/main/java/decaf/frontend/tree/Tree.java	/^        public Object treeElementAt(int index) {$/;"	m	class:Tree.TBool
treeElementAt	src/main/java/decaf/frontend/tree/Tree.java	/^        public Object treeElementAt(int index) {$/;"	m	class:Tree.TClass
treeElementAt	src/main/java/decaf/frontend/tree/Tree.java	/^        public Object treeElementAt(int index) {$/;"	m	class:Tree.TInt
treeElementAt	src/main/java/decaf/frontend/tree/Tree.java	/^        public Object treeElementAt(int index) {$/;"	m	class:Tree.TLambda
treeElementAt	src/main/java/decaf/frontend/tree/Tree.java	/^        public Object treeElementAt(int index) {$/;"	m	class:Tree.TString
treeElementAt	src/main/java/decaf/frontend/tree/Tree.java	/^        public Object treeElementAt(int index) {$/;"	m	class:Tree.TVoid
treeElementAt	src/main/java/decaf/frontend/tree/Tree.java	/^        public Object treeElementAt(int index) {$/;"	m	class:Tree.This
treeElementAt	src/main/java/decaf/frontend/tree/Tree.java	/^        public Object treeElementAt(int index) {$/;"	m	class:Tree.TopLevel
treeElementAt	src/main/java/decaf/frontend/tree/Tree.java	/^        public Object treeElementAt(int index) {$/;"	m	class:Tree.Unary
treeElementAt	src/main/java/decaf/frontend/tree/Tree.java	/^        public Object treeElementAt(int index) {$/;"	m	class:Tree.VarDef
treeElementAt	src/main/java/decaf/frontend/tree/Tree.java	/^        public Object treeElementAt(int index) {$/;"	m	class:Tree.VarSel
treeElementAt	src/main/java/decaf/frontend/tree/Tree.java	/^        public Object treeElementAt(int index) {$/;"	m	class:Tree.While
treeElementAt	src/main/java/decaf/frontend/tree/TreeNode.java	/^    public abstract Object treeElementAt(int index);$/;"	m	class:TreeNode
trueBranch	src/main/java/decaf/frontend/tree/Tree.java	/^        public Block trueBranch;$/;"	f	class:Tree.If
type	src/main/java/decaf/driver/error/BadPrintArgError.java	/^    private String type;$/;"	f	class:BadPrintArgError	file:
type	src/main/java/decaf/driver/error/NotCallableTypeError.java	/^    String type;$/;"	f	class:NotCallableTypeError
type	src/main/java/decaf/driver/error/NotClassError.java	/^    private String type;$/;"	f	class:NotClassError	file:
type	src/main/java/decaf/frontend/parsing/SemValue.java	/^    Tree.TypeLit type;$/;"	f	class:SemValue
type	src/main/java/decaf/frontend/symbol/ClassSymbol.java	/^    public final ClassType type;$/;"	f	class:ClassSymbol
type	src/main/java/decaf/frontend/symbol/LambdaSymbol.java	/^    public final FunType type;$/;"	f	class:LambdaSymbol
type	src/main/java/decaf/frontend/symbol/MethodSymbol.java	/^    public final FunType type;$/;"	f	class:MethodSymbol
type	src/main/java/decaf/frontend/symbol/Symbol.java	/^    public final Type type;$/;"	f	class:Symbol
type	src/main/java/decaf/frontend/tree/Tree.java	/^        public FunType type;$/;"	f	class:Tree.MethodDef
type	src/main/java/decaf/frontend/tree/Tree.java	/^        public Type type;$/;"	f	class:Tree.Block
type	src/main/java/decaf/frontend/tree/Tree.java	/^        public Type type;$/;"	f	class:Tree.Expr
type	src/main/java/decaf/frontend/tree/Tree.java	/^        public Type type;$/;"	f	class:Tree.TypeLit
typeBound	src/main/java/decaf/frontend/typecheck/Typer.java	/^    public Type typeBound(List<Type> typeList, Pos pos, Boolean isUpper){$/;"	m	class:Typer
typeCall	src/main/java/decaf/frontend/typecheck/Typer.java	/^    private void typeCall(Tree.Call call, FunType type, ScopeStack ctx){$/;"	m	class:Typer	file:
typeCheck	src/main/java/decaf/driver/TaskFactory.java	/^    public Task<InputStream, Tree.TopLevel> typeCheck() {$/;"	m	class:TaskFactory
typeLambda	src/main/java/decaf/frontend/typecheck/Typer.java	/^    private void typeLambda(Tree.Lambda lambda, ScopeStack ctx, LambdaScope lambdaScope){$/;"	m	class:Typer	file:
typeList	src/main/java/decaf/frontend/parsing/SemValue.java	/^    List<Tree.TypeLit> typeList;$/;"	f	class:SemValue
typeLit	src/main/java/decaf/frontend/tree/Tree.java	/^        public Optional<TypeLit> typeLit;$/;"	f	class:Tree.LocalVarDef
typeLit	src/main/java/decaf/frontend/tree/Tree.java	/^        public TypeLit typeLit;$/;"	f	class:Tree.VarDef
typeMethod	src/main/java/decaf/frontend/typecheck/Namer.java	/^    private void typeMethod(Tree.MethodDef method, ScopeStack ctx, FormalScope formal) {$/;"	m	class:Namer	file:
unbind	src/main/java/decaf/backend/reg/BruteRegAlloc.java	/^    private void unbind(Temp temp) {$/;"	m	class:BruteRegAlloc	file:
update	src/main/java/decaf/frontend/tree/Tree.java	/^        public Stmt update; \/\/ In syntax, this is limited to a simple statement.$/;"	f	class:Tree.For
used	src/main/java/decaf/lowlevel/instr/Reg.java	/^    public boolean used = false;$/;"	f	class:Reg
usedIntrinsics	src/main/java/decaf/backend/asm/mips/MipsAsmEmitter.java	/^    private Set<IntrinsicLabel> usedIntrinsics = new TreeSet<>();$/;"	f	class:MipsAsmEmitter	file:
val	src/main/java/decaf/driver/error/IntTooLargeError.java	/^    private String val;$/;"	f	class:IntTooLargeError	file:
val	src/main/java/decaf/frontend/tree/Tree.java	/^        public Temp val;$/;"	f	class:Tree.Expr
value	src/main/java/decaf/frontend/tree/Tree.java	/^        public String value; \/\/ the quoted string$/;"	f	class:Tree.StringLit
value	src/main/java/decaf/frontend/tree/Tree.java	/^        public boolean value;$/;"	f	class:Tree.BoolLit
value	src/main/java/decaf/frontend/tree/Tree.java	/^        public final Object value = null;$/;"	f	class:Tree.NullLit
value	src/main/java/decaf/frontend/tree/Tree.java	/^        public int value;$/;"	f	class:Tree.IntLit
value	src/main/java/decaf/lowlevel/Mips.java	/^        private int value;$/;"	f	class:Mips.LoadImm	file:
value	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public final Optional<Temp> value;$/;"	f	class:TacInstr.Return
value	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public final String value;$/;"	f	class:TacInstr.LoadStrConst
value	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public final Temp value;$/;"	f	class:TacInstr.Parm
value	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public final int value;$/;"	f	class:TacInstr.LoadImm4
varList	src/main/java/decaf/frontend/parsing/SemValue.java	/^    List<Tree.LocalVarDef> varList; \/\/ a list can only contain local vars$/;"	f	class:SemValue
varList	src/main/java/decaf/frontend/tree/Tree.java	/^        public List<LocalVarDef> varList;$/;"	f	class:Tree.Lambda
variable	src/main/java/decaf/frontend/tree/Tree.java	/^        public Id variable;$/;"	f	class:Tree.VarSel
visitAssign	src/main/java/decaf/backend/asm/mips/MipsAsmEmitter.java	/^        public void visitAssign(TacInstr.Assign instr) {$/;"	m	class:MipsAsmEmitter.MipsInstrSelector
visitAssign	src/main/java/decaf/frontend/tacgen/TacEmitter.java	/^    default void visitAssign(Tree.Assign assign, FuncVisitor mv) {$/;"	m	interface:TacEmitter
visitAssign	src/main/java/decaf/frontend/tree/Visitor.java	/^    default void visitAssign(Tree.Assign that, C ctx) {$/;"	m	interface:Visitor
visitAssign	src/main/java/decaf/frontend/typecheck/Namer.java	/^    public void visitAssign(Tree.Assign assign, ScopeStack ctx){$/;"	m	class:Namer
visitAssign	src/main/java/decaf/frontend/typecheck/Typer.java	/^    public void visitAssign(Tree.Assign stmt, ScopeStack ctx) {$/;"	m	class:Typer
visitAssign	src/main/java/decaf/lowlevel/tac/FuncVisitor.java	/^    public void visitAssign(Temp dst, Temp src) {$/;"	m	class:FuncVisitor
visitAssign	src/main/java/decaf/lowlevel/tac/Simulator.java	/^        public void visitAssign(TacInstr.Assign instr) {$/;"	m	class:Simulator.InstrExecutor
visitAssign	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        default void visitAssign(Assign instr) {$/;"	m	interface:TacInstr.Visitor
visitBinary	src/main/java/decaf/backend/asm/mips/MipsAsmEmitter.java	/^        public void visitBinary(TacInstr.Binary instr) {$/;"	m	class:MipsAsmEmitter.MipsInstrSelector
visitBinary	src/main/java/decaf/frontend/tacgen/TacEmitter.java	/^    default void visitBinary(Tree.Binary expr, FuncVisitor mv) {$/;"	m	interface:TacEmitter
visitBinary	src/main/java/decaf/frontend/tree/Visitor.java	/^    default void visitBinary(Tree.Binary that, C ctx) {$/;"	m	interface:Visitor
visitBinary	src/main/java/decaf/frontend/typecheck/Namer.java	/^    public void visitBinary(Tree.Binary expr, ScopeStack ctx) {$/;"	m	class:Namer
visitBinary	src/main/java/decaf/frontend/typecheck/Typer.java	/^    public void visitBinary(Tree.Binary expr, ScopeStack ctx) {$/;"	m	class:Typer
visitBinary	src/main/java/decaf/lowlevel/tac/FuncVisitor.java	/^    public Temp visitBinary(TacInstr.Binary.Op op, Temp lhs, Temp rhs) {$/;"	m	class:FuncVisitor
visitBinary	src/main/java/decaf/lowlevel/tac/Simulator.java	/^        public void visitBinary(TacInstr.Binary instr) {$/;"	m	class:Simulator.InstrExecutor
visitBinary	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        default void visitBinary(Binary instr) {$/;"	m	interface:TacInstr.Visitor
visitBinarySelf	src/main/java/decaf/lowlevel/tac/FuncVisitor.java	/^    public void visitBinarySelf(TacInstr.Binary.Op op, Temp self, Temp operand) {$/;"	m	class:FuncVisitor
visitBlock	src/main/java/decaf/frontend/tacgen/TacEmitter.java	/^    default void visitBlock(Tree.Block block, FuncVisitor mv) {$/;"	m	interface:TacEmitter
visitBlock	src/main/java/decaf/frontend/tree/Visitor.java	/^    default void visitBlock(Tree.Block that, C ctx) {$/;"	m	interface:Visitor
visitBlock	src/main/java/decaf/frontend/typecheck/Namer.java	/^    public void visitBlock(Tree.Block block, ScopeStack ctx) {$/;"	m	class:Namer
visitBlock	src/main/java/decaf/frontend/typecheck/Typer.java	/^    public void visitBlock(Tree.Block block, ScopeStack ctx) {$/;"	m	class:Typer
visitBoolLit	src/main/java/decaf/frontend/tacgen/TacEmitter.java	/^    default void visitBoolLit(Tree.BoolLit expr, FuncVisitor mv) {$/;"	m	interface:TacEmitter
visitBoolLit	src/main/java/decaf/frontend/tree/Visitor.java	/^    default void visitBoolLit(Tree.BoolLit that, C ctx) {$/;"	m	interface:Visitor
visitBoolLit	src/main/java/decaf/frontend/typecheck/Typer.java	/^    public void visitBoolLit(Tree.BoolLit that, ScopeStack ctx) {$/;"	m	class:Typer
visitBranch	src/main/java/decaf/backend/asm/mips/MipsAsmEmitter.java	/^        public void visitBranch(TacInstr.Branch instr) {$/;"	m	class:MipsAsmEmitter.MipsInstrSelector
visitBranch	src/main/java/decaf/lowlevel/tac/FuncVisitor.java	/^    public void visitBranch(Label target) {$/;"	m	class:FuncVisitor
visitBranch	src/main/java/decaf/lowlevel/tac/FuncVisitor.java	/^    public void visitBranch(TacInstr.CondBranch.Op op, Temp cond, Label target) {$/;"	m	class:FuncVisitor
visitBranch	src/main/java/decaf/lowlevel/tac/Simulator.java	/^        public void visitBranch(TacInstr.Branch instr) {$/;"	m	class:Simulator.InstrExecutor
visitBranch	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        default void visitBranch(Branch instr) {$/;"	m	interface:TacInstr.Visitor
visitBreak	src/main/java/decaf/frontend/tacgen/TacEmitter.java	/^    default void visitBreak(Tree.Break stmt, FuncVisitor mv) {$/;"	m	interface:TacEmitter
visitBreak	src/main/java/decaf/frontend/tree/Visitor.java	/^    default void visitBreak(Tree.Break that, C ctx) {$/;"	m	interface:Visitor
visitBreak	src/main/java/decaf/frontend/typecheck/Typer.java	/^    public void visitBreak(Tree.Break stmt, ScopeStack ctx) {$/;"	m	class:Typer
visitCall	src/main/java/decaf/frontend/tacgen/TacEmitter.java	/^    default void visitCall(Tree.Call expr, FuncVisitor mv) {$/;"	m	interface:TacEmitter
visitCall	src/main/java/decaf/frontend/tree/Visitor.java	/^    default void visitCall(Tree.Call that, C ctx) {$/;"	m	interface:Visitor
visitCall	src/main/java/decaf/frontend/typecheck/Namer.java	/^    public void visitCall(Tree.Call call, ScopeStack ctx){$/;"	m	class:Namer
visitCall	src/main/java/decaf/frontend/typecheck/Typer.java	/^    public void visitCall(Tree.Call expr, ScopeStack ctx) {$/;"	m	class:Typer
visitClassCast	src/main/java/decaf/frontend/tacgen/TacEmitter.java	/^    default void visitClassCast(Tree.ClassCast expr, FuncVisitor mv) {$/;"	m	interface:TacEmitter
visitClassCast	src/main/java/decaf/frontend/tree/Visitor.java	/^    default void visitClassCast(Tree.ClassCast that, C ctx) {$/;"	m	interface:Visitor
visitClassCast	src/main/java/decaf/frontend/typecheck/Typer.java	/^    public void visitClassCast(Tree.ClassCast expr, ScopeStack ctx) {$/;"	m	class:Typer
visitClassDef	src/main/java/decaf/frontend/tree/Visitor.java	/^    default void visitClassDef(Tree.ClassDef that, C ctx) {$/;"	m	interface:Visitor
visitClassDef	src/main/java/decaf/frontend/typecheck/Namer.java	/^    public void visitClassDef(Tree.ClassDef clazz, ScopeStack ctx) {$/;"	m	class:Namer
visitClassDef	src/main/java/decaf/frontend/typecheck/Typer.java	/^    public void visitClassDef(Tree.ClassDef clazz, ScopeStack ctx) {$/;"	m	class:Typer
visitClassTest	src/main/java/decaf/frontend/tacgen/TacEmitter.java	/^    default void visitClassTest(Tree.ClassTest expr, FuncVisitor mv) {$/;"	m	interface:TacEmitter
visitClassTest	src/main/java/decaf/frontend/tree/Visitor.java	/^    default void visitClassTest(Tree.ClassTest that, C ctx) {$/;"	m	interface:Visitor
visitClassTest	src/main/java/decaf/frontend/typecheck/Typer.java	/^    public void visitClassTest(Tree.ClassTest expr, ScopeStack ctx) {$/;"	m	class:Typer
visitComment	src/main/java/decaf/lowlevel/tac/FuncVisitor.java	/^    public void visitComment(String content) {$/;"	m	class:FuncVisitor
visitCondBranch	src/main/java/decaf/backend/asm/mips/MipsAsmEmitter.java	/^        public void visitCondBranch(TacInstr.CondBranch instr) {$/;"	m	class:MipsAsmEmitter.MipsInstrSelector
visitCondBranch	src/main/java/decaf/lowlevel/tac/Simulator.java	/^        public void visitCondBranch(TacInstr.CondBranch instr) {$/;"	m	class:Simulator.InstrExecutor
visitCondBranch	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        default void visitCondBranch(CondBranch instr) {$/;"	m	interface:TacInstr.Visitor
visitDirectCall	src/main/java/decaf/backend/asm/mips/MipsAsmEmitter.java	/^        public void visitDirectCall(TacInstr.DirectCall instr) {$/;"	m	class:MipsAsmEmitter.MipsInstrSelector
visitDirectCall	src/main/java/decaf/lowlevel/tac/Simulator.java	/^        public void visitDirectCall(TacInstr.DirectCall instr) {$/;"	m	class:Simulator.InstrExecutor
visitDirectCall	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        default void visitDirectCall(DirectCall instr) {$/;"	m	interface:TacInstr.Visitor
visitEnd	src/main/java/decaf/lowlevel/tac/FuncVisitor.java	/^    public void visitEnd() {$/;"	m	class:FuncVisitor
visitEnd	src/main/java/decaf/lowlevel/tac/ProgramWriter.java	/^    public TacProg visitEnd() {$/;"	m	class:ProgramWriter
visitExprEval	src/main/java/decaf/frontend/tacgen/TacEmitter.java	/^    default void visitExprEval(Tree.ExprEval eval, FuncVisitor mv) {$/;"	m	interface:TacEmitter
visitExprEval	src/main/java/decaf/frontend/tree/Visitor.java	/^    default void visitExprEval(Tree.ExprEval that, C ctx) {$/;"	m	interface:Visitor
visitExprEval	src/main/java/decaf/frontend/typecheck/Namer.java	/^    public void visitExprEval(Tree.ExprEval eval, ScopeStack ctx) {$/;"	m	class:Namer
visitExprEval	src/main/java/decaf/frontend/typecheck/Typer.java	/^    public void visitExprEval(Tree.ExprEval stmt, ScopeStack ctx) {$/;"	m	class:Typer
visitFor	src/main/java/decaf/frontend/tacgen/TacEmitter.java	/^    default void visitFor(Tree.For loop, FuncVisitor mv) {$/;"	m	interface:TacEmitter
visitFor	src/main/java/decaf/frontend/tree/Visitor.java	/^    default void visitFor(Tree.For that, C ctx) {$/;"	m	interface:Visitor
visitFor	src/main/java/decaf/frontend/typecheck/Namer.java	/^    public void visitFor(Tree.For loop, ScopeStack ctx) {$/;"	m	class:Namer
visitFor	src/main/java/decaf/frontend/typecheck/Typer.java	/^    public void visitFor(Tree.For loop, ScopeStack ctx) {$/;"	m	class:Typer
visitFunc	src/main/java/decaf/lowlevel/tac/ProgramWriter.java	/^    public FuncVisitor visitFunc(String className, String funcName, int numArgs) {$/;"	m	class:ProgramWriter
visitIf	src/main/java/decaf/frontend/tacgen/TacEmitter.java	/^    default void visitIf(Tree.If stmt, FuncVisitor mv) {$/;"	m	interface:TacEmitter
visitIf	src/main/java/decaf/frontend/tree/Visitor.java	/^    default void visitIf(Tree.If that, C ctx) {$/;"	m	interface:Visitor
visitIf	src/main/java/decaf/frontend/typecheck/Namer.java	/^    public void visitIf(Tree.If stmt, ScopeStack ctx) {$/;"	m	class:Namer
visitIf	src/main/java/decaf/frontend/typecheck/Typer.java	/^    public void visitIf(Tree.If stmt, ScopeStack ctx) {$/;"	m	class:Typer
visitIndexSel	src/main/java/decaf/frontend/tacgen/TacEmitter.java	/^    default void visitIndexSel(Tree.IndexSel expr, FuncVisitor mv) {$/;"	m	interface:TacEmitter
visitIndexSel	src/main/java/decaf/frontend/tree/Visitor.java	/^    default void visitIndexSel(Tree.IndexSel that, C ctx) {$/;"	m	interface:Visitor
visitIndexSel	src/main/java/decaf/frontend/typecheck/Namer.java	/^    public void visitIndexSel(Tree.IndexSel indexSel, ScopeStack ctx){$/;"	m	class:Namer
visitIndexSel	src/main/java/decaf/frontend/typecheck/Typer.java	/^    public void visitIndexSel(Tree.IndexSel expr, ScopeStack ctx) {$/;"	m	class:Typer
visitIndirectCall	src/main/java/decaf/backend/asm/mips/MipsAsmEmitter.java	/^        public void visitIndirectCall(TacInstr.IndirectCall instr) {$/;"	m	class:MipsAsmEmitter.MipsInstrSelector
visitIndirectCall	src/main/java/decaf/lowlevel/tac/Simulator.java	/^        public void visitIndirectCall(TacInstr.IndirectCall instr) {$/;"	m	class:Simulator.InstrExecutor
visitIndirectCall	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        default void visitIndirectCall(IndirectCall instr) {$/;"	m	interface:TacInstr.Visitor
visitIntLit	src/main/java/decaf/frontend/tacgen/TacEmitter.java	/^    default void visitIntLit(Tree.IntLit expr, FuncVisitor mv) {$/;"	m	interface:TacEmitter
visitIntLit	src/main/java/decaf/frontend/tree/Visitor.java	/^    default void visitIntLit(Tree.IntLit that, C ctx) {$/;"	m	interface:Visitor
visitIntLit	src/main/java/decaf/frontend/typecheck/Typer.java	/^    public void visitIntLit(Tree.IntLit that, ScopeStack ctx) {$/;"	m	class:Typer
visitIntrinsicCall	src/main/java/decaf/lowlevel/tac/FuncVisitor.java	/^    public Temp visitIntrinsicCall(Intrinsic func, boolean needReturn, Temp... args) {$/;"	m	class:FuncVisitor
visitIntrinsicCall	src/main/java/decaf/lowlevel/tac/FuncVisitor.java	/^    public void visitIntrinsicCall(Intrinsic func, Temp... args) {$/;"	m	class:FuncVisitor
visitLabel	src/main/java/decaf/lowlevel/tac/FuncVisitor.java	/^    public void visitLabel(Label label) {$/;"	m	class:FuncVisitor
visitLambda	src/main/java/decaf/frontend/tree/Visitor.java	/^    default void visitLambda(Tree.Lambda that, C ctx) {$/;"	m	interface:Visitor
visitLambda	src/main/java/decaf/frontend/typecheck/Namer.java	/^    public void visitLambda(Tree.Lambda lambda, ScopeStack ctx) {$/;"	m	class:Namer
visitLambda	src/main/java/decaf/frontend/typecheck/Typer.java	/^    public void visitLambda(Tree.Lambda lambda, ScopeStack ctx) {$/;"	m	class:Typer
visitLambdaCall	src/main/java/decaf/lowlevel/tac/FuncVisitor.java	/^    public Temp visitLambdaCall( List<Temp> args){$/;"	m	class:FuncVisitor
visitLoad	src/main/java/decaf/lowlevel/tac/FuncVisitor.java	/^    public Temp visitLoad(String value) {$/;"	m	class:FuncVisitor
visitLoad	src/main/java/decaf/lowlevel/tac/FuncVisitor.java	/^    public Temp visitLoad(boolean value) {$/;"	m	class:FuncVisitor
visitLoad	src/main/java/decaf/lowlevel/tac/FuncVisitor.java	/^    public Temp visitLoad(int value) {$/;"	m	class:FuncVisitor
visitLoadFrom	src/main/java/decaf/lowlevel/tac/FuncVisitor.java	/^    public Temp visitLoadFrom(Temp base) {$/;"	m	class:FuncVisitor
visitLoadFrom	src/main/java/decaf/lowlevel/tac/FuncVisitor.java	/^    public Temp visitLoadFrom(Temp base, int offset) {$/;"	m	class:FuncVisitor
visitLoadImm4	src/main/java/decaf/backend/asm/mips/MipsAsmEmitter.java	/^        public void visitLoadImm4(TacInstr.LoadImm4 instr) {$/;"	m	class:MipsAsmEmitter.MipsInstrSelector
visitLoadImm4	src/main/java/decaf/lowlevel/tac/Simulator.java	/^        public void visitLoadImm4(TacInstr.LoadImm4 instr) {$/;"	m	class:Simulator.InstrExecutor
visitLoadImm4	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        default void visitLoadImm4(LoadImm4 instr) {$/;"	m	interface:TacInstr.Visitor
visitLoadStrConst	src/main/java/decaf/backend/asm/mips/MipsAsmEmitter.java	/^        public void visitLoadStrConst(TacInstr.LoadStrConst instr) {$/;"	m	class:MipsAsmEmitter.MipsInstrSelector
visitLoadStrConst	src/main/java/decaf/lowlevel/tac/Simulator.java	/^        public void visitLoadStrConst(TacInstr.LoadStrConst instr) {$/;"	m	class:Simulator.InstrExecutor
visitLoadStrConst	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        default void visitLoadStrConst(LoadStrConst instr) {$/;"	m	interface:TacInstr.Visitor
visitLoadVTable	src/main/java/decaf/lowlevel/tac/FuncVisitor.java	/^    public Temp visitLoadVTable(String clazz) {$/;"	m	class:FuncVisitor
visitLoadVTbl	src/main/java/decaf/backend/asm/mips/MipsAsmEmitter.java	/^        public void visitLoadVTbl(TacInstr.LoadVTbl instr) {$/;"	m	class:MipsAsmEmitter.MipsInstrSelector
visitLoadVTbl	src/main/java/decaf/lowlevel/tac/Simulator.java	/^        public void visitLoadVTbl(TacInstr.LoadVTbl instr) {$/;"	m	class:Simulator.InstrExecutor
visitLoadVTbl	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        default void visitLoadVTbl(LoadVTbl instr) {$/;"	m	interface:TacInstr.Visitor
visitLocalVarDef	src/main/java/decaf/frontend/tacgen/TacEmitter.java	/^    default void visitLocalVarDef(Tree.LocalVarDef def, FuncVisitor mv) {$/;"	m	interface:TacEmitter
visitLocalVarDef	src/main/java/decaf/frontend/tree/Visitor.java	/^    default void visitLocalVarDef(Tree.LocalVarDef that, C ctx) {$/;"	m	interface:Visitor
visitLocalVarDef	src/main/java/decaf/frontend/typecheck/Namer.java	/^    public void visitLocalVarDef(Tree.LocalVarDef def, ScopeStack ctx) {$/;"	m	class:Namer
visitLocalVarDef	src/main/java/decaf/frontend/typecheck/Typer.java	/^    public void visitLocalVarDef(Tree.LocalVarDef stmt, ScopeStack ctx) {$/;"	m	class:Typer
visitMainMethod	src/main/java/decaf/lowlevel/tac/ProgramWriter.java	/^    public FuncVisitor visitMainMethod() {$/;"	m	class:ProgramWriter
visitMark	src/main/java/decaf/backend/asm/mips/MipsAsmEmitter.java	/^        public void visitMark(TacInstr.Mark instr) {$/;"	m	class:MipsAsmEmitter.MipsInstrSelector
visitMark	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        default void visitMark(Mark instr) {$/;"	m	interface:TacInstr.Visitor
visitMemberAccess	src/main/java/decaf/lowlevel/tac/FuncVisitor.java	/^    public Temp visitMemberAccess(Temp object, String clazz, String variable) {$/;"	m	class:FuncVisitor
visitMemberCall	src/main/java/decaf/lowlevel/tac/FuncVisitor.java	/^    public Temp visitMemberCall(Temp object, String clazz, String method, List<Temp> args, boole/;"	m	class:FuncVisitor
visitMemberCall	src/main/java/decaf/lowlevel/tac/FuncVisitor.java	/^    public void visitMemberCall(Temp object, String clazz, String method, List<Temp> args) {$/;"	m	class:FuncVisitor
visitMemberWrite	src/main/java/decaf/lowlevel/tac/FuncVisitor.java	/^    public void visitMemberWrite(Temp object, String clazz, String variable, Temp value) {$/;"	m	class:FuncVisitor
visitMemo	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        default void visitMemo(Memo instr) {$/;"	m	interface:TacInstr.Visitor
visitMemory	src/main/java/decaf/backend/asm/mips/MipsAsmEmitter.java	/^        public void visitMemory(TacInstr.Memory instr) {$/;"	m	class:MipsAsmEmitter.MipsInstrSelector
visitMemory	src/main/java/decaf/lowlevel/tac/Simulator.java	/^        public void visitMemory(TacInstr.Memory instr) {$/;"	m	class:Simulator.InstrExecutor
visitMemory	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        default void visitMemory(Memory instr) {$/;"	m	interface:TacInstr.Visitor
visitMethodDef	src/main/java/decaf/frontend/tree/Visitor.java	/^    default void visitMethodDef(Tree.MethodDef that, C ctx) {$/;"	m	interface:Visitor
visitMethodDef	src/main/java/decaf/frontend/typecheck/Namer.java	/^    public void visitMethodDef(Tree.MethodDef method, ScopeStack ctx) {$/;"	m	class:Namer
visitMethodDef	src/main/java/decaf/frontend/typecheck/Typer.java	/^    public void visitMethodDef(Tree.MethodDef method, ScopeStack ctx) {$/;"	m	class:Typer
visitNewArray	src/main/java/decaf/frontend/tacgen/TacEmitter.java	/^    default void visitNewArray(Tree.NewArray expr, FuncVisitor mv) {$/;"	m	interface:TacEmitter
visitNewArray	src/main/java/decaf/frontend/tree/Visitor.java	/^    default void visitNewArray(Tree.NewArray that, C ctx) {$/;"	m	interface:Visitor
visitNewArray	src/main/java/decaf/frontend/typecheck/Namer.java	/^    public void visitNewArray(Tree.NewArray expr, ScopeStack ctx){$/;"	m	class:Namer
visitNewArray	src/main/java/decaf/frontend/typecheck/Typer.java	/^    public void visitNewArray(Tree.NewArray expr, ScopeStack ctx) {$/;"	m	class:Typer
visitNewClass	src/main/java/decaf/frontend/tacgen/TacEmitter.java	/^    default void visitNewClass(Tree.NewClass expr, FuncVisitor mv) {$/;"	m	interface:TacEmitter
visitNewClass	src/main/java/decaf/frontend/tree/Visitor.java	/^    default void visitNewClass(Tree.NewClass that, C ctx) {$/;"	m	interface:Visitor
visitNewClass	src/main/java/decaf/frontend/typecheck/Typer.java	/^    public void visitNewClass(Tree.NewClass expr, ScopeStack ctx) {$/;"	m	class:Typer
visitNewClass	src/main/java/decaf/lowlevel/tac/FuncVisitor.java	/^    public Temp visitNewClass(String clazz) {$/;"	m	class:FuncVisitor
visitNullLit	src/main/java/decaf/frontend/tacgen/TacEmitter.java	/^    default void visitNullLit(Tree.NullLit expr, FuncVisitor mv) {$/;"	m	interface:TacEmitter
visitNullLit	src/main/java/decaf/frontend/tree/Visitor.java	/^    default void visitNullLit(Tree.NullLit that, C ctx) {$/;"	m	interface:Visitor
visitNullLit	src/main/java/decaf/frontend/typecheck/Typer.java	/^    public void visitNullLit(Tree.NullLit that, ScopeStack ctx) {$/;"	m	class:Typer
visitOthers	src/main/java/decaf/frontend/tree/Visitor.java	/^    default void visitOthers(TreeNode that, C ctx) {$/;"	m	interface:Visitor
visitOthers	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        default void visitOthers(TacInstr instr) {$/;"	m	interface:TacInstr.Visitor
visitParm	src/main/java/decaf/backend/asm/mips/MipsAsmEmitter.java	/^        public void visitParm(TacInstr.Parm instr) {$/;"	m	class:MipsAsmEmitter.MipsInstrSelector
visitParm	src/main/java/decaf/lowlevel/tac/Simulator.java	/^        public void visitParm(TacInstr.Parm instr) {$/;"	m	class:Simulator.InstrExecutor
visitParm	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        default void visitParm(Parm instr) {$/;"	m	interface:TacInstr.Visitor
visitPrint	src/main/java/decaf/frontend/tacgen/TacEmitter.java	/^    default void visitPrint(Tree.Print stmt, FuncVisitor mv) {$/;"	m	interface:TacEmitter
visitPrint	src/main/java/decaf/frontend/tree/Visitor.java	/^    default void visitPrint(Tree.Print that, C ctx) {$/;"	m	interface:Visitor
visitPrint	src/main/java/decaf/frontend/typecheck/Typer.java	/^    public void visitPrint(Tree.Print stmt, ScopeStack ctx) {$/;"	m	class:Typer
visitPrint	src/main/java/decaf/lowlevel/tac/FuncVisitor.java	/^    public void visitPrint(String str) {$/;"	m	class:FuncVisitor
visitRaw	src/main/java/decaf/lowlevel/tac/FuncVisitor.java	/^    public void visitRaw(TacInstr instr) {$/;"	m	class:FuncVisitor
visitReadInt	src/main/java/decaf/frontend/tacgen/TacEmitter.java	/^    default void visitReadInt(Tree.ReadInt expr, FuncVisitor mv) {$/;"	m	interface:TacEmitter
visitReadInt	src/main/java/decaf/frontend/tree/Visitor.java	/^    default void visitReadInt(Tree.ReadInt that, C ctx) {$/;"	m	interface:Visitor
visitReadInt	src/main/java/decaf/frontend/typecheck/Typer.java	/^    public void visitReadInt(Tree.ReadInt readInt, ScopeStack ctx) {$/;"	m	class:Typer
visitReadLine	src/main/java/decaf/frontend/tacgen/TacEmitter.java	/^    default void visitReadLine(Tree.ReadLine expr, FuncVisitor mv) {$/;"	m	interface:TacEmitter
visitReadLine	src/main/java/decaf/frontend/tree/Visitor.java	/^    default void visitReadLine(Tree.ReadLine that, C ctx) {$/;"	m	interface:Visitor
visitReadLine	src/main/java/decaf/frontend/typecheck/Typer.java	/^    public void visitReadLine(Tree.ReadLine readStringExpr, ScopeStack ctx) {$/;"	m	class:Typer
visitReturn	src/main/java/decaf/backend/asm/mips/MipsAsmEmitter.java	/^        public void visitReturn(TacInstr.Return instr) {$/;"	m	class:MipsAsmEmitter.MipsInstrSelector
visitReturn	src/main/java/decaf/frontend/tacgen/TacEmitter.java	/^    default void visitReturn(Tree.Return stmt, FuncVisitor mv) {$/;"	m	interface:TacEmitter
visitReturn	src/main/java/decaf/frontend/tree/Visitor.java	/^    default void visitReturn(Tree.Return that, C ctx) {$/;"	m	interface:Visitor
visitReturn	src/main/java/decaf/frontend/typecheck/Namer.java	/^    public void visitReturn(Tree.Return ret, ScopeStack ctx) {$/;"	m	class:Namer
visitReturn	src/main/java/decaf/frontend/typecheck/Typer.java	/^    public void visitReturn(Tree.Return stmt, ScopeStack ctx) {$/;"	m	class:Typer
visitReturn	src/main/java/decaf/lowlevel/tac/FuncVisitor.java	/^    public void visitReturn() {$/;"	m	class:FuncVisitor
visitReturn	src/main/java/decaf/lowlevel/tac/FuncVisitor.java	/^    public void visitReturn(Temp value) {$/;"	m	class:FuncVisitor
visitReturn	src/main/java/decaf/lowlevel/tac/Simulator.java	/^        public void visitReturn(TacInstr.Return instr) {$/;"	m	class:Simulator.InstrExecutor
visitReturn	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        default void visitReturn(Return instr) {$/;"	m	interface:TacInstr.Visitor
visitSkip	src/main/java/decaf/frontend/tree/Visitor.java	/^    default void visitSkip(Tree.Skip that, C ctx) {$/;"	m	interface:Visitor
visitStaticCall	src/main/java/decaf/lowlevel/tac/FuncVisitor.java	/^    public Temp visitStaticCall(String clazz, String method, List<Temp> args, boolean needReturn/;"	m	class:FuncVisitor
visitStaticCall	src/main/java/decaf/lowlevel/tac/FuncVisitor.java	/^    public void visitStaticCall(String clazz, String method, List<Temp> args) {$/;"	m	class:FuncVisitor
visitStoreTo	src/main/java/decaf/lowlevel/tac/FuncVisitor.java	/^    public void visitStoreTo(Temp addr, Temp value) {$/;"	m	class:FuncVisitor
visitStoreTo	src/main/java/decaf/lowlevel/tac/FuncVisitor.java	/^    public void visitStoreTo(Temp base, int offset, Temp value) {$/;"	m	class:FuncVisitor
visitStringLit	src/main/java/decaf/frontend/tacgen/TacEmitter.java	/^    default void visitStringLit(Tree.StringLit expr, FuncVisitor mv) {$/;"	m	interface:TacEmitter
visitStringLit	src/main/java/decaf/frontend/tree/Visitor.java	/^    default void visitStringLit(Tree.StringLit that, C ctx) {$/;"	m	interface:Visitor
visitStringLit	src/main/java/decaf/frontend/typecheck/Typer.java	/^    public void visitStringLit(Tree.StringLit that, ScopeStack ctx) {$/;"	m	class:Typer
visitTArray	src/main/java/decaf/frontend/tree/Visitor.java	/^    default void visitTArray(Tree.TArray that, C ctx) {$/;"	m	interface:Visitor
visitTArray	src/main/java/decaf/frontend/typecheck/TypeLitVisited.java	/^    default void visitTArray(Tree.TArray typeArray, ScopeStack ctx) {$/;"	m	interface:TypeLitVisited
visitTBool	src/main/java/decaf/frontend/tree/Visitor.java	/^    default void visitTBool(Tree.TBool that, C ctx) {$/;"	m	interface:Visitor
visitTBool	src/main/java/decaf/frontend/typecheck/TypeLitVisited.java	/^    default void visitTBool(Tree.TBool that, ScopeStack ctx) {$/;"	m	interface:TypeLitVisited
visitTClass	src/main/java/decaf/frontend/tree/Visitor.java	/^    default void visitTClass(Tree.TClass that, C ctx) {$/;"	m	interface:Visitor
visitTClass	src/main/java/decaf/frontend/typecheck/TypeLitVisited.java	/^    default void visitTClass(Tree.TClass typeClass, ScopeStack ctx) {$/;"	m	interface:TypeLitVisited
visitTInt	src/main/java/decaf/frontend/tree/Visitor.java	/^    default void visitTInt(Tree.TInt that, C ctx) {$/;"	m	interface:Visitor
visitTInt	src/main/java/decaf/frontend/typecheck/TypeLitVisited.java	/^    default void visitTInt(Tree.TInt that, ScopeStack ctx) {$/;"	m	interface:TypeLitVisited
visitTLambda	src/main/java/decaf/frontend/tree/Visitor.java	/^    default void visitTLambda(Tree.TLambda that, C ctx) {$/;"	m	interface:Visitor
visitTLambda	src/main/java/decaf/frontend/typecheck/TypeLitVisited.java	/^    default void visitTLambda(Tree.TLambda expr, ScopeStack ctx)$/;"	m	interface:TypeLitVisited
visitTString	src/main/java/decaf/frontend/tree/Visitor.java	/^    default void visitTString(Tree.TString that, C ctx) {$/;"	m	interface:Visitor
visitTString	src/main/java/decaf/frontend/typecheck/TypeLitVisited.java	/^    default void visitTString(Tree.TString that, ScopeStack ctx) {$/;"	m	interface:TypeLitVisited
visitTVoid	src/main/java/decaf/frontend/tree/Visitor.java	/^    default void visitTVoid(Tree.TVoid that, C ctx) {$/;"	m	interface:Visitor
visitTVoid	src/main/java/decaf/frontend/typecheck/TypeLitVisited.java	/^    default void visitTVoid(Tree.TVoid that, ScopeStack ctx) {$/;"	m	interface:TypeLitVisited
visitThis	src/main/java/decaf/frontend/tacgen/TacEmitter.java	/^    default void visitThis(Tree.This expr, FuncVisitor mv) {$/;"	m	interface:TacEmitter
visitThis	src/main/java/decaf/frontend/tree/Visitor.java	/^    default void visitThis(Tree.This that, C ctx) {$/;"	m	interface:Visitor
visitThis	src/main/java/decaf/frontend/typecheck/Typer.java	/^    public void visitThis(Tree.This expr, ScopeStack ctx) {$/;"	m	class:Typer
visitTopLevel	src/main/java/decaf/frontend/tree/Visitor.java	/^    default void visitTopLevel(Tree.TopLevel that, C ctx) {$/;"	m	interface:Visitor
visitTopLevel	src/main/java/decaf/frontend/typecheck/Namer.java	/^    public void visitTopLevel(Tree.TopLevel program, ScopeStack ctx) {$/;"	m	class:Namer
visitTopLevel	src/main/java/decaf/frontend/typecheck/Typer.java	/^    public void visitTopLevel(Tree.TopLevel program, ScopeStack ctx) {$/;"	m	class:Typer
visitUnary	src/main/java/decaf/backend/asm/mips/MipsAsmEmitter.java	/^        public void visitUnary(TacInstr.Unary instr) {$/;"	m	class:MipsAsmEmitter.MipsInstrSelector
visitUnary	src/main/java/decaf/frontend/tacgen/TacEmitter.java	/^    default void visitUnary(Tree.Unary expr, FuncVisitor mv) {$/;"	m	interface:TacEmitter
visitUnary	src/main/java/decaf/frontend/tree/Visitor.java	/^    default void visitUnary(Tree.Unary that, C ctx) {$/;"	m	interface:Visitor
visitUnary	src/main/java/decaf/frontend/typecheck/Typer.java	/^    public void visitUnary(Tree.Unary expr, ScopeStack ctx) {$/;"	m	class:Typer
visitUnary	src/main/java/decaf/lowlevel/tac/FuncVisitor.java	/^    public Temp visitUnary(TacInstr.Unary.Op op, Temp operand) {$/;"	m	class:FuncVisitor
visitUnary	src/main/java/decaf/lowlevel/tac/Simulator.java	/^        public void visitUnary(TacInstr.Unary instr) {$/;"	m	class:Simulator.InstrExecutor
visitUnary	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        default void visitUnary(Unary instr) {$/;"	m	interface:TacInstr.Visitor
visitUnarySelf	src/main/java/decaf/lowlevel/tac/FuncVisitor.java	/^    public void visitUnarySelf(TacInstr.Unary.Op op, Temp self) {$/;"	m	class:FuncVisitor
visitVTables	src/main/java/decaf/lowlevel/tac/ProgramWriter.java	/^    public void visitVTables() {$/;"	m	class:ProgramWriter
visitVarDef	src/main/java/decaf/frontend/tree/Visitor.java	/^    default void visitVarDef(Tree.VarDef that, C ctx) {$/;"	m	interface:Visitor
visitVarDef	src/main/java/decaf/frontend/typecheck/Namer.java	/^    public void visitVarDef(Tree.VarDef varDef, ScopeStack ctx) {$/;"	m	class:Namer
visitVarSel	src/main/java/decaf/frontend/tacgen/TacEmitter.java	/^    default void visitVarSel(Tree.VarSel expr, FuncVisitor mv) {$/;"	m	interface:TacEmitter
visitVarSel	src/main/java/decaf/frontend/tree/Visitor.java	/^    default void visitVarSel(Tree.VarSel that, C ctx) {$/;"	m	interface:Visitor
visitVarSel	src/main/java/decaf/frontend/typecheck/Typer.java	/^    public void visitVarSel(Tree.VarSel expr, ScopeStack ctx) {$/;"	m	class:Typer
visitWhile	src/main/java/decaf/frontend/tacgen/TacEmitter.java	/^    default void visitWhile(Tree.While loop, FuncVisitor mv) {$/;"	m	interface:TacEmitter
visitWhile	src/main/java/decaf/frontend/tree/Visitor.java	/^    default void visitWhile(Tree.While that, C ctx) {$/;"	m	interface:Visitor
visitWhile	src/main/java/decaf/frontend/typecheck/Namer.java	/^    public void visitWhile(Tree.While loop, ScopeStack ctx) {$/;"	m	class:Namer
visitWhile	src/main/java/decaf/frontend/typecheck/Typer.java	/^    public void visitWhile(Tree.While loop, ScopeStack ctx) {$/;"	m	class:Typer
vtables	src/main/java/decaf/lowlevel/tac/ProgramWriter.java	/^        private Map<String, VTable> vtables = new TreeMap<>();$/;"	f	class:ProgramWriter.Context	file:
vtables	src/main/java/decaf/lowlevel/tac/TacProg.java	/^    public final List<VTable> vtables;$/;"	f	class:TacProg
vtbl	src/main/java/decaf/lowlevel/tac/TacInstr.java	/^        public final VTable vtbl;$/;"	f	class:TacInstr.LoadVTbl
warn	gradlew	/^warn () {$/;"	f
warn	src/main/java/decaf/lowlevel/log/Log.java	/^    public static void warn(String fmt, Object... args) {$/;"	m	class:Log
win9xME_args	gradlew.bat	/^:win9xME_args$/;"	l
win9xME_args_slurp	gradlew.bat	/^:win9xME_args_slurp$/;"	l
withArgs	src/main/java/decaf/driver/Launcher.java	/^    public static void withArgs(String[] args) {$/;"	m	class:Launcher
withConfig	src/main/java/decaf/driver/Launcher.java	/^    public static void withConfig(Config config) {$/;"	m	class:Launcher
write	src/main/java/decaf/lowlevel/log/IndentPrinter.java	/^    private void write(String s, boolean endsLine) {$/;"	m	class:IndentPrinter	file:
writers	src/main/java/decaf/lowlevel/log/IndentPrinter.java	/^    private List<PrintWriter> writers;$/;"	f	class:IndentPrinter	file:
yybegin	build/generated-src/jflex/DecafLexer.java	/^  public final void yybegin(int newState) {$/;"	m	class:DecafLexer
yychar	build/generated-src/jflex/DecafLexer.java	/^  private int yychar;$/;"	f	class:DecafLexer	file:
yycharat	build/generated-src/jflex/DecafLexer.java	/^  public final char yycharat(int pos) {$/;"	m	class:DecafLexer
yyclearin	src/main/y.tab.c	/^#define yyclearin /;"	d	file:
yyclose	build/generated-src/jflex/DecafLexer.java	/^  public final void yyclose() throws java.io.IOException {$/;"	m	class:DecafLexer
yycolumn	build/generated-src/jflex/DecafLexer.java	/^  private int yycolumn;$/;"	f	class:DecafLexer	file:
yyerrmsgs	build/generated-src/jacc/DecafJaccParser.java	/^    protected String[] yyerrmsgs = {$/;"	f	class:DecafJaccParser
yyerrno	build/generated-src/jacc/DecafJaccParser.java	/^    protected int yyerrno = (-1);$/;"	f	class:DecafJaccParser
yyerrok	src/main/y.tab.c	/^#define yyerrok /;"	d	file:
yyerror	src/main/java/decaf/frontend/parsing/AbstractParser.java	/^    protected void yyerror(String msg) {$/;"	m	class:AbstractParser
yyexpand	build/generated-src/jacc/DecafJaccParser.java	/^    protected void yyexpand() {$/;"	m	class:DecafJaccParser
yylength	build/generated-src/jflex/DecafLexer.java	/^  public final int yylength() {$/;"	m	class:DecafLexer
yylex	build/generated-src/jflex/DecafLexer.java	/^  public int yylex() throws java.io.IOException {$/;"	m	class:DecafLexer
yylex	src/main/java/decaf/frontend/parsing/AbstractLexer.java	/^    abstract int yylex() throws IOException;$/;"	m	class:AbstractLexer
yyline	build/generated-src/jflex/DecafLexer.java	/^  private int yyline;$/;"	f	class:DecafLexer	file:
yypClassDef	build/generated-src/jacc/DecafJaccParser.java	/^    private int yypClassDef() {$/;"	m	class:DecafJaccParser	file:
yypExpr	build/generated-src/jacc/DecafJaccParser.java	/^    private int yypExpr() {$/;"	m	class:DecafJaccParser	file:
yypExprList	build/generated-src/jacc/DecafJaccParser.java	/^    private int yypExprList() {$/;"	m	class:DecafJaccParser	file:
yypExtendsClause	build/generated-src/jacc/DecafJaccParser.java	/^    private int yypExtendsClause() {$/;"	m	class:DecafJaccParser	file:
yypFieldList	build/generated-src/jacc/DecafJaccParser.java	/^    private int yypFieldList() {$/;"	m	class:DecafJaccParser	file:
yypLValue	build/generated-src/jacc/DecafJaccParser.java	/^    private int yypLValue() {$/;"	m	class:DecafJaccParser	file:
yypSimpleStmt	build/generated-src/jacc/DecafJaccParser.java	/^    private int yypSimpleStmt() {$/;"	m	class:DecafJaccParser	file:
yypStmt	build/generated-src/jacc/DecafJaccParser.java	/^    private int yypStmt() {$/;"	m	class:DecafJaccParser	file:
yypType	build/generated-src/jacc/DecafJaccParser.java	/^    private int yypType() {$/;"	m	class:DecafJaccParser	file:
yypVarList	build/generated-src/jacc/DecafJaccParser.java	/^    private int yypVarList() {$/;"	m	class:DecafJaccParser	file:
yypushback	build/generated-src/jflex/DecafLexer.java	/^  public void yypushback(int number)  {$/;"	m	class:DecafLexer
yyr1	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr1() { \/\/ TopLevel : ClassList$/;"	m	class:DecafJaccParser	file:
yyr10	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr10() { \/\/ FieldList : \/* empty *\/$/;"	m	class:DecafJaccParser	file:
yyr11	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr11() { \/\/ Var : Type Id$/;"	m	class:DecafJaccParser	file:
yyr12	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr12() { \/\/ MethodDef : STATIC Type Id '(' VarList ')' Block$/;"	m	class:DecafJaccParser	file:
yyr13	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr13() { \/\/ MethodDef : Type Id '(' VarList ')' Block$/;"	m	class:DecafJaccParser	file:
yyr14	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr14() { \/\/ MethodDef : ABSTRACT Type Id '(' VarList ')' ';'$/;"	m	class:DecafJaccParser	file:
yyr15	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr15() { \/\/ VarList : VarList1$/;"	m	class:DecafJaccParser	file:
yyr16	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr16() { \/\/ VarList : \/* empty *\/$/;"	m	class:DecafJaccParser	file:
yyr17	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr17() { \/\/ VarList1 : VarList1 ',' Var$/;"	m	class:DecafJaccParser	file:
yyr18	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr18() { \/\/ VarList1 : Var$/;"	m	class:DecafJaccParser	file:
yyr19	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr19() { \/\/ Type : INT$/;"	m	class:DecafJaccParser	file:
yyr2	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr2() { \/\/ ClassList : ClassList ClassDef$/;"	m	class:DecafJaccParser	file:
yyr20	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr20() { \/\/ Type : BOOL$/;"	m	class:DecafJaccParser	file:
yyr21	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr21() { \/\/ Type : STRING$/;"	m	class:DecafJaccParser	file:
yyr22	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr22() { \/\/ Type : VOID$/;"	m	class:DecafJaccParser	file:
yyr23	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr23() { \/\/ Type : CLASS Id$/;"	m	class:DecafJaccParser	file:
yyr24	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr24() { \/\/ Type : Type '[' ']'$/;"	m	class:DecafJaccParser	file:
yyr25	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr25() { \/\/ Type : Type '(' TypeList ')'$/;"	m	class:DecafJaccParser	file:
yyr26	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr26() { \/\/ TypeList : TypeList1$/;"	m	class:DecafJaccParser	file:
yyr27	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr27() { \/\/ TypeList : \/* empty *\/$/;"	m	class:DecafJaccParser	file:
yyr28	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr28() { \/\/ TypeList1 : TypeList1 ',' Type$/;"	m	class:DecafJaccParser	file:
yyr29	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr29() { \/\/ TypeList1 : Type$/;"	m	class:DecafJaccParser	file:
yyr3	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr3() { \/\/ ClassList : ClassDef$/;"	m	class:DecafJaccParser	file:
yyr30	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr30() { \/\/ Stmt : Block$/;"	m	class:DecafJaccParser	file:
yyr31	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr31() { \/\/ Stmt : SimpleStmt ';'$/;"	m	class:DecafJaccParser	file:
yyr32	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr32() { \/\/ Stmt : IF '(' Expr ')' Stmt ElseClause$/;"	m	class:DecafJaccParser	file:
yyr33	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr33() { \/\/ Stmt : WHILE '(' Expr ')' Stmt$/;"	m	class:DecafJaccParser	file:
yyr34	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr34() { \/\/ Stmt : FOR '(' SimpleStmt ';' Expr ';' SimpleStmt ')' Stmt$/;"	m	class:DecafJaccParser	file:
yyr35	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr35() { \/\/ Stmt : BREAK ';'$/;"	m	class:DecafJaccParser	file:
yyr36	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr36() { \/\/ Stmt : RETURN ExprOpt ';'$/;"	m	class:DecafJaccParser	file:
yyr37	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr37() { \/\/ Stmt : PRINT '(' ExprList ')' ';'$/;"	m	class:DecafJaccParser	file:
yyr38	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr38() { \/\/ Block : '{' StmtList '}'$/;"	m	class:DecafJaccParser	file:
yyr39	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr39() { \/\/ StmtList : StmtList Stmt$/;"	m	class:DecafJaccParser	file:
yyr4	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr4() { \/\/ ClassDef : ABSTRACT CLASS Id ExtendsClause '{' FieldList '}'$/;"	m	class:DecafJaccParser	file:
yyr40	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr40() { \/\/ StmtList : \/* empty *\/$/;"	m	class:DecafJaccParser	file:
yyr41	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr41() { \/\/ SimpleStmt : Var Initializer$/;"	m	class:DecafJaccParser	file:
yyr42	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr42() { \/\/ SimpleStmt : LValue '=' Expr$/;"	m	class:DecafJaccParser	file:
yyr43	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr43() { \/\/ SimpleStmt : Expr$/;"	m	class:DecafJaccParser	file:
yyr44	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr44() { \/\/ SimpleStmt : VAR Id '=' Expr$/;"	m	class:DecafJaccParser	file:
yyr45	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr45() { \/\/ SimpleStmt : \/* empty *\/$/;"	m	class:DecafJaccParser	file:
yyr46	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr46() { \/\/ Initializer : '=' Expr$/;"	m	class:DecafJaccParser	file:
yyr47	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr47() { \/\/ Initializer : \/* empty *\/$/;"	m	class:DecafJaccParser	file:
yyr48	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr48() { \/\/ ElseClause : ELSE Stmt$/;"	m	class:DecafJaccParser	file:
yyr49	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr49() { \/\/ ElseClause : \/* empty *\/$/;"	m	class:DecafJaccParser	file:
yyr5	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr5() { \/\/ ClassDef : CLASS Id ExtendsClause '{' FieldList '}'$/;"	m	class:DecafJaccParser	file:
yyr50	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr50() { \/\/ ExprOpt : Expr$/;"	m	class:DecafJaccParser	file:
yyr51	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr51() { \/\/ ExprOpt : \/* empty *\/$/;"	m	class:DecafJaccParser	file:
yyr52	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr52() { \/\/ Expr : Literal$/;"	m	class:DecafJaccParser	file:
yyr53	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr53() { \/\/ Expr : THIS$/;"	m	class:DecafJaccParser	file:
yyr54	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr54() { \/\/ Expr : LValue$/;"	m	class:DecafJaccParser	file:
yyr55	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr55() { \/\/ Expr : Expr '(' ExprList ')'$/;"	m	class:DecafJaccParser	file:
yyr56	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr56() { \/\/ Expr : Expr '+' Expr$/;"	m	class:DecafJaccParser	file:
yyr57	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr57() { \/\/ Expr : Expr '-' Expr$/;"	m	class:DecafJaccParser	file:
yyr58	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr58() { \/\/ Expr : Expr '*' Expr$/;"	m	class:DecafJaccParser	file:
yyr59	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr59() { \/\/ Expr : Expr '\/' Expr$/;"	m	class:DecafJaccParser	file:
yyr6	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr6() { \/\/ ExtendsClause : EXTENDS Id$/;"	m	class:DecafJaccParser	file:
yyr60	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr60() { \/\/ Expr : Expr '%' Expr$/;"	m	class:DecafJaccParser	file:
yyr61	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr61() { \/\/ Expr : Expr EQUAL Expr$/;"	m	class:DecafJaccParser	file:
yyr62	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr62() { \/\/ Expr : Expr NOT_EQUAL Expr$/;"	m	class:DecafJaccParser	file:
yyr63	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr63() { \/\/ Expr : Expr '<' Expr$/;"	m	class:DecafJaccParser	file:
yyr64	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr64() { \/\/ Expr : Expr '>' Expr$/;"	m	class:DecafJaccParser	file:
yyr65	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr65() { \/\/ Expr : Expr LESS_EQUAL Expr$/;"	m	class:DecafJaccParser	file:
yyr66	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr66() { \/\/ Expr : Expr GREATER_EQUAL Expr$/;"	m	class:DecafJaccParser	file:
yyr67	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr67() { \/\/ Expr : Expr AND Expr$/;"	m	class:DecafJaccParser	file:
yyr68	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr68() { \/\/ Expr : Expr OR Expr$/;"	m	class:DecafJaccParser	file:
yyr69	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr69() { \/\/ Expr : '(' Expr ')'$/;"	m	class:DecafJaccParser	file:
yyr7	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr7() { \/\/ ExtendsClause : \/* empty *\/$/;"	m	class:DecafJaccParser	file:
yyr70	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr70() { \/\/ Expr : '-' Expr$/;"	m	class:DecafJaccParser	file:
yyr71	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr71() { \/\/ Expr : '!' Expr$/;"	m	class:DecafJaccParser	file:
yyr72	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr72() { \/\/ Expr : READ_INTEGER '(' ')'$/;"	m	class:DecafJaccParser	file:
yyr73	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr73() { \/\/ Expr : READ_LINE '(' ')'$/;"	m	class:DecafJaccParser	file:
yyr74	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr74() { \/\/ Expr : NEW Id '(' ')'$/;"	m	class:DecafJaccParser	file:
yyr75	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr75() { \/\/ Expr : NEW Type '[' Expr ']'$/;"	m	class:DecafJaccParser	file:
yyr76	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr76() { \/\/ Expr : INSTANCE_OF '(' Expr ',' Id ')'$/;"	m	class:DecafJaccParser	file:
yyr77	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr77() { \/\/ Expr : '(' CLASS Id ')' Expr$/;"	m	class:DecafJaccParser	file:
yyr78	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr78() { \/\/ Expr : FUN '(' VarList ')' TO Expr$/;"	m	class:DecafJaccParser	file:
yyr79	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr79() { \/\/ Expr : FUN '(' VarList ')' Block$/;"	m	class:DecafJaccParser	file:
yyr8	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr8() { \/\/ FieldList : FieldList Var ';'$/;"	m	class:DecafJaccParser	file:
yyr80	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr80() { \/\/ Literal : INT_LIT$/;"	m	class:DecafJaccParser	file:
yyr81	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr81() { \/\/ Literal : BOOL_LIT$/;"	m	class:DecafJaccParser	file:
yyr82	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr82() { \/\/ Literal : STRING_LIT$/;"	m	class:DecafJaccParser	file:
yyr83	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr83() { \/\/ Literal : NULL$/;"	m	class:DecafJaccParser	file:
yyr84	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr84() { \/\/ LValue : Receiver Id$/;"	m	class:DecafJaccParser	file:
yyr85	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr85() { \/\/ LValue : Expr '[' Expr ']'$/;"	m	class:DecafJaccParser	file:
yyr86	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr86() { \/\/ Receiver : Expr '.'$/;"	m	class:DecafJaccParser	file:
yyr87	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr87() { \/\/ Receiver : \/* empty *\/$/;"	m	class:DecafJaccParser	file:
yyr88	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr88() { \/\/ ExprList : ExprList1$/;"	m	class:DecafJaccParser	file:
yyr89	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr89() { \/\/ ExprList : \/* empty *\/$/;"	m	class:DecafJaccParser	file:
yyr9	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr9() { \/\/ FieldList : FieldList MethodDef$/;"	m	class:DecafJaccParser	file:
yyr90	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr90() { \/\/ ExprList1 : ExprList1 ',' Expr$/;"	m	class:DecafJaccParser	file:
yyr91	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr91() { \/\/ ExprList1 : Expr$/;"	m	class:DecafJaccParser	file:
yyr92	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyr92() { \/\/ Id : IDENTIFIER$/;"	m	class:DecafJaccParser	file:
yyreset	build/generated-src/jflex/DecafLexer.java	/^  public final void yyreset(java.io.Reader reader) {$/;"	m	class:DecafLexer
yyrv	build/generated-src/jacc/DecafJaccParser.java	/^    private SemValue yyrv;$/;"	f	class:DecafJaccParser	file:
yys100	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys100() {$/;"	m	class:DecafJaccParser	file:
yys101	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys101() {$/;"	m	class:DecafJaccParser	file:
yys102	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys102() {$/;"	m	class:DecafJaccParser	file:
yys103	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys103() {$/;"	m	class:DecafJaccParser	file:
yys104	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys104() {$/;"	m	class:DecafJaccParser	file:
yys105	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys105() {$/;"	m	class:DecafJaccParser	file:
yys106	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys106() {$/;"	m	class:DecafJaccParser	file:
yys108	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys108() {$/;"	m	class:DecafJaccParser	file:
yys109	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys109() {$/;"	m	class:DecafJaccParser	file:
yys110	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys110() {$/;"	m	class:DecafJaccParser	file:
yys111	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys111() {$/;"	m	class:DecafJaccParser	file:
yys112	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys112() {$/;"	m	class:DecafJaccParser	file:
yys113	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys113() {$/;"	m	class:DecafJaccParser	file:
yys114	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys114() {$/;"	m	class:DecafJaccParser	file:
yys116	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys116() {$/;"	m	class:DecafJaccParser	file:
yys117	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys117() {$/;"	m	class:DecafJaccParser	file:
yys118	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys118() {$/;"	m	class:DecafJaccParser	file:
yys119	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys119() {$/;"	m	class:DecafJaccParser	file:
yys120	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys120() {$/;"	m	class:DecafJaccParser	file:
yys121	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys121() {$/;"	m	class:DecafJaccParser	file:
yys124	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys124() {$/;"	m	class:DecafJaccParser	file:
yys127	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys127() {$/;"	m	class:DecafJaccParser	file:
yys129	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys129() {$/;"	m	class:DecafJaccParser	file:
yys131	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys131() {$/;"	m	class:DecafJaccParser	file:
yys132	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys132() {$/;"	m	class:DecafJaccParser	file:
yys133	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys133() {$/;"	m	class:DecafJaccParser	file:
yys135	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys135() {$/;"	m	class:DecafJaccParser	file:
yys136	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys136() {$/;"	m	class:DecafJaccParser	file:
yys137	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys137() {$/;"	m	class:DecafJaccParser	file:
yys138	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys138() {$/;"	m	class:DecafJaccParser	file:
yys139	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys139() {$/;"	m	class:DecafJaccParser	file:
yys14	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys14() {$/;"	m	class:DecafJaccParser	file:
yys140	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys140() {$/;"	m	class:DecafJaccParser	file:
yys141	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys141() {$/;"	m	class:DecafJaccParser	file:
yys142	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys142() {$/;"	m	class:DecafJaccParser	file:
yys143	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys143() {$/;"	m	class:DecafJaccParser	file:
yys146	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys146() {$/;"	m	class:DecafJaccParser	file:
yys147	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys147() {$/;"	m	class:DecafJaccParser	file:
yys148	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys148() {$/;"	m	class:DecafJaccParser	file:
yys149	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys149() {$/;"	m	class:DecafJaccParser	file:
yys150	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys150() {$/;"	m	class:DecafJaccParser	file:
yys151	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys151() {$/;"	m	class:DecafJaccParser	file:
yys152	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys152() {$/;"	m	class:DecafJaccParser	file:
yys153	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys153() {$/;"	m	class:DecafJaccParser	file:
yys154	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys154() {$/;"	m	class:DecafJaccParser	file:
yys157	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys157() {$/;"	m	class:DecafJaccParser	file:
yys158	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys158() {$/;"	m	class:DecafJaccParser	file:
yys16	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys16() {$/;"	m	class:DecafJaccParser	file:
yys160	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys160() {$/;"	m	class:DecafJaccParser	file:
yys162	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys162() {$/;"	m	class:DecafJaccParser	file:
yys163	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys163() {$/;"	m	class:DecafJaccParser	file:
yys164	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys164() {$/;"	m	class:DecafJaccParser	file:
yys165	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys165() {$/;"	m	class:DecafJaccParser	file:
yys166	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys166() {$/;"	m	class:DecafJaccParser	file:
yys167	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys167() {$/;"	m	class:DecafJaccParser	file:
yys169	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys169() {$/;"	m	class:DecafJaccParser	file:
yys17	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys17() {$/;"	m	class:DecafJaccParser	file:
yys170	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys170() {$/;"	m	class:DecafJaccParser	file:
yys171	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys171() {$/;"	m	class:DecafJaccParser	file:
yys172	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys172() {$/;"	m	class:DecafJaccParser	file:
yys174	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys174() {$/;"	m	class:DecafJaccParser	file:
yys176	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys176() {$/;"	m	class:DecafJaccParser	file:
yys177	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys177() {$/;"	m	class:DecafJaccParser	file:
yys179	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys179() {$/;"	m	class:DecafJaccParser	file:
yys18	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys18() {$/;"	m	class:DecafJaccParser	file:
yys180	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys180() {$/;"	m	class:DecafJaccParser	file:
yys181	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys181() {$/;"	m	class:DecafJaccParser	file:
yys182	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys182() {$/;"	m	class:DecafJaccParser	file:
yys183	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys183() {$/;"	m	class:DecafJaccParser	file:
yys184	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys184() {$/;"	m	class:DecafJaccParser	file:
yys185	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys185() {$/;"	m	class:DecafJaccParser	file:
yys186	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys186() {$/;"	m	class:DecafJaccParser	file:
yys188	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys188() {$/;"	m	class:DecafJaccParser	file:
yys189	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys189() {$/;"	m	class:DecafJaccParser	file:
yys19	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys19() {$/;"	m	class:DecafJaccParser	file:
yys190	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys190() {$/;"	m	class:DecafJaccParser	file:
yys191	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys191() {$/;"	m	class:DecafJaccParser	file:
yys192	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys192() {$/;"	m	class:DecafJaccParser	file:
yys193	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys193() {$/;"	m	class:DecafJaccParser	file:
yys194	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys194() {$/;"	m	class:DecafJaccParser	file:
yys195	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys195() {$/;"	m	class:DecafJaccParser	file:
yys196	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys196() {$/;"	m	class:DecafJaccParser	file:
yys198	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys198() {$/;"	m	class:DecafJaccParser	file:
yys199	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys199() {$/;"	m	class:DecafJaccParser	file:
yys200	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys200() {$/;"	m	class:DecafJaccParser	file:
yys32	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys32() {$/;"	m	class:DecafJaccParser	file:
yys34	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys34() {$/;"	m	class:DecafJaccParser	file:
yys38	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys38() {$/;"	m	class:DecafJaccParser	file:
yys51	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys51() {$/;"	m	class:DecafJaccParser	file:
yys52	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys52() {$/;"	m	class:DecafJaccParser	file:
yys59	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys59() {$/;"	m	class:DecafJaccParser	file:
yys60	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys60() {$/;"	m	class:DecafJaccParser	file:
yys64	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys64() {$/;"	m	class:DecafJaccParser	file:
yys65	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys65() {$/;"	m	class:DecafJaccParser	file:
yys66	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys66() {$/;"	m	class:DecafJaccParser	file:
yys67	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys67() {$/;"	m	class:DecafJaccParser	file:
yys68	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys68() {$/;"	m	class:DecafJaccParser	file:
yys69	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys69() {$/;"	m	class:DecafJaccParser	file:
yys72	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys72() {$/;"	m	class:DecafJaccParser	file:
yys73	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys73() {$/;"	m	class:DecafJaccParser	file:
yys75	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys75() {$/;"	m	class:DecafJaccParser	file:
yys81	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys81() {$/;"	m	class:DecafJaccParser	file:
yys82	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys82() {$/;"	m	class:DecafJaccParser	file:
yys83	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys83() {$/;"	m	class:DecafJaccParser	file:
yys87	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys87() {$/;"	m	class:DecafJaccParser	file:
yys88	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys88() {$/;"	m	class:DecafJaccParser	file:
yys89	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys89() {$/;"	m	class:DecafJaccParser	file:
yys9	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys9() {$/;"	m	class:DecafJaccParser	file:
yys92	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys92() {$/;"	m	class:DecafJaccParser	file:
yys93	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys93() {$/;"	m	class:DecafJaccParser	file:
yys94	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys94() {$/;"	m	class:DecafJaccParser	file:
yys95	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys95() {$/;"	m	class:DecafJaccParser	file:
yys96	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys96() {$/;"	m	class:DecafJaccParser	file:
yys97	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys97() {$/;"	m	class:DecafJaccParser	file:
yys98	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys98() {$/;"	m	class:DecafJaccParser	file:
yys99	build/generated-src/jacc/DecafJaccParser.java	/^    private int yys99() {$/;"	m	class:DecafJaccParser	file:
yysp	build/generated-src/jacc/DecafJaccParser.java	/^    private int yysp = 0;$/;"	f	class:DecafJaccParser	file:
yyss	build/generated-src/jacc/DecafJaccParser.java	/^    private int yyss = 100;$/;"	f	class:DecafJaccParser	file:
yyst	build/generated-src/jacc/DecafJaccParser.java	/^    private int[] yyst;$/;"	f	class:DecafJaccParser	file:
yystate	build/generated-src/jflex/DecafLexer.java	/^  public final int yystate() {$/;"	m	class:DecafLexer
yysv	build/generated-src/jacc/DecafJaccParser.java	/^    private SemValue[] yysv;$/;"	f	class:DecafJaccParser	file:
yytext	build/generated-src/jflex/DecafLexer.java	/^  public final String yytext() {$/;"	m	class:DecafLexer
yytok	build/generated-src/jacc/DecafJaccParser.java	/^    private int yytok;$/;"	f	class:DecafJaccParser	file:
zipStoreBase	gradle/wrapper/gradle-wrapper.properties	/^zipStoreBase=GRADLE_USER_HOME$/;"	k
zipStorePath	gradle/wrapper/gradle-wrapper.properties	/^zipStorePath=wrapper\/dists$/;"	k
zzAtBOL	build/generated-src/jflex/DecafLexer.java	/^  private boolean zzAtBOL = true;$/;"	f	class:DecafLexer	file:
zzAtEOF	build/generated-src/jflex/DecafLexer.java	/^  private boolean zzAtEOF;$/;"	f	class:DecafLexer	file:
zzBuffer	build/generated-src/jflex/DecafLexer.java	/^  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];$/;"	f	class:DecafLexer	file:
zzCurrentPos	build/generated-src/jflex/DecafLexer.java	/^  private int zzCurrentPos;$/;"	f	class:DecafLexer	file:
zzDoEOF	build/generated-src/jflex/DecafLexer.java	/^  private void zzDoEOF() throws java.io.IOException {$/;"	m	class:DecafLexer	file:
zzEOFDone	build/generated-src/jflex/DecafLexer.java	/^  private boolean zzEOFDone;$/;"	f	class:DecafLexer	file:
zzEndRead	build/generated-src/jflex/DecafLexer.java	/^  private int zzEndRead;$/;"	f	class:DecafLexer	file:
zzFinalHighSurrogate	build/generated-src/jflex/DecafLexer.java	/^  private int zzFinalHighSurrogate = 0;$/;"	f	class:DecafLexer	file:
zzLexicalState	build/generated-src/jflex/DecafLexer.java	/^  private int zzLexicalState = YYINITIAL;$/;"	f	class:DecafLexer	file:
zzMarkedPos	build/generated-src/jflex/DecafLexer.java	/^  private int zzMarkedPos;$/;"	f	class:DecafLexer	file:
zzReader	build/generated-src/jflex/DecafLexer.java	/^  private java.io.Reader zzReader;$/;"	f	class:DecafLexer	file:
zzRefill	build/generated-src/jflex/DecafLexer.java	/^  private boolean zzRefill() throws java.io.IOException {$/;"	m	class:DecafLexer	file:
zzScanError	build/generated-src/jflex/DecafLexer.java	/^  private void zzScanError(int errorCode) {$/;"	m	class:DecafLexer	file:
zzStartRead	build/generated-src/jflex/DecafLexer.java	/^  private int zzStartRead;$/;"	f	class:DecafLexer	file:
zzState	build/generated-src/jflex/DecafLexer.java	/^  private int zzState;$/;"	f	class:DecafLexer	file:
zzUnpackAction	build/generated-src/jflex/DecafLexer.java	/^  private static int [] zzUnpackAction() {$/;"	m	class:DecafLexer	file:
zzUnpackAction	build/generated-src/jflex/DecafLexer.java	/^  private static int zzUnpackAction(String packed, int offset, int [] result) {$/;"	m	class:DecafLexer	file:
zzUnpackAttribute	build/generated-src/jflex/DecafLexer.java	/^  private static int [] zzUnpackAttribute() {$/;"	m	class:DecafLexer	file:
zzUnpackAttribute	build/generated-src/jflex/DecafLexer.java	/^  private static int zzUnpackAttribute(String packed, int offset, int [] result) {$/;"	m	class:DecafLexer	file:
zzUnpackCMap	build/generated-src/jflex/DecafLexer.java	/^  private static char [] zzUnpackCMap(String packed) {$/;"	m	class:DecafLexer	file:
zzUnpackRowMap	build/generated-src/jflex/DecafLexer.java	/^  private static int [] zzUnpackRowMap() {$/;"	m	class:DecafLexer	file:
zzUnpackRowMap	build/generated-src/jflex/DecafLexer.java	/^  private static int zzUnpackRowMap(String packed, int offset, int [] result) {$/;"	m	class:DecafLexer	file:
zzUnpackTrans	build/generated-src/jflex/DecafLexer.java	/^  private static int [] zzUnpackTrans() {$/;"	m	class:DecafLexer	file:
zzUnpackTrans	build/generated-src/jflex/DecafLexer.java	/^  private static int zzUnpackTrans(String packed, int offset, int [] result) {$/;"	m	class:DecafLexer	file:
